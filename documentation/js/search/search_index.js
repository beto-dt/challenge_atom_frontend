var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.764,1,1.576]],["body/components/AppComponent.html",[0,1.239,1,2.724,2,2.405,3,0.189,4,0.189,5,1.915,6,1.915,7,1.915,8,1.915,9,0.165,10,3.387,11,2.272,12,3.497,13,1.805,14,2.797,15,2.833,16,1.423,17,1.931,18,1.741,19,1.496,20,5.919,21,2.036,22,5.919,23,2.036,24,5.263,25,0.317,26,0.839,27,3.729,28,0.744,29,3.95,30,1.985,31,0.792,32,3.95,33,0.63,34,0.02,35,0.89,36,0.29,37,0.432,38,5.263,39,3.95,40,0.63,41,1.655,42,0.464,43,0.317,44,1.613,45,3.387,46,3.016,47,3.016,48,2.334,49,2.334,50,0.189,51,0.345,52,1.613,53,3.95,54,2.739,55,1.915,56,3.497,57,2.739,58,2.739,59,2.334,60,2.334,61,3.387,62,2.334,63,2.334,64,3.016,65,1.805,66,2.518,67,1.449,68,2.552,69,2.552,70,1.915,71,3.061,72,1.915,73,1.915,74,1.376,75,1.805,76,2.552,77,1.449,78,1.705,79,1.915,80,1.449,81,1.915,82,1.376,83,1.542,84,1.705,85,1.528,86,1.915,87,1.528,88,1.915,89,1.449,90,1.915,91,1.449,92,0.965,93,1.805,94,1.528,95,1.915,96,1.915,97,0.014,98,0.014]],["title/injectables/AuthFacade.html",[99,0.345,100,2.157]],["body/injectables/AuthFacade.html",[3,0.141,4,0.141,9,0.123,16,0.799,25,0.237,26,0.686,28,0.81,31,0.958,33,0.808,34,0.02,35,0.762,36,0.372,37,0.554,40,0.887,42,0.479,43,0.237,44,1.207,50,0.141,51,0.258,78,2.187,92,1.238,97,0.011,98,0.011,99,0.406,100,2.541,101,0.84,102,2.535,103,0.998,104,2.316,105,2.153,106,4.346,107,4.346,108,2.982,109,4.3,110,2.956,111,4.278,112,4.416,113,2.91,114,3.508,115,3.514,116,4.249,117,4.3,118,2.982,119,0.722,120,2.956,121,3.283,122,1.841,123,3.399,124,2.915,125,1.285,126,2.479,127,2.272,128,1.988,129,2.059,130,1.844,131,4.346,132,4.3,133,2.956,134,3.687,135,2.219,136,3.687,137,2.741,138,1.965,139,1.965,140,2.741,141,2.272,142,2.153,143,3.687,144,2.153,145,3.283,146,2.956,147,3.687,148,2.956,149,3.687,150,2.956,151,2.257,152,2.257,153,4.346,154,2.535,155,0.799,156,1.885,157,1.885,158,2.956,159,4.3,160,2.956,161,2.05,162,1.747,163,0.84,164,2.956,165,2.956,166,1.352,167,3.687,168,3.687,169,1.105,170,2.956,171,4.3,172,4.3,173,3.283,174,3.687,175,2.541,176,3.283,177,2.956,178,3.283,179,1.498,180,3.687,181,3.687,182,2.956,183,3.231,184,3.514,185,3.87,186,3.283,187,3.687,188,2.956,189,2.956,190,2.535,191,1.856]],["title/guards/AuthGuard.html",[192,2.788,193,2.532]],["body/guards/AuthGuard.html",[3,0.225,4,0.225,9,0.196,11,2.027,16,1.27,18,1.554,25,0.377,26,0.939,28,1.109,31,0.886,33,0.749,34,0.02,35,0.707,36,0.345,37,0.513,40,0.749,42,0.51,43,0.377,44,1.918,48,2.775,49,2.775,50,0.225,51,0.41,97,0.015,98,0.015,99,0.556,105,1.851,113,3.237,114,3.959,128,1.922,155,1.27,161,3.257,163,1.335,169,1.169,193,4.082,194,4.698,195,4.028,196,6.073,197,4.698,198,4.698,199,4.698,200,5.887,201,2.404,202,6.43,203,2.588,204,4.698,205,4.698]],["title/modules/AuthModule.html",[206,1.576,207,2.532]],["body/modules/AuthModule.html",[3,0.227,4,0.227,9,0.198,19,1.685,34,0.02,42,0.522,43,0.381,50,0.227,51,0.414,67,1.742,80,2.606,91,2.606,97,0.015,98,0.015,100,4.196,206,2.049,207,5.182,208,2.302,209,2.616,210,3.027,211,3.027,212,3.817,213,2.616,214,4.071,215,4.071,216,4.071,217,4.527,218,3.778,219,3.027,220,2.805,221,4.748,222,3.502,223,1.961,224,1.419,225,4.748,226,4.071,227,4.071,228,4.071,229,3.027,230,4.071,231,4.071]],["title/modules/AuthRoutingModule.html",[206,1.576,217,2.327]],["body/modules/AuthRoutingModule.html",[0,1.108,3,0.253,4,0.253,9,0.221,19,1.505,30,1.665,34,0.02,42,0.498,43,0.425,44,2.162,50,0.253,51,0.462,80,2.324,97,0.016,98,0.016,208,2.567,213,2.916,217,4.038,222,3.743,227,4.54,232,5.294,233,4.54,234,4.393,235,5.176,236,1.583,237,4.54,238,3.671,239,3.375,240,4.54]],["title/injectables/AuthService.html",[99,0.345,113,1.668]],["body/injectables/AuthService.html",[3,0.156,4,0.156,9,0.137,16,0.884,25,0.263,26,0.737,28,0.871,31,1.025,33,0.737,34,0.02,35,0.696,36,0.394,37,0.505,40,0.98,41,2.007,42,0.469,43,0.263,44,1.336,48,1.933,49,1.933,50,0.156,51,0.285,92,1.665,97,0.012,98,0.012,99,0.437,101,0.93,103,1.074,105,2.197,113,2.113,114,3.615,119,0.383,122,1.53,124,2.881,125,0.978,127,2.38,129,1.611,130,2.004,138,2.113,139,2.664,140,2.948,141,2.19,142,2.075,144,1.789,145,3.531,151,2.498,155,0.884,162,1.933,163,0.93,166,1.029,169,0.919,201,1.888,203,1.802,236,0.978,238,3.207,239,4.069,241,2.805,242,4.696,243,5.363,244,5.363,245,5.363,246,5.829,247,5.829,248,5.829,249,3.207,250,4.998,251,3.272,252,3.772,253,4.624,254,3.272,255,3.965,256,4.998,257,3.272,258,2.948,259,4.624,260,4.624,261,3.965,262,3.272,263,2.948,264,3.531,265,4.624,266,4.624,267,3.272,268,3.965,269,2.547,270,3.272,271,2.547,272,1.314,273,4.624,274,3.272,275,3.272,276,3.272,277,2.805,278,3.272,279,4.624,280,3.272,281,3.272,282,4.624,283,3.272,284,3.272,285,3.272,286,3.272,287,2.805]],["title/components/ConfirmDialogComponent.html",[0,0.764,74,1.272]],["body/components/ConfirmDialogComponent.html",[0,1.091,1,1.341,2,2.036,3,0.148,4,0.148,5,1.506,6,1.506,7,1.506,8,1.506,9,0.13,13,1.419,14,2.676,15,2.676,17,1.635,18,1.474,19,1.267,21,1.724,23,1.724,25,0.249,26,0.71,28,0.839,30,0.977,31,0.907,33,0.495,34,0.02,35,0.784,36,0.383,37,0.339,40,0.71,41,1.79,42,0.418,43,0.249,50,0.213,51,0.271,55,1.506,59,1.835,65,1.419,67,1.14,68,2.161,69,2.161,70,1.506,71,2.761,72,1.506,73,1.506,74,1.983,75,3.022,76,2.161,77,1.14,78,1.341,79,1.506,80,1.14,81,1.506,82,1.082,83,1.391,84,1.341,85,1.202,86,1.506,87,1.202,88,1.506,89,1.14,90,1.506,91,1.14,92,0.759,93,1.419,94,2.332,95,1.506,96,1.506,97,0.012,98,0.012,103,1.035,119,0.666,129,1.983,130,1.702,223,1.724,224,0.928,271,3.137,288,4.791,289,4,290,2.372,291,2.527,292,2.016,293,4.469,294,3.821,295,3.457,296,2.755,297,2.761,298,2.938,299,3.948,300,2.663,301,3.321,302,3.843,303,3.106,304,3.106,305,3.137,306,4.882,307,3.821,308,3.106,309,3.821,310,2.372,311,2.455,312,3.106,313,3.106,314,1.711,315,1.711,316,1.419,317,1.268,318,0.685,319,1.835,320,2.372,321,2.372,322,2.372,323,2.372,324,2.372,325,2.154,326,2.154,327,2.154,328,4.456,329,4.456,330,2.841,331,4.456,332,4.456,333,2.372,334,2.372,335,3.09,336,1.603,337,2.372,338,2.154,339,1.603,340,2.154,341,1.923,342,2.663,343,2.372,344,2.663,345,3.106,346,1.835,347,1.603,348,1.603,349,1.711]],["title/interfaces/ConfirmDialogData.html",[302,2.327,318,0.805]],["body/interfaces/ConfirmDialogData.html",[0,1.143,3,0.199,4,0.199,9,0.174,14,1.615,15,1.615,17,1.532,18,1.381,19,1.186,21,1.615,23,1.615,25,0.335,28,0.786,30,2.028,34,0.02,36,0.492,37,0.597,41,1.716,42,0.474,43,0.335,50,0.261,51,0.364,74,1.454,75,2.779,94,1.615,97,0.014,98,0.014,103,1.267,119,0.859,129,1.901,130,1.632,223,1.806,224,1.248,271,3.007,288,3.187,289,2.661,290,3.187,291,2.647,292,2.112,293,3.579,294,3.579,295,3.007,296,1.907,297,2.024,298,2.154,299,2.894,301,3.007,302,3.877,305,3.007,306,4.68,307,3.579,309,3.579,311,2.299,314,2.299,315,2.299,316,1.907,317,1.704,318,0.921,319,3.811,320,4.925,321,4.925,322,4.925,323,4.644,324,4.644,325,4.217,326,2.894,327,2.894,350,1.704]],["title/modules/CoreModule.html",[206,1.576,351,2.327]],["body/modules/CoreModule.html",[3,0.205,4,0.205,9,0.179,19,1.219,34,0.02,37,0.469,42,0.541,43,0.344,44,1.751,50,0.205,51,0.374,67,1.573,97,0.014,98,0.014,113,3.161,144,1.659,156,2.733,157,2.733,161,2.973,206,1.85,208,2.079,209,2.362,210,2.733,211,2.733,212,3.64,213,3.06,218,3.54,219,2.733,220,2.533,222,3.282,223,1.838,224,1.282,234,3.851,252,4.087,277,3.676,351,4.669,352,3.676,353,3.676,354,3.81,355,4.287,356,5.554,357,4.241,358,6.161,359,4.763,360,4.763,361,3.274,362,4.241,363,4.287,364,3.54,365,4.287,366,4.287,367,3.274,368,3.274,369,4.241,370,4.287,371,4.241,372,4.287,373,3.274,374,3.274,375,3.274,376,3.676,377,3.676,378,4.287,379,5.554,380,4.287,381,4.287]],["title/injectables/CreateTaskUseCase.html",[99,0.345,382,2.532]],["body/injectables/CreateTaskUseCase.html",[3,0.215,4,0.215,9,0.188,16,1.218,25,0.362,26,0.914,28,0.849,30,1.803,31,0.863,33,0.914,34,0.02,35,0.863,36,0.488,37,0.627,40,0.718,42,0.488,43,0.362,50,0.215,51,0.393,52,1.84,83,1.401,97,0.015,98,0.015,99,0.541,101,1.281,119,0.802,125,1.714,128,1.886,144,1.743,155,1.218,163,1.281,166,1.803,169,0.895,191,2.475,236,1.347,382,3.976,383,5.409,384,3.125,385,3.388,386,3.125,387,3.658,388,3.864,389,2.959,390,4.379,391,4.604,392,4.379,393,3.864,394,2.218,395,2.722,396,1.84,397,3.125,398,4.506,399,3.864,400,3.864,401,2.662,402,3.441,403,2.325,404,2.662,405,4.506]],["title/injectables/CreateUserUseCase.html",[99,0.345,112,2.532]],["body/injectables/CreateUserUseCase.html",[3,0.219,4,0.219,9,0.192,16,1.241,25,0.369,26,0.925,28,0.864,31,0.873,33,0.925,34,0.02,35,0.873,36,0.426,37,0.634,40,0.925,42,0.491,43,0.369,50,0.219,51,0.401,52,1.874,92,1.121,97,0.015,98,0.015,99,0.548,101,1.305,112,4.023,119,0.745,121,4.43,122,1.92,123,3.682,124,2.875,125,1.372,126,2.453,127,2.369,128,2.061,129,2.021,130,1.734,131,4.975,155,1.241,162,2.712,163,1.305,166,1.443,169,0.912,385,3.428,406,5.455,407,3.505,408,3.936,409,4.261,410,3.936,411,3.428,412,4.975,413,3.936,414,3.936,415,4.59]],["title/pipes/DateFormatPipe.html",[416,2.532,417,2.011]],["body/pipes/DateFormatPipe.html",[3,0.176,4,0.176,9,0.154,11,1.591,13,1.685,17,1.843,18,1.662,26,0.588,31,0.86,33,0.801,34,0.02,35,0.923,36,0.369,37,0.549,40,0.801,42,0.369,43,0.296,50,0.176,51,0.322,66,4.224,97,0.013,98,0.013,103,0.856,105,1.93,119,0.828,122,1.22,141,2.051,142,2.374,144,2.211,169,1.347,224,1.102,236,1.981,341,2.467,404,4.078,416,3.484,417,2.768,418,3.687,419,5.262,420,3.161,421,4.308,422,3.687,423,5.024,424,3.687,425,3.161,426,5.024,427,4.364,428,6.422,429,3.687,430,5.024,431,5.715,432,5.024,433,3.484,434,3.687,435,5.024,436,3.687,437,3.687,438,3.687,439,3.687,440,3.687,441,3.687,442,3.687,443,3.687,444,3.687,445,3.687,446,3.161,447,6.137,448,3.687,449,5.024,450,6.137,451,3.687,452,6.137,453,3.687,454,3.687,455,6.781,456,3.687,457,3.687,458,3.687,459,3.687,460,3.687,461,3.687,462,3.687]],["title/injectables/DeleteTaskUseCase.html",[99,0.345,463,2.532]],["body/injectables/DeleteTaskUseCase.html",[3,0.228,4,0.228,9,0.199,16,1.292,25,0.384,26,0.949,28,0.9,31,0.895,33,0.949,34,0.02,35,0.895,36,0.437,37,0.65,40,0.762,42,0.476,43,0.384,50,0.228,51,0.417,52,1.951,97,0.015,98,0.015,99,0.562,101,1.358,119,0.817,128,1.937,155,1.292,163,1.358,166,1.871,169,0.949,384,3.314,385,3.516,386,3.314,387,3.736,389,3.07,390,3.649,394,2.302,395,2.568,397,3.314,463,4.126,464,5.557,465,4.779,466,3.844,467,4.779,468,3.07,469,4.779,470,4.779]],["title/injectables/ErrorHandlerService.html",[99,0.345,364,2.327]],["body/injectables/ErrorHandlerService.html",[3,0.127,4,0.127,9,0.111,11,1.148,16,0.719,25,0.214,26,0.634,28,0.501,31,0.926,33,0.947,34,0.02,35,0.893,36,0.436,37,0.649,40,0.947,41,2.13,42,0.465,43,0.214,44,1.087,48,1.572,49,1.572,50,0.127,51,0.232,52,1.087,92,0.972,97,0.01,98,0.01,99,0.376,101,0.756,104,3.374,105,2.192,113,1.818,114,2.192,115,3.667,116,2.032,119,0.558,122,1.75,125,0.795,130,1.189,156,1.696,157,1.696,163,0.756,166,0.837,179,2.36,183,1.696,184,1.845,203,1.466,236,1.425,272,1.131,319,3.638,341,1.148,357,3.038,361,2.032,364,2.536,374,2.032,375,2.032,471,5.428,472,2.282,473,3.979,474,3.979,475,3.979,476,4.535,477,3.412,478,3.979,479,2.661,480,5.94,481,2.661,482,3.979,483,5.978,484,2.661,485,4.834,486,3.979,487,3.979,488,4.035,489,3.038,490,3.979,491,3.979,492,2.661,493,4.536,494,5.289,495,3.412,496,3.979,497,2.661,498,3.979,499,2.661,500,3.412,501,3.639,502,3.979,503,2.661,504,4.038,505,4.535,506,3.412,507,3.979,508,2.661,509,3.979,510,3.979,511,3.979,512,4.038,513,1.696,514,2.282,515,2.661,516,2.032,517,2.032,518,2.661,519,2.661,520,2.661,521,3.038,522,2.536,523,3.979,524,3.639,525,3.979,526,2.661,527,2.661,528,2.661,529,2.661,530,2.282,531,4.854,532,2.032,533,2.661,534,3.926,535,2.282,536,2.661,537,2.032,538,2.661,539,1.466,540,2.661,541,2.661,542,2.661,543,2.661,544,2.661,545,2.282,546,2.282,547,2.661,548,2.661,549,2.282,550,2.282,551,2.282,552,1.572,553,2.282,554,1.466,555,2.282]],["title/injectables/FindUserUseCase.html",[99,0.345,111,2.532]],["body/injectables/FindUserUseCase.html",[3,0.216,4,0.216,9,0.188,16,1.22,25,0.362,26,0.915,28,0.85,31,0.864,33,0.915,34,0.02,35,0.864,36,0.422,37,0.628,40,0.915,42,0.488,43,0.362,50,0.216,51,0.394,52,1.844,92,1.103,97,0.015,98,0.015,99,0.542,101,1.283,111,3.982,119,0.739,122,1.9,124,2.863,125,1.35,126,2.573,127,2.345,128,2.051,129,2,130,1.716,134,4.923,135,2.963,136,4.923,137,3.66,138,2.624,139,2.624,140,3.66,155,1.22,162,2.668,163,1.283,166,1.42,169,0.897,385,3.392,407,3.448,408,3.872,409,4.235,410,3.872,411,3.392,412,4.923,413,3.872,414,3.872,556,5.414,557,4.515]],["title/injectables/GetTasksUseCase.html",[99,0.345,558,2.532]],["body/injectables/GetTasksUseCase.html",[3,0.228,4,0.228,9,0.199,16,1.292,25,0.384,26,0.949,28,0.9,31,0.895,33,0.949,34,0.02,35,0.895,36,0.437,37,0.65,40,0.762,42,0.498,43,0.384,50,0.228,51,0.417,52,1.951,83,1.168,97,0.015,98,0.015,99,0.562,101,1.358,119,0.759,128,1.937,135,3.07,155,1.292,163,1.358,166,1.503,169,0.949,385,3.516,386,3.314,387,3.736,389,3.07,390,4.544,394,2.302,395,2.568,396,1.951,397,3.314,558,4.126,559,5.557,560,4.098,561,4.779,562,4.779,563,4.544,564,2.302,565,4.779]],["title/injectables/HttpBaseService.html",[99,0.345,354,2.011]],["body/injectables/HttpBaseService.html",[3,0.126,4,0.126,9,0.11,16,0.712,25,0.212,26,0.63,28,0.496,31,0.923,33,1.048,34,0.02,35,0.89,36,0.483,37,0.647,40,0.899,42,0.387,43,0.212,50,0.126,51,0.23,52,1.076,97,0.01,98,0.01,99,0.373,101,0.749,103,0.917,105,1.49,119,0.791,122,1.307,125,1.573,127,2.578,128,1.93,138,1.204,141,1.076,142,1.02,144,1.02,155,0.712,163,0.749,166,2.099,169,1.12,179,2.199,236,0.788,272,1.496,354,2.176,361,2.012,488,2.518,512,5.02,513,1.68,514,2.26,566,5.413,567,2.26,568,4.738,569,4.063,570,3.95,571,4.513,572,5.263,573,5.263,574,2.636,575,5.263,576,3.95,577,3.95,578,2.636,579,3.95,580,3.95,581,5.263,582,6.455,583,6.138,584,5.919,585,3.95,586,7.17,587,6.837,588,2.636,589,4.513,590,6.312,591,3.477,592,6.762,593,5.353,594,6.312,595,6.312,596,6.312,597,6.575,598,3.95,599,2.636,600,3.95,601,3.95,602,6.575,603,2.636,604,5.263,605,3.95,606,2.636,607,3.95,608,3.95,609,2.636,610,2.636,611,2.636,612,2.636,613,2.636,614,2.636,615,3.95,616,2.636,617,2.636,618,2.636]],["title/components/LoadingIndicatorComponent.html",[0,0.764,77,1.34]],["body/components/LoadingIndicatorComponent.html",[0,1.141,1,1.453,2,2.156,3,0.161,4,0.161,5,1.632,6,1.632,7,1.632,8,1.632,9,0.14,13,1.538,14,2.718,15,2.718,17,1.731,18,1.561,19,1.341,21,1.825,23,1.825,25,0.379,31,0.888,34,0.02,35,0.71,36,0.434,42,0.4,43,0.27,50,0.161,51,0.294,54,2.334,55,1.632,56,2.787,57,2.334,58,2.334,60,1.989,62,1.989,63,3.672,65,1.538,67,1.235,68,2.288,69,2.288,70,1.632,71,2.863,72,1.632,73,1.632,74,1.173,75,1.538,76,2.288,77,2.166,78,2.961,79,1.632,80,1.235,81,1.632,82,1.173,83,1.442,84,1.453,85,1.302,86,1.632,87,1.302,88,1.632,89,1.235,90,1.632,91,1.235,92,0.822,93,1.538,94,1.302,95,1.632,96,1.632,97,0.012,98,0.012,119,0.552,138,2.698,141,2.41,142,2.284,201,1.375,223,1.802,224,1.006,323,4.508,324,3.603,325,3.272,336,1.737,339,1.737,341,2.548,347,1.737,348,2.81,402,3.603,427,2.57,446,2.886,552,2.787,619,5.33,620,3.962,621,2.886,622,4.718,623,4.159,624,5.447,625,4.718,626,3.603,627,5.447,628,5.903,629,4.107,630,3.366,631,4.046,632,3.366,633,3.366,634,3.366,635,4.508,636,4.718,637,2.886,638,2.886,639,3.366,640,2.886,641,2.334,642,2.334,643,2.146,644,3.366,645,3.366,646,2.787,647,2.886,648,2.787,649,2.57,650,3.603,651,3.366,652,3.366,653,3.366,654,3.366,655,3.366,656,1.989,657,2.146,658,2.146,659,2.334]],["title/injectables/LocalStorageService.html",[99,0.345,252,2.157]],["body/injectables/LocalStorageService.html",[3,0.163,4,0.163,9,0.143,16,0.924,25,0.274,26,0.76,31,0.826,33,0.996,34,0.02,35,0.826,36,0.459,37,0.6,40,0.947,41,1.869,42,0.251,43,0.274,50,0.163,51,0.298,97,0.012,98,0.012,99,0.45,101,0.972,104,2.959,119,0.806,122,2.142,125,1.642,127,2.427,130,1.777,137,3.04,138,2.959,139,2.179,140,3.04,142,2.299,163,0.972,166,1.869,169,0.947,175,2.818,179,2.07,236,1.426,252,2.818,261,5.903,272,1.356,468,2.461,488,3.501,522,3.501,589,5.811,660,5.096,661,2.931,662,4.769,663,4.769,664,4.769,665,4.769,666,3.418,667,4.769,668,7.289,669,4.769,670,6.474,671,6.474,672,4.769,673,4.769,674,4.769,675,3.418,676,3.641,677,4.769,678,3.418,679,3.307,680,4.769,681,4.769,682,5.096,683,4.769,684,4.769,685,4.769,686,5.492,687,4.769,688,3.418,689,3.418,690,5.492,691,3.418,692,4.089,693,3.418,694,3.418,695,3.418,696,3.418,697,3.418]],["title/components/LoginComponent.html",[0,0.764,80,1.34]],["body/components/LoginComponent.html",[0,0.784,1,0.788,2,1.355,3,0.087,4,0.087,5,0.885,6,0.885,7,0.885,8,0.885,9,0.076,13,0.834,14,2.343,15,2.343,17,1.088,18,1.844,19,0.843,21,1.147,23,1.147,25,0.147,26,0.473,28,0.558,30,0.574,31,0.838,33,0.687,34,0.02,35,0.763,36,0.373,37,0.471,40,0.687,41,1.355,42,0.48,43,0.147,44,0.745,48,1.079,49,1.079,50,0.087,51,0.159,54,1.266,55,2.089,56,2.546,59,1.751,60,1.079,61,1.565,62,1.751,63,2.999,64,1.394,65,1.969,67,0.67,68,1.438,69,1.438,70,0.885,71,2.089,72,0.885,73,0.885,74,0.636,75,0.834,76,1.438,77,1.581,78,1.86,79,0.885,80,1.581,81,0.885,82,0.636,83,1.053,84,0.788,85,0.706,86,0.885,87,0.706,88,0.885,89,0.67,90,0.885,91,1.088,92,0.724,93,0.834,94,1.667,95,0.885,96,0.885,97,0.008,98,0.008,100,3.16,103,0.688,104,2.444,105,1.682,114,2.946,119,0.746,122,1.679,123,1.633,124,1.211,126,1.862,128,1.119,130,1.517,139,1.969,141,0.745,142,0.706,155,0.493,169,1.144,175,1.751,179,1.768,191,1.86,201,1.211,203,1.006,223,1.238,224,0.546,228,1.565,229,1.164,230,1.565,231,1.565,236,1.288,238,2.988,239,2.747,249,3.864,255,2.542,269,2.796,272,0.843,292,1.448,296,0.834,297,0.885,305,1.633,316,0.834,317,0.745,319,1.079,335,2.596,336,2.759,338,1.266,339,2.875,341,2.486,346,1.079,347,1.931,348,2.223,349,2.062,374,1.394,375,1.394,493,2.264,501,1.394,504,2.264,505,2.542,524,3.29,537,1.394,552,2.999,554,2.374,591,2.374,620,1.164,629,1.164,640,1.565,641,2.596,642,2.056,643,2.386,646,1.751,648,2.211,649,1.394,650,4.255,656,1.751,657,1.89,658,1.164,698,1.565,699,2.211,700,2.062,701,2.062,702,2.596,703,2.211,704,3.743,705,2.965,706,3.743,707,3.876,708,2.965,709,2.264,710,3.695,711,2.965,712,1.825,713,3.236,714,3.695,715,2.965,716,2.965,717,1.825,718,2.8,719,2.965,720,2.264,721,1.89,722,2.386,723,1.825,724,2.542,725,1.89,726,1.633,727,1.751,728,1.89,729,1.89,730,1.825,731,2.542,732,1.751,733,2.542,734,2.965,735,2.965,736,1.825,737,2.542,738,1.825,739,2.386,740,1.825,741,1.164,742,1.006,743,1.079,744,1.751,745,1.079,746,1.394,747,1.164,748,1.394,749,1.394,750,1.394,751,1.825,752,1.825,753,1.825,754,1.164,755,1.825,756,1.825,757,1.825,758,1.825,759,1.825,760,2.965,761,1.825,762,5.076,763,1.825,764,2.965,765,1.825,766,2.965,767,1.825,768,2.542,769,1.565,770,1.565,771,1.825,772,2.747,773,2.965,774,1.164,775,1.89,776,1.89,777,1.825,778,1.825,779,1.825,780,1.825,781,1.825,782,2.988,783,3.695,784,1.825,785,4.309,786,2.965,787,2.542,788,2.542,789,2.965,790,2.965,791,2.965,792,2.965,793,3.209,794,3.695,795,2.386,796,1.394,797,1.394,798,2.542,799,1.266,800,1.565,801,4.309,802,1.394,803,1.565,804,2.858,805,1.266,806,1.825,807,1.825,808,1.825,809,1.825,810,1.565,811,1.825,812,1.266,813,1.266,814,1.825,815,1.565,816,1.164,817,1.825,818,1.825]],["title/modules/SharedModule.html",[206,1.576,819,2.532]],["body/modules/SharedModule.html",[3,0.181,4,0.181,9,0.158,19,1.453,34,0.02,42,0.548,43,0.304,44,1.544,50,0.181,51,0.33,67,1.387,74,2.499,77,2.633,97,0.013,98,0.013,156,2.41,157,2.41,206,1.632,208,1.834,209,2.083,210,3.258,211,2.41,212,2.234,213,3.189,218,3.258,219,2.41,220,2.234,222,3.02,223,1.916,224,1.13,234,4.015,236,1.528,289,2.41,291,2.478,292,1.977,316,1.728,317,1.544,362,3.903,417,3.953,620,2.41,623,3.903,637,3.242,638,3.242,699,3.421,700,2.816,701,2.816,702,3.544,703,3.02,742,2.083,743,2.234,744,2.234,745,2.234,746,2.887,747,2.41,748,2.887,749,2.887,819,5.046,820,3.242,821,3.242,822,3.242,823,2.887,824,5.79,825,3.903,826,3.242,827,4.382,828,3.781,829,3.903,830,3.242,831,3.242,832,3.242,833,3.242,834,3.242,835,4.382,836,3.781,837,4.421,838,4.421]],["title/interfaces/Task.html",[83,0.892,318,0.805]],["body/interfaces/Task.html",[3,0.24,4,0.24,9,0.209,25,0.403,30,2.169,34,0.019,36,0.529,37,0.67,50,0.24,83,1.498,97,0.016,98,0.016,103,1.424,119,0.881,125,2.062,201,2.704,318,1.107,350,2.049,395,2.977,401,4.076,403,3.559,404,3.913,564,2.669,839,4.302]],["title/injectables/TaskApiService.html",[99,0.345,840,2.532]],["body/injectables/TaskApiService.html",[3,0.166,4,0.166,9,0.145,16,0.938,25,0.279,26,0.769,28,0.654,31,1.004,33,1.037,34,0.02,35,0.979,36,0.49,37,0.711,40,1.002,42,0.44,43,0.279,50,0.166,51,0.303,52,1.418,83,1.662,97,0.013,98,0.013,99,0.455,101,0.987,103,1.119,105,1.741,119,0.851,128,2.113,135,2.487,141,1.418,142,1.343,155,0.938,163,0.987,166,2.098,169,1.249,191,2.081,272,1.37,354,3.296,367,2.651,368,2.651,394,2.632,395,2.582,466,3.051,468,2.487,563,4.569,564,2.517,591,2.656,593,4.229,840,3.343,841,2.977,842,3.343,843,3.073,844,3.681,845,3.681,846,3.343,847,2.977,848,4.821,849,4.134,850,3.681,851,3.814,852,3.472,853,3.343,854,3.472,855,3.681,856,3.472,857,3.681,858,3.472,859,4.134,860,3.073,861,2.848,862,3.681,863,3.53,864,3.472,865,3.073,866,3.343,867,2.977,868,3.472,869,3.472,870,2.977,871,3.472,872,2.408,873,3.472]],["title/interfaces/TaskDto.html",[318,0.805,851,2.327]],["body/interfaces/TaskDto.html",[3,0.24,4,0.24,9,0.209,25,0.403,30,2.169,34,0.019,36,0.529,37,0.67,50,0.24,97,0.016,98,0.016,103,1.424,119,0.889,125,2.062,201,2.704,318,1.107,350,2.049,395,2.977,401,4.076,403,3.559,564,2.669,851,3.909,874,4.302]],["title/components/TaskEditDialog.html",[0,0.764,82,1.272]],["body/components/TaskEditDialog.html",[0,0.922,1,1.009,2,1.648,3,0.112,4,0.112,5,1.133,6,1.133,7,1.133,8,1.133,9,0.098,11,1.556,12,2.601,13,1.068,14,2.509,15,2.509,17,1.323,18,1.193,19,1.025,21,1.395,23,1.395,25,0.188,26,0.575,27,2.923,28,0.679,30,1.134,31,0.915,33,0.575,34,0.02,35,0.744,36,0.364,37,0.394,40,0.852,41,1.912,42,0.447,43,0.188,50,0.21,51,0.204,55,1.133,59,2.13,65,1.648,67,0.858,68,1.748,69,1.748,70,1.133,71,2.399,72,1.133,73,1.133,74,0.814,75,1.068,76,1.748,77,0.858,78,1.009,79,1.133,80,0.858,81,1.133,82,1.723,83,1.647,84,1.9,85,0.904,86,1.133,87,0.904,88,1.133,89,0.858,90,1.133,91,0.858,92,0.571,93,1.068,94,2.185,95,1.133,96,1.133,97,0.009,98,0.009,103,0.837,104,1.648,105,1.681,119,0.712,122,1.193,125,1.078,129,1.256,130,1.905,139,1.648,169,0.464,179,1.256,201,1.472,223,1.456,224,0.699,236,0.699,258,2.298,263,2.298,271,2.726,272,1.728,291,2.134,292,1.703,295,2.425,296,2.443,297,2.134,298,2.553,301,2.726,305,2.726,310,1.785,311,1.986,314,1.288,315,1.288,316,1.068,317,0.954,318,0.795,330,2.298,333,1.785,334,1.785,335,3.052,336,2.758,337,1.785,339,1.206,340,1.621,341,1.009,346,1.381,347,1.86,348,1.86,349,1.288,394,1.914,396,0.954,433,3.431,539,1.986,554,1.288,646,1.381,648,2.601,679,2.5,682,3.092,699,2.601,700,2.425,701,2.425,709,2.753,713,3.154,718,2.13,720,1.785,721,2.298,722,2.806,725,2.298,726,3.112,727,2.13,728,2.298,729,2.298,732,2.13,739,2.806,741,1.49,742,1.288,743,1.381,744,2.13,745,1.381,754,2.298,772,2.298,774,1.49,775,1.49,776,1.49,795,2.298,804,1.785,816,1.49,875,4.326,876,3.977,877,1.621,878,3.361,879,2.753,880,3.052,881,3.431,882,3.778,883,2.004,884,3.408,885,3.606,886,2.5,887,2.337,888,2.337,889,3.876,890,2.13,891,2.337,892,2.337,893,1.986,894,2.298,895,2.337,896,3.778,897,2.337,898,1.49,899,1.621,900,1.621,901,1.621,902,1.785,903,1.621,904,1.785,905,1.621,906,1.621,907,1.785,908,1.785,909,1.785,910,2.298,911,4.844,912,2.753,913,3.778,914,4.243,915,4.243,916,4.844,917,3.092,918,2.337,919,2.337,920,1.621]],["title/interfaces/TaskEditDialogData.html",[318,0.805,884,2.327]],["body/interfaces/TaskEditDialogData.html",[0,1.049,3,0.176,4,0.176,9,0.153,11,1.586,12,2.961,14,1.421,15,1.421,17,1.348,18,1.216,19,1.044,21,1.421,23,1.421,25,0.295,27,2.171,28,0.692,30,1.576,34,0.02,36,0.27,41,1.927,42,0.507,43,0.295,50,0.273,51,0.321,82,1.28,83,1.744,84,1.586,94,1.421,97,0.013,98,0.013,103,1.164,104,1.679,105,1.794,119,0.717,122,1.216,125,1.498,129,1.28,130,1.705,139,1.679,169,0.73,179,1.28,201,1.5,223,1.658,224,1.098,236,1.098,258,2.342,263,2.342,271,2.761,272,1.425,291,2.431,292,1.939,295,2.024,296,1.679,297,1.782,298,1.896,301,2.761,305,2.761,311,2.024,314,2.024,315,2.024,316,1.679,317,1.5,318,1.105,350,1.5,394,1.421,396,1.5,679,2.548,699,2.961,700,2.761,701,2.761,713,3.195,718,2.171,721,2.342,722,2.342,725,2.342,726,3.143,727,2.171,728,2.342,729,2.342,732,2.171,739,3.195,741,2.342,742,2.024,743,2.171,744,2.171,745,2.171,754,3.195,772,3.195,774,2.342,775,2.342,776,2.342,875,2.548,876,2.342,877,2.548,878,2.806,879,2.806,880,2.548,881,2.548,882,2.806,884,3.637,886,2.548,889,3.195,890,2.171,893,2.024,894,2.342,896,2.806,898,2.342,899,2.548,900,2.548,901,2.548,902,2.806,903,2.548,904,2.806,905,2.548,906,2.548,907,2.806,908,2.806,909,2.806]],["title/interfaces/TaskEditDialogResult.html",[318,0.805,898,2.327]],["body/interfaces/TaskEditDialogResult.html",[0,1.041,3,0.174,4,0.174,9,0.152,11,1.568,12,2.938,14,1.405,15,1.405,17,1.333,18,1.202,19,1.032,21,1.405,23,1.405,25,0.292,27,2.146,28,0.684,30,2.009,34,0.02,36,0.365,41,1.918,42,0.505,43,0.292,50,0.271,51,0.317,82,1.265,83,1.612,84,1.568,94,1.405,97,0.013,98,0.013,103,1.155,104,1.66,105,1.783,119,0.805,122,1.202,125,1.91,129,1.265,130,1.695,139,1.66,169,0.721,179,1.265,201,1.483,223,1.645,224,1.086,236,1.086,258,2.315,263,2.315,271,2.739,272,1.413,291,2.411,292,1.924,295,2.001,296,1.66,297,1.761,298,1.874,301,2.739,305,2.739,311,2.001,314,2.001,315,2.001,316,1.66,317,1.483,318,1.097,350,1.483,394,1.405,396,1.483,679,2.519,699,2.938,700,2.739,701,2.739,713,3.17,718,2.146,721,2.315,722,2.315,725,2.315,726,3.124,727,2.146,728,2.315,729,2.315,732,2.146,739,3.17,741,2.315,742,2.001,743,2.146,744,2.146,745,2.146,754,3.17,772,3.17,774,2.315,775,2.315,776,2.315,875,2.519,876,2.315,877,2.519,878,2.773,879,2.773,880,2.519,881,2.519,882,2.773,884,3.17,886,2.519,889,3.17,890,2.146,893,2.001,894,2.315,896,2.773,898,3.17,899,2.519,900,2.519,901,2.519,902,2.773,903,2.519,904,2.773,905,2.519,906,2.519,907,2.773,908,2.773,909,2.773]],["title/components/TaskFormComponent.html",[0,0.764,85,1.412]],["body/components/TaskFormComponent.html",[0,0.813,1,0.831,2,1.415,3,0.092,4,0.092,5,0.934,6,0.934,7,0.934,8,0.934,9,0.08,11,1.336,12,2.293,13,0.88,14,2.38,15,2.38,17,1.136,18,1.024,19,0.88,21,1.197,23,1.197,25,0.155,26,0.493,27,2.626,28,0.363,30,1.398,31,0.971,33,0.619,34,0.02,35,0.733,36,0.418,37,0.424,40,0.872,41,1.971,42,0.418,43,0.155,50,0.092,51,0.168,52,0.786,55,0.934,56,1.829,62,1.138,63,2.293,65,0.88,67,0.707,68,1.501,69,1.501,70,0.934,71,2.156,72,0.934,73,0.934,74,0.671,75,0.88,76,1.501,77,0.707,78,1.919,79,0.934,80,0.707,81,0.934,82,0.671,83,1.656,84,0.831,85,1.72,86,0.934,87,0.745,88,0.934,89,0.707,90,0.934,91,0.707,92,0.47,93,0.88,94,0.745,95,0.934,96,0.934,97,0.008,98,0.008,103,0.719,105,1.636,119,0.609,122,1.024,125,1.329,129,1.078,130,1.8,137,1.973,138,2.031,139,2.031,140,1.973,141,1.585,142,1.501,144,1.197,169,0.615,179,1.548,191,1.336,201,1.585,223,1.284,224,0.576,236,0.925,258,1.973,269,1.705,272,1.711,292,1.501,298,2.294,317,0.786,330,1.973,336,1.597,339,2.513,341,2.245,346,1.138,347,1.597,348,2.002,349,1.705,394,2.329,396,0.786,402,3.394,433,3.083,493,2.363,539,1.705,554,2.138,626,2.363,629,1.228,635,2.963,643,1.228,646,1.829,648,2.293,656,1.138,657,1.228,658,1.973,659,1.335,699,2.293,700,2.138,701,2.138,703,2.293,709,2.363,710,3.812,713,2.834,718,1.829,720,1.47,721,1.973,722,2.474,724,2.654,725,1.973,726,1.705,727,1.829,728,1.973,729,1.973,731,2.654,732,3.073,739,2.474,741,1.228,742,1.061,743,1.138,744,1.829,745,1.138,747,1.228,750,1.47,754,1.973,772,1.973,774,1.228,775,1.228,776,1.228,793,1.651,795,1.228,796,1.47,797,1.47,799,1.335,800,1.651,804,3.972,805,1.335,812,1.335,813,1.335,816,1.228,865,2.834,880,2.691,881,3.083,883,1.651,886,2.146,889,3.316,890,1.829,893,1.705,894,1.973,899,1.335,900,2.146,901,1.335,903,1.335,905,1.335,906,1.335,910,1.973,911,4.46,912,2.363,913,3.394,914,3.812,915,3.812,916,4.46,917,2.654,920,1.335,921,4.532,922,4.532,923,1.651,924,3.881,925,3.881,926,3.095,927,5.867,928,3.095,929,4.445,930,2.654,931,3.881,932,3.881,933,3.095,934,1.926,935,1.926,936,4.176,937,1.926,938,1.926,939,1.926,940,1.926,941,3.095,942,3.095,943,4.445,944,1.926,945,1.926,946,1.926,947,1.926,948,1.926,949,1.926,950,2.363,951,1.926,952,3.328,953,1.926,954,3.095,955,3.095,956,3.095,957,1.926,958,1.926,959,1.926,960,3.881,961,1.926,962,1.926,963,1.926,964,1.926,965,2.363,966,3.095,967,3.095,968,2.654,969,1.926,970,1.651,971,1.926,972,1.651,973,1.926,974,3.095,975,1.926,976,1.926,977,1.47]],["title/components/TaskItemComponent.html",[0,0.764,87,1.412]],["body/components/TaskItemComponent.html",[0,0.891,1,0.956,2,1.581,3,0.106,4,0.106,5,1.074,6,1.074,7,1.074,8,1.074,9,0.092,13,1.012,14,2.474,15,2.474,17,1.269,18,1.144,19,0.983,21,1.338,23,1.338,25,0.178,26,0.551,30,0.697,31,0.868,33,0.353,34,0.02,35,0.64,36,0.383,37,0.242,40,0.678,41,1.738,42,0.451,43,0.178,50,0.106,51,0.193,55,2.332,56,3.529,57,1.536,58,1.536,60,1.309,62,2.514,63,3.529,65,1.012,66,1.412,67,0.813,68,1.677,69,1.677,70,1.074,71,2.332,72,1.074,73,1.074,74,0.772,75,1.012,76,1.677,77,0.813,78,0.956,79,1.074,80,0.813,81,1.074,82,0.772,83,1.77,84,1.836,85,0.857,86,1.074,87,1.86,88,1.074,89,0.813,90,1.074,91,0.813,92,0.541,93,1.012,94,0.857,95,1.074,96,1.074,97,0.009,98,0.009,123,1.905,125,1.034,130,1.034,144,1.646,166,0.697,179,1.925,201,1.737,223,1.408,224,0.662,269,2.649,272,1.571,292,1.646,317,0.905,336,1.785,339,3.082,340,1.536,341,2.578,342,2.966,343,2.641,344,1.9,346,1.309,347,2.195,348,2.481,349,2.873,394,2.138,396,0.905,401,3.265,404,1.309,417,2.344,425,2.966,466,1.22,468,1.785,485,2.641,534,2.398,539,1.22,552,2.514,554,2.344,571,2.966,626,2.641,629,1.412,635,2.641,641,3.616,642,3.616,643,1.412,646,1.309,647,3.648,649,1.692,650,2.641,656,3.081,657,3.065,658,2.712,659,1.536,692,2.966,702,2.95,703,2.514,746,1.692,747,1.412,794,1.9,795,1.412,796,2.641,797,2.641,798,2.966,799,2.398,802,1.692,805,1.536,810,1.9,812,1.536,813,1.536,815,2.966,816,1.412,825,3.249,826,1.9,829,3.249,830,1.9,833,1.9,834,1.9,843,2.712,910,2.205,920,1.536,921,4.142,930,2.966,936,4.95,952,4.123,970,2.966,977,1.692,978,4.142,979,1.9,980,4.255,981,3.459,982,4.808,983,4.808,984,3.459,985,4.255,986,4.255,987,2.215,988,2.215,989,2.215,990,2.215,991,2.215,992,4.808,993,4.808,994,2.215,995,3.459,996,2.215,997,3.459,998,4.123,999,3.459,1000,2.966,1001,2.215,1002,2.215,1003,2.215,1004,2.215,1005,3.459,1006,3.459,1007,2.641,1008,3.459,1009,2.215,1010,3.459,1011,3.459,1012,3.459,1013,2.215,1014,3.459,1015,2.215,1016,2.215,1017,2.215,1018,3.459,1019,2.215,1020,2.641,1021,2.215,1022,2.215,1023,1.9,1024,1.692,1025,2.966,1026,2.215,1027,2.966,1028,2.215,1029,3.648,1030,3.459,1031,1.9,1032,3.459,1033,1.9,1034,2.215,1035,1.9,1036,3.459,1037,2.215,1038,2.215,1039,2.215,1040,2.215,1041,2.215]],["title/components/TaskListComponent.html",[0,0.764,89,1.34]],["body/components/TaskListComponent.html",[0,0.705,1,0.677,2,1.195,3,0.075,4,0.075,5,0.76,6,0.76,7,0.76,8,0.76,9,0.065,11,1.129,12,1.988,13,0.716,14,2.232,15,2.232,17,0.96,18,0.865,19,0.743,21,1.012,23,1.012,25,0.21,26,0.417,27,2.321,28,0.492,30,0.822,31,0.921,33,0.752,34,0.02,35,0.789,36,0.45,37,0.516,40,0.868,41,1.98,42,0.457,43,0.126,44,0.64,48,0.926,49,0.926,50,0.075,51,0.137,54,2.333,55,1.268,56,2.579,57,1.814,58,1.814,59,0.926,60,1.545,62,0.926,63,2.956,64,1.197,65,1.195,67,0.575,68,1.268,69,1.268,70,0.76,71,1.905,72,0.76,73,0.76,74,0.911,75,0.716,76,1.268,77,1.441,78,1.695,79,0.76,80,0.575,81,0.76,82,0.546,83,1.711,84,0.677,85,1.519,86,0.76,87,1.519,88,0.76,89,1.441,90,0.76,91,0.575,92,0.383,93,0.716,94,1.519,95,0.76,96,0.76,97,0.007,98,0.007,103,0.607,105,1.573,113,2.287,114,2.756,119,0.614,124,1.604,125,0.469,127,1.604,128,1.496,129,0.911,130,1.41,137,1.667,138,2.155,139,1.195,141,0.64,142,0.606,155,0.424,161,1.087,169,0.78,175,1.988,179,2.165,183,1.667,201,0.64,203,0.864,223,1.113,224,0.469,236,1.41,239,2.504,242,1.997,250,3.368,256,3.368,269,2.164,271,1.441,272,1.49,287,2.243,289,0.999,292,1.302,296,0.716,297,0.76,302,1.667,305,1.441,316,0.716,317,0.64,319,0.926,320,1.197,321,1.197,322,1.197,325,1.087,330,0.999,336,2.027,338,1.087,339,2.705,341,2.718,343,1.197,347,1.736,348,2.253,349,1.441,391,2.333,392,2.999,394,2.368,395,2.263,396,0.64,401,1.545,427,2.569,466,1.441,468,1.736,485,1.997,504,1.997,506,2.243,532,1.197,539,1.441,552,2.321,554,1.854,591,3.096,620,0.999,629,0.999,641,2.724,642,2.333,643,1.667,646,1.988,656,3.218,657,3.007,658,2.504,659,1.814,676,1.997,703,1.988,714,3.368,726,1.441,732,1.545,737,2.243,747,0.999,748,1.197,749,1.197,750,1.197,768,1.344,769,1.344,770,1.344,795,1.667,799,1.087,802,1.997,803,1.344,805,2.333,812,1.087,813,1.087,816,0.999,831,1.344,832,1.344,860,1.667,861,3.098,866,3.027,893,1.441,894,1.667,910,1.667,913,1.197,920,1.087,921,4.309,922,1.087,950,1.997,965,1.997,972,1.344,977,1.197,978,1.087,998,2.243,1000,2.243,1007,1.197,1020,1.197,1023,1.344,1024,2.569,1029,1.344,1031,1.344,1033,1.344,1035,1.344,1042,4.309,1043,1.344,1044,3.928,1045,3.365,1046,2.615,1047,2.885,1048,4.366,1049,3.928,1050,3.928,1051,2.615,1052,2.615,1053,2.615,1054,2.615,1055,2.615,1056,1.568,1057,2.787,1058,2.615,1059,1.568,1060,2.243,1061,1.568,1062,1.568,1063,1.568,1064,2.615,1065,1.568,1066,1.997,1067,2.615,1068,1.568,1069,2.615,1070,2.615,1071,1.568,1072,2.615,1073,1.568,1074,1.997,1075,2.615,1076,2.615,1077,1.568,1078,2.615,1079,2.615,1080,2.615,1081,2.615,1082,2.615,1083,1.568,1084,1.568,1085,1.568,1086,1.997,1087,1.344,1088,1.344,1089,1.344,1090,1.568,1091,1.568,1092,1.568,1093,1.568,1094,1.568,1095,1.568,1096,1.568,1097,1.568,1098,3.365,1099,3.928,1100,1.568,1101,1.568,1102,1.568,1103,1.568,1104,1.568,1105,1.568,1106,1.568,1107,2.615,1108,1.568,1109,1.568,1110,1.568,1111,1.344,1112,1.997,1113,1.344,1114,1.568,1115,1.568,1116,1.568,1117,1.568,1118,1.344,1119,2.243,1120,2.615,1121,2.615,1122,2.615,1123,3.928,1124,2.615,1125,2.615,1126,2.615,1127,2.615,1128,2.615,1129,2.615,1130,1.568,1131,1.568,1132,2.615,1133,1.568,1134,1.568,1135,1.568,1136,1.568,1137,3.365,1138,1.568,1139,3.928,1140,1.568,1141,2.615,1142,1.568,1143,1.568]],["title/injectables/TaskMapper.html",[99,0.345,1144,2.532]],["body/injectables/TaskMapper.html",[3,0.221,4,0.221,9,0.193,16,1.251,25,0.372,26,0.93,30,1.834,31,0.877,33,0.93,34,0.02,35,0.877,36,0.429,37,0.638,40,0.93,42,0.469,43,0.372,50,0.221,51,0.404,83,1.724,97,0.015,98,0.015,99,0.551,101,1.316,125,1.744,144,2.256,163,1.316,169,1.159,395,2.517,396,1.89,401,3.446,403,3.009,564,2.256,851,4.498,867,3.969,1144,4.045,1145,3.969,1146,5.001,1147,5.001,1148,5.001,1149,4.629,1150,3.534,1151,5.001,1152,4.629,1153,3.969,1154,3.969,1155,4.629,1156,4.629,1157,4.629,1158,4.629,1159,3.969,1160,3.969,1161,4.629,1162,4.629,1163,4.629,1164,4.629,1165,4.629,1166,3.969]],["title/interfaces/TaskRepository.html",[318,0.805,389,1.884]],["body/interfaces/TaskRepository.html",[3,0.211,4,0.211,9,0.184,25,0.355,26,0.902,31,1.025,33,1.086,34,0.02,35,1.025,36,0.501,37,0.745,40,1.086,42,0.416,50,0.211,83,1.754,97,0.015,98,0.015,119,0.874,128,2.2,155,1.194,318,0.974,350,1.803,389,2.921,395,2.443,466,3.119,564,2.19,842,3.925,843,3.608,844,4.323,845,4.323,846,3.925,850,4.323,853,3.925,855,4.323,857,4.323,862,4.323,863,3.983,872,3.062,1167,3.786,1168,4.416,1169,4.416,1170,4.416,1171,4.416,1172,4.416,1173,4.416]],["title/injectables/TaskRepositoryImpl.html",[99,0.345,387,2.011]],["body/injectables/TaskRepositoryImpl.html",[3,0.159,4,0.159,9,0.139,11,1.433,16,0.898,25,0.267,26,0.745,28,0.88,31,0.965,33,1.023,34,0.02,35,0.965,36,0.471,37,0.701,40,0.986,42,0.471,43,0.267,50,0.159,51,0.29,83,1.712,97,0.012,98,0.012,99,0.441,101,0.944,105,1.469,119,0.84,128,2.095,135,2.411,155,0.898,163,0.944,166,2.072,169,1.228,191,2.017,236,1.397,272,1.328,387,2.574,389,2.411,394,2.603,395,2.533,396,1.356,466,3.233,468,2.411,563,4.481,564,2.482,591,2.574,840,4.448,842,3.241,843,2.979,844,3.568,845,3.568,846,3.241,850,3.568,853,3.241,855,3.568,857,3.568,859,4.007,860,2.979,861,2.761,862,3.568,863,3.447,865,2.979,872,2.303,1144,4.57,1150,3.568,1174,2.847,1175,3.321,1176,3.321,1177,3.321,1178,3.321,1179,3.321,1180,3.321,1181,3.321,1182,2.847,1183,3.321,1184,3.321,1185,3.321,1186,3.321,1187,3.321,1188,3.321,1189,3.321,1190,3.321,1191,3.321,1192,3.321,1193,4.673,1194,3.321,1195,4.673,1196,4.673,1197,3.321,1198,3.321,1199,3.321]],["title/injectables/TasksFacade.html",[99,0.345,1057,2.157]],["body/injectables/TasksFacade.html",[3,0.099,4,0.099,9,0.086,16,0.557,25,0.326,26,0.521,28,0.616,30,0.648,31,0.974,33,0.803,34,0.02,35,0.758,36,0.413,37,0.551,40,0.737,41,1.832,42,0.428,43,0.166,50,0.099,51,0.18,66,1.315,78,1.995,83,1.129,97,0.008,98,0.008,99,0.309,101,0.586,103,0.759,104,2.567,105,2.126,106,3.483,107,3.483,115,2.817,116,3.529,119,0.784,121,2.496,122,1.082,123,2.546,124,2.189,125,1.506,127,1.887,128,0.616,129,1.415,141,2.38,142,2.254,143,2.803,144,2.378,145,2.496,147,2.803,149,3.963,151,3.101,152,1.575,153,4.321,154,2.803,155,0.557,156,1.315,157,1.315,163,0.586,166,1.767,167,1.768,168,3.963,169,0.918,173,3.529,174,3.963,175,2.731,176,3.101,178,3.529,179,2.285,180,3.963,181,3.963,183,3.581,184,3.896,185,4.29,186,3.101,187,1.768,190,3.483,191,1.411,236,1.679,272,1.865,382,3.896,391,4.041,392,2.496,394,2.673,395,2.314,396,0.842,399,1.768,400,1.768,463,3.896,466,3.095,468,2.385,522,2.946,558,3.718,564,2.254,591,2.953,676,2.496,842,2.267,843,2.084,846,2.267,853,2.267,860,2.946,861,2.731,863,2.589,865,2.084,866,3.205,872,1.43,890,2.731,950,2.496,965,2.496,1047,3.483,1057,1.932,1060,2.803,1118,2.803,1200,1.768,1201,4.062,1202,4.062,1203,3.269,1204,2.062,1205,3.896,1206,3.269,1207,3.269,1208,2.062,1209,3.269,1210,2.062,1211,3.269,1212,2.062,1213,3.269,1214,2.062,1215,3.269,1216,3.269,1217,2.062,1218,2.062,1219,2.062,1220,3.269,1221,2.062,1222,2.062,1223,3.269,1224,2.062,1225,2.062,1226,2.062,1227,2.062,1228,2.062,1229,4.062,1230,2.062,1231,2.062,1232,2.062,1233,2.062,1234,2.062,1235,2.062,1236,2.062,1237,2.062,1238,2.062,1239,2.062,1240,2.062,1241,3.269,1242,4.622,1243,4.062,1244,2.062,1245,3.269,1246,2.062,1247,5.039,1248,4.062,1249,2.062,1250,4.062,1251,2.062,1252,2.062,1253,4.062,1254,2.062,1255,2.062,1256,2.062,1257,3.269,1258,2.062,1259,2.062,1260,3.269,1261,2.062,1262,2.062,1263,2.062,1264,2.062,1265,2.062,1266,2.062]],["title/modules/TasksModule.html",[206,1.576,1267,2.532]],["body/modules/TasksModule.html",[3,0.214,4,0.214,9,0.187,19,1.624,34,0.02,42,0.529,43,0.36,50,0.214,51,0.391,67,1.643,82,2.437,85,2.707,87,2.707,89,2.567,97,0.015,98,0.015,206,1.933,208,2.172,209,2.467,210,2.855,211,2.855,212,3.716,213,2.467,218,3.641,219,2.855,220,2.646,222,3.375,223,1.89,224,1.339,226,3.84,876,2.855,922,3.106,978,3.106,1042,3.106,1057,4.134,1086,4.803,1087,3.84,1088,3.84,1089,3.84,1267,5.219,1268,3.84,1269,3.84,1270,3.84,1271,4.46,1272,4.479,1273,4.479,1274,3.84,1275,4.479,1276,4.479]],["title/modules/TasksRoutingModule.html",[206,1.576,1271,2.327]],["body/modules/TasksRoutingModule.html",[0,1.085,3,0.248,4,0.248,9,0.216,19,1.473,30,1.63,34,0.02,42,0.512,43,0.416,44,2.116,50,0.248,51,0.452,89,2.295,97,0.016,98,0.016,193,4.337,196,4.444,208,2.513,213,2.855,222,3.695,233,4.444,234,4.337,235,5.129,236,1.549,237,4.444,240,4.444,861,3.062,1042,3.594,1086,3.957,1119,4.444,1271,3.986,1274,4.444,1277,5.182,1278,5.182]],["title/injectables/UpdateTaskUseCase.html",[99,0.345,1205,2.532]],["body/injectables/UpdateTaskUseCase.html",[3,0.225,4,0.225,9,0.197,16,1.275,25,0.379,26,0.941,28,0.888,31,0.888,33,0.941,34,0.02,35,0.888,36,0.434,37,0.645,40,0.752,42,0.496,43,0.379,50,0.225,51,0.412,52,1.926,83,1.153,97,0.015,98,0.015,99,0.557,101,1.341,119,0.754,128,1.926,155,1.275,163,1.341,166,1.856,169,0.937,384,3.271,385,3.488,386,3.271,387,3.719,388,4.045,389,3.046,391,4.82,393,4.045,394,2.284,396,1.926,397,3.271,564,2.284,863,4.107,865,3.763,1205,4.093,1279,5.524,1280,5.903,1281,4.718]],["title/interfaces/User.html",[92,0.892,318,0.805]],["body/interfaces/User.html",[3,0.255,4,0.255,9,0.223,25,0.429,34,0.019,36,0.5,37,0.696,50,0.255,92,1.556,97,0.017,98,0.017,103,1.479,119,0.855,126,2.586,318,1.179,350,2.183,403,3.636,404,4.021,564,2.726,1282,4.583]],["title/injectables/UserApiService.html",[99,0.345,1283,2.532]],["body/injectables/UserApiService.html",[3,0.205,4,0.205,9,0.179,16,1.157,25,0.344,26,0.884,28,0.806,31,0.98,33,0.981,34,0.02,35,0.926,36,0.478,37,0.673,40,0.884,42,0.478,43,0.344,50,0.205,51,0.373,52,1.747,97,0.014,98,0.014,99,0.524,101,1.216,103,1.288,105,1.935,108,3.847,118,3.847,119,0.824,124,2.659,126,2.582,128,2.017,135,2.862,141,1.747,142,1.655,144,1.655,155,1.157,163,1.216,166,1.744,169,1.102,191,2.394,354,3.587,367,3.267,368,3.267,403,2.208,593,4.7,847,3.669,849,4.757,870,3.669,1166,3.669,1283,3.847,1284,3.669,1285,4.236,1286,5.547,1287,4.279,1288,4.236,1289,4.279,1290,4.757,1291,5.547,1292,2.528,1293,4.279,1294,4.279]],["title/components/UserCreationDialog.html",[0,0.764,91,1.34]],["body/components/UserCreationDialog.html",[0,1.081,1,1.318,2,2.012,3,0.146,4,0.146,5,1.481,6,1.481,7,1.481,8,1.481,9,0.127,13,1.396,14,2.667,15,2.667,17,1.616,18,1.457,19,1.252,21,1.703,23,1.703,25,0.245,26,0.702,28,0.829,31,0.901,33,0.487,34,0.02,35,0.777,36,0.379,37,0.334,40,0.702,41,1.777,42,0.415,43,0.245,50,0.21,51,0.267,55,1.481,59,1.805,60,1.805,65,1.396,67,1.121,68,2.135,69,2.135,70,1.481,71,2.74,72,1.481,73,1.481,74,1.064,75,1.396,76,2.135,77,1.121,78,1.318,79,1.481,80,1.121,81,1.481,82,1.064,83,1.38,84,1.318,85,1.182,86,1.481,87,1.182,88,1.481,89,1.121,90,1.481,91,2.073,92,1.608,93,2.359,94,2.317,95,1.481,96,1.481,97,0.011,98,0.011,103,1.022,119,0.358,122,1.457,123,3.113,124,2.78,126,1.121,127,2.307,129,1.534,130,1.316,191,2.693,223,1.708,224,0.913,229,3.977,264,3.362,272,1.606,291,2.504,292,1.997,295,3.437,296,2.737,297,2.74,298,2.915,299,3.918,300,2.619,301,3.3,310,2.332,311,2.426,314,1.683,315,1.683,316,1.396,317,1.247,318,0.674,326,2.118,327,2.118,330,2.807,333,2.332,334,2.332,335,3.053,336,1.576,337,2.332,338,2.118,339,1.576,340,2.118,341,1.9,346,1.805,347,1.576,348,1.576,349,1.683,534,3.053,539,1.683,656,1.805,782,3.918,893,2.426,1024,2.332,1025,2.619,1027,2.619,1066,3.362,1074,4.314,1111,3.775,1295,4.764,1296,2.332,1297,4.427,1298,3.775,1299,4.153,1300,3.055,1301,3.055,1302,3.055,1303,3.055,1304,3.055,1305,4.403,1306,4.403,1307,3.775,1308,3.055,1309,3.055]],["title/interfaces/UserCreationDialogData.html",[318,0.805,1299,2.532]],["body/interfaces/UserCreationDialogData.html",[0,1.216,3,0.22,4,0.22,9,0.192,14,1.779,15,1.779,17,1.688,18,1.522,19,1.307,21,1.779,23,1.779,25,0.369,28,0.866,34,0.02,36,0.338,41,1.827,42,0.492,43,0.369,50,0.278,51,0.401,91,1.688,92,1.556,93,2.102,94,1.779,97,0.015,98,0.015,103,1.349,119,0.745,124,2.372,126,2.455,127,2.372,223,1.922,224,1.375,229,2.932,272,1.651,291,2.817,292,2.248,295,3.201,296,2.102,297,2.231,298,2.373,299,3.19,301,3.201,311,2.534,314,2.534,315,2.534,316,2.102,317,1.878,318,1.014,326,3.19,327,3.19,350,1.878,893,2.534,1066,3.512,1074,4.436,1295,3.512,1296,3.512,1297,3.944,1298,3.944,1299,4.416]],["title/interfaces/UserDto.html",[318,0.805,1292,2.157]],["body/interfaces/UserDto.html",[3,0.255,4,0.255,9,0.223,25,0.429,34,0.019,36,0.5,37,0.696,50,0.255,97,0.017,98,0.017,103,1.479,119,0.877,126,2.586,318,1.179,350,2.183,403,3.636,564,2.726,1292,3.764,1310,4.583]],["title/injectables/UserMapper.html",[99,0.345,1311,2.532]],["body/injectables/UserMapper.html",[3,0.193,4,0.193,9,0.168,16,1.091,25,0.324,26,0.851,31,0.958,33,1.015,34,0.02,35,0.958,36,0.468,37,0.696,40,1.015,42,0.44,43,0.324,50,0.193,51,0.352,92,1.772,97,0.014,98,0.014,99,0.504,101,1.147,126,1.959,138,2.44,144,2.066,162,2.385,163,1.147,169,1.399,403,2.755,404,3.155,521,3.082,564,2.066,1146,4.578,1147,4.578,1148,4.578,1150,4.077,1151,4.578,1153,4.578,1154,3.461,1159,3.461,1160,3.461,1292,4.286,1311,3.703,1312,3.461,1313,5.34,1314,5.34,1315,4.037,1316,5.34,1317,4.037,1318,5.34,1319,4.037,1320,5.34,1321,4.037,1322,5.34,1323,4.037,1324,4.037,1325,4.037,1326,4.037,1327,5.34,1328,4.037,1329,4.037,1330,4.037,1331,4.037,1332,4.037,1333,4.037,1334,4.037]],["title/interfaces/UserRepository.html",[318,0.805,411,2.157]],["body/interfaces/UserRepository.html",[3,0.245,4,0.245,9,0.214,25,0.412,26,0.991,31,0.935,33,0.991,34,0.019,35,0.935,36,0.457,37,0.68,40,0.991,42,0.457,50,0.245,92,1.254,97,0.016,98,0.016,108,4.312,118,4.312,119,0.847,126,2.282,128,2.129,155,1.388,318,1.132,350,2.096,411,3.674,1285,4.748,1288,4.748,1335,4.402,1336,5.134,1337,5.134,1338,5.134]],["title/injectables/UserRepositoryImpl.html",[99,0.345,409,2.327]],["body/injectables/UserRepositoryImpl.html",[3,0.198,4,0.198,9,0.173,11,1.785,16,1.118,25,0.332,26,0.865,28,1.022,31,0.911,33,0.965,34,0.02,35,0.911,36,0.445,37,0.662,40,0.865,42,0.503,43,0.332,50,0.198,51,0.361,92,1.325,97,0.014,98,0.014,99,0.512,101,1.175,104,1.89,105,1.706,108,3.762,118,3.762,119,0.802,124,2.624,126,2.561,128,1.995,135,2.799,138,1.89,152,3.157,155,1.118,162,2.443,163,1.175,166,1.706,169,1.203,173,3.157,186,3.157,191,2.341,409,3.458,411,3.205,522,2.636,1182,3.546,1283,4.749,1285,4.142,1288,4.142,1290,4.651,1292,2.443,1311,4.84,1339,3.546,1340,4.135,1341,4.135,1342,4.135,1343,4.135,1344,4.135,1345,4.135,1346,4.135,1347,4.135,1348,5.425,1349,5.425,1350,4.135,1351,4.135]],["title/coverage.html",[1352,4.279]],["body/coverage.html",[0,1.404,1,1.318,9,0.127,10,2.619,34,0.02,36,0.224,47,2.332,74,1.064,77,1.121,80,1.121,82,1.064,83,0.746,85,1.182,87,1.182,89,1.121,91,1.121,92,0.746,97,0.011,98,0.011,99,0.684,100,1.805,102,2.619,111,2.118,112,2.118,113,1.396,144,1.182,192,2.332,193,2.118,195,2.619,203,1.683,229,2.807,241,2.619,252,1.805,288,3.362,289,2.807,290,3.362,302,1.947,318,1.501,341,3.2,354,1.683,364,1.947,369,2.332,371,2.332,373,2.332,382,2.118,383,2.619,384,3.58,387,1.683,389,1.576,406,2.619,407,3.362,409,1.947,411,1.805,416,2.118,417,1.683,419,2.619,420,2.619,463,2.118,464,2.619,471,2.619,472,2.619,513,1.947,516,2.332,517,2.332,556,2.619,558,2.118,559,2.619,560,2.619,566,2.619,567,2.619,619,2.619,620,1.947,621,2.619,631,2.619,648,3.05,660,2.619,661,2.619,698,2.619,707,2.332,823,3.362,837,2.332,838,2.332,839,2.619,840,2.118,841,2.619,851,1.947,874,2.619,875,3.58,876,3.291,877,3.58,884,1.947,898,1.947,921,3.58,922,2.118,923,2.619,978,2.118,979,2.619,1042,2.118,1043,2.619,1057,1.805,1144,2.118,1145,2.619,1167,2.619,1174,2.619,1200,2.619,1205,2.118,1279,2.619,1282,2.619,1283,2.118,1284,2.619,1292,1.805,1295,3.362,1296,3.362,1299,2.118,1310,2.619,1311,2.118,1312,2.619,1335,2.619,1339,2.619,1352,2.619,1353,2.619,1354,3.055,1355,3.055,1356,5.99,1357,2.619,1358,6.966,1359,2.619,1360,6.807,1361,3.775,1362,3.775,1363,5.163,1364,4.845,1365,4.845,1366,3.775,1367,3.055,1368,4.403,1369,4.403,1370,2.619,1371,2.619,1372,4.403,1373,3.055,1374,3.055,1375,3.055,1376,4.403,1377,4.403,1378,4.403,1379,3.055,1380,3.055,1381,3.055,1382,4.403,1383,6.706,1384,6.24,1385,2.619,1386,3.055,1387,4.403,1388,4.403,1389,4.403,1390,4.403,1391,3.055,1392,3.055,1393,3.055,1394,3.055,1395,3.055,1396,3.055,1397,3.055,1398,2.619,1399,3.055,1400,3.055]],["title/dependencies.html",[209,2.42,1401,2.611]],["body/dependencies.html",[34,0.02,43,0.429,44,2.183,45,5.463,46,4.865,97,0.017,98,0.017,155,1.445,209,2.945,224,1.598,742,2.945,1402,5.345,1403,7.442,1404,5.345,1405,6.371,1406,5.345,1407,5.345,1408,5.345,1409,5.345,1410,5.345,1411,5.345,1412,5.345,1413,5.345]],["title/index.html",[25,0.244,1414,2.611,1415,2.611]],["body/index.html",[34,0.018,97,0.013,98,0.013,124,1.515,126,1.362,127,2.342,129,1.997,130,2.066,179,2.468,191,1.602,238,2.574,249,2.574,269,3.546,272,1.434,296,1.696,350,1.515,468,1.915,488,4.103,489,4.379,495,3.182,500,3.182,513,2.366,591,2.044,726,2.78,782,2.574,860,3.923,861,3.636,889,3.217,910,2.366,968,3.182,1020,2.834,1112,3.854,1416,5.047,1417,3.711,1418,3.711,1419,3.711,1420,3.711,1421,3.711,1422,3.711,1423,3.711,1424,3.711,1425,3.711,1426,3.711,1427,5.047,1428,3.711,1429,3.711,1430,5.047,1431,5.047,1432,3.711,1433,3.711,1434,3.711,1435,5.735,1436,3.182,1437,3.711,1438,5.519,1439,5.047,1440,3.711,1441,3.711,1442,3.711,1443,3.711,1444,3.711,1445,3.711,1446,3.711,1447,3.711,1448,5.047,1449,3.711,1450,3.711,1451,5.047,1452,3.711,1453,3.711,1454,3.711,1455,3.711,1456,3.711,1457,3.711,1458,3.711,1459,3.711,1460,3.711,1461,6.436,1462,3.711,1463,3.711,1464,3.711,1465,3.711,1466,3.711,1467,6.436,1468,5.735,1469,3.711,1470,5.047,1471,3.711,1472,3.711,1473,3.711,1474,3.711,1475,5.735,1476,3.711,1477,6.154,1478,3.711,1479,5.047,1480,3.711,1481,3.182,1482,3.182,1483,6.154,1484,3.711,1485,3.711,1486,3.711,1487,3.711,1488,3.711,1489,3.711,1490,3.711,1491,3.711,1492,3.711,1493,3.711,1494,5.047,1495,3.711,1496,5.047,1497,3.711,1498,3.711,1499,3.711,1500,3.711,1501,3.711,1502,3.711,1503,3.182,1504,3.711,1505,3.711,1506,3.711,1507,3.711,1508,3.711,1509,3.711,1510,3.711,1511,3.711,1512,3.711,1513,5.047,1514,3.711,1515,3.711,1516,3.711,1517,3.711,1518,3.711,1519,3.711,1520,3.711,1521,3.711,1522,3.711,1523,3.182,1524,3.711,1525,3.711,1526,3.711,1527,3.711,1528,3.711,1529,3.711]],["title/license.html",[1414,2.611,1415,2.611,1530,2.611]],["body/license.html",[34,0.015,97,0.015,98,0.015,179,1.65,220,2.799,272,1.347,1007,3.618,1353,4.063,1530,4.063,1531,4.738,1532,6.455,1533,4.738,1534,4.738,1535,4.738,1536,4.738,1537,4.738,1538,5.919,1539,4.738,1540,4.738,1541,4.738,1542,4.738,1543,4.738,1544,4.738,1545,5.919,1546,7.342,1547,4.738,1548,4.738,1549,4.738,1550,6.455,1551,4.738,1552,5.919,1553,4.738,1554,4.738,1555,5.919,1556,4.738,1557,4.738,1558,4.738,1559,4.738,1560,4.738,1561,4.738,1562,4.738,1563,5.919,1564,4.738,1565,4.738,1566,4.738,1567,4.738,1568,4.738,1569,4.738,1570,4.738,1571,5.919,1572,5.919,1573,4.738,1574,4.738,1575,4.738,1576,4.738,1577,4.738,1578,4.738,1579,4.738,1580,4.738,1581,4.738,1582,4.738,1583,4.738,1584,4.738,1585,4.738,1586,4.738,1587,4.738,1588,4.738,1589,4.738,1590,4.738,1591,4.738,1592,4.738,1593,4.738,1594,4.738,1595,4.738,1596,4.738,1597,4.738,1598,4.738,1599,4.738,1600,4.738,1601,4.738]],["title/modules.html",[208,2.42]],["body/modules.html",[34,0.017,46,5.442,97,0.017,98,0.017,207,3.837,208,2.683,217,3.527,351,3.527,819,3.837,1267,3.837,1271,3.527,1602,7.127,1603,7.127,1604,7.362,1605,6.502,1606,6.502]],["title/overview.html",[1607,4.279]],["body/overview.html",[2,1.915,34,0.02,66,3.488,67,1.537,74,2.439,77,2.569,80,2.236,82,2.122,85,2.357,87,2.357,89,2.236,91,2.236,97,0.014,98,0.014,100,3.6,101,1.191,113,2.784,192,3.199,206,1.808,207,5.024,208,2.032,209,2.308,210,2.671,211,2.671,212,2.475,213,2.308,214,3.593,215,3.593,216,3.593,217,3.884,218,3.488,219,2.671,220,2.475,252,3.6,350,1.711,351,4.526,352,3.593,353,3.593,354,3.357,416,2.905,417,3.857,819,5.061,820,3.593,821,3.593,822,3.593,1057,3.6,1267,5.143,1268,3.593,1269,3.593,1270,3.593,1271,3.884,1436,3.593,1607,3.593,1608,3.593,1609,4.19,1610,3.593]],["title/properties.html",[103,1.02,1401,2.611]],["body/properties.html",[34,0.018,97,0.018,98,0.018,103,1.37,1611,5.902,1612,5.902]],["title/miscellaneous/variables.html",[1613,2.611,1614,3.767]],["body/miscellaneous/variables.html",[18,0.77,25,0.187,34,0.02,36,0.489,41,1.13,47,2.744,65,1.064,74,0.811,77,0.854,92,0.569,97,0.009,98,0.009,104,2.847,113,1.642,114,1.282,115,2.492,119,0.272,122,1.452,123,1.98,126,0.854,127,0.95,129,0.811,130,1.074,135,2.547,141,2.75,142,2.544,169,0.872,175,1.375,176,1.777,178,3.352,179,1.964,183,1.484,184,2.492,185,2.744,203,1.98,212,1.375,235,1.777,236,1.757,239,3.147,242,3.352,249,2.492,263,2.291,264,1.777,268,3.082,269,1.98,272,1.248,291,1.129,292,0.9,319,1.375,351,1.484,357,1.777,359,1.996,360,1.996,362,1.777,364,1.484,369,3.352,371,3.352,373,2.744,376,3.082,377,1.996,417,1.282,421,1.996,433,1.614,476,3.082,477,1.996,483,1.996,488,2.291,489,2.744,501,2.744,512,1.777,513,2.291,516,2.744,517,2.744,521,1.777,522,1.484,524,2.744,530,1.996,531,4.575,532,1.777,534,3.7,535,1.996,537,1.777,539,1.98,545,1.996,546,1.996,549,1.996,550,1.996,551,3.082,552,2.123,553,3.082,554,1.98,555,1.996,564,0.9,569,1.996,623,1.777,648,1.375,700,1.282,701,1.282,702,1.614,703,1.375,707,2.744,718,1.375,727,2.917,733,1.996,782,1.614,783,1.996,787,4.233,788,1.996,823,1.777,825,1.777,827,1.996,829,1.777,835,1.996,837,2.744,838,2.744,866,2.492,890,1.375,912,1.777,1112,1.777,1113,1.996,1307,1.996,1357,1.996,1359,3.082,1361,1.996,1362,3.764,1364,1.996,1365,4.575,1366,1.996,1370,1.996,1371,1.996,1385,1.996,1398,1.996,1438,1.996,1481,1.996,1482,3.764,1503,1.996,1523,1.996,1608,1.996,1610,3.082,1613,1.996,1614,1.996,1615,2.327,1616,3.594,1617,4.937,1618,3.594,1619,2.327,1620,2.327,1621,2.327,1622,2.327,1623,2.327,1624,2.327,1625,2.327,1626,2.327,1627,2.327,1628,2.327,1629,2.327,1630,6.072,1631,2.327,1632,2.327,1633,2.327,1634,2.327,1635,2.327,1636,2.327,1637,2.327,1638,2.327,1639,2.327,1640,2.327,1641,2.327,1642,2.327,1643,2.327,1644,2.327,1645,2.327,1646,2.327,1647,2.327,1648,2.327,1649,2.327,1650,2.327,1651,2.327,1652,2.327,1653,3.594,1654,2.327,1655,2.327,1656,2.327,1657,2.327,1658,2.327,1659,2.327,1660,2.327,1661,2.327,1662,3.594,1663,3.594,1664,4.937,1665,3.594,1666,3.594,1667,3.594,1668,2.327,1669,2.327,1670,2.327,1671,2.327,1672,2.327,1673,2.327,1674,3.594,1675,2.327,1676,2.327,1677,3.594,1678,3.594,1679,3.594,1680,3.594,1681,2.327,1682,3.594,1683,2.327,1684,3.594,1685,3.594,1686,2.327,1687,2.327,1688,2.327,1689,2.327,1690,2.327,1691,2.327,1692,2.327,1693,2.327,1694,2.327,1695,2.327,1696,2.327,1697,2.327,1698,2.327,1699,2.327,1700,2.327,1701,2.327,1702,2.327,1703,2.327,1704,2.327,1705,2.327,1706,2.327,1707,2.327,1708,2.327,1709,2.327,1710,2.327,1711,2.327,1712,2.327,1713,2.327,1714,2.327,1715,2.327,1716,2.327,1717,2.327,1718,2.327,1719,2.327,1720,3.594,1721,4.39,1722,3.594,1723,2.327,1724,2.327,1725,3.594,1726,2.327,1727,2.327,1728,2.327,1729,6.231,1730,2.327,1731,2.327,1732,2.327,1733,2.327,1734,2.327,1735,2.327,1736,2.327,1737,2.327,1738,4.39,1739,2.327,1740,4.39,1741,2.327,1742,2.327,1743,2.327,1744,2.327,1745,2.327,1746,2.327,1747,2.327,1748,3.594,1749,2.327,1750,2.327]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":341,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"pipes/DateFormatPipe.html":{},"injectables/ErrorHandlerService.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1612,"title":{},"body":{"properties.html":{}}}],["0.03",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["0.12",{"_index":1019,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.14.10",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":1014,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.38",{"_index":1140,"title":{},"body":{"components/TaskListComponent.html":{}}}],["0.54",{"_index":1029,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["0.7",{"_index":651,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["0.75rem",{"_index":1038,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.85rem",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["0.87",{"_index":659,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["0.9rem",{"_index":1143,"title":{},"body":{"components/TaskListComponent.html":{}}}],["0/1",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"pipes/DateFormatPipe.html":{},"components/TaskItemComponent.html":{},"injectables/TasksFacade.html":{},"overview.html":{}}}],["1.1rem",{"_index":1023,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["1.2rem",{"_index":973,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["1.3rem",{"_index":1134,"title":{},"body":{"components/TaskListComponent.html":{}}}],["1.5",{"_index":1308,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["1.5rem",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["1.8rem",{"_index":1133,"title":{},"body":{"components/TaskListComponent.html":{}}}],["1/1",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1610,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":648,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":446,"title":{},"body":{"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{}}}],["100vh",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["10px",{"_index":340,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskItemComponent.html":{},"components/UserCreationDialog.html":{}}}],["120px",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["12px",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["16px",{"_index":348,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["177",{"_index":1018,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["18",{"_index":1436,"title":{},"body":{"index.html":{},"overview.html":{}}}],["18.2.0",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["18.2.14",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["1:231269805480:web:3d1f9eaa6ef503c5abc19d",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1136,"title":{},"body":{"components/TaskListComponent.html":{}}}],["2025",{"_index":1534,"title":{},"body":{"license.html":{}}}],["20px",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["231269805480",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":454,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["24px",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["25",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":650,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["28",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["2e7d32",{"_index":1040,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["2px",{"_index":970,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["3/4",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":185,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["30000",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":337,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/UserCreationDialog.html":{}}}],["32px",{"_index":1031,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["33",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":918,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["37",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":1022,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["4/14",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":631,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"coverage.html":{}}}],["400",{"_index":532,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["401",{"_index":501,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":537,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":535,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["44",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["480px",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["48px",{"_index":1139,"title":{},"body":{"components/TaskListComponent.html":{}}}],["4px",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["5",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/10",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["5/15",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":539,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":550,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":919,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["53",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1608,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6/8",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":449,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["600px",{"_index":920,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["62",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":971,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["7.8.0",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["8/15",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":1130,"title":{},"body":{"components/TaskListComponent.html":{}}}],["8px",{"_index":349,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["9",{"_index":1609,"title":{},"body":{"overview.html":{}}}],["above",{"_index":1570,"title":{},"body":{"license.html":{}}}],["accent",{"_index":324,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{}}}],["accept",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceso",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_prohibited",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acción",{"_index":1113,"title":{},"body":{"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1595,"title":{},"body":{"license.html":{}}}],["actions",{"_index":346,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/UserCreationDialog.html":{}}}],["actual",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskListComponent.html":{}}}],["actual_component",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["actualiza",{"_index":950,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["actualización",{"_index":1075,"title":{},"body":{"components/TaskListComponent.html":{}}}],["actualizada",{"_index":1261,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["actualizar",{"_index":865,"title":{},"body":{"injectables/TaskApiService.html":{},"components/TaskFormComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["add",{"_index":967,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["adicional",{"_index":1522,"title":{},"body":{"index.html":{}}}],["adjuntado",{"_index":1471,"title":{},"body":{"index.html":{}}}],["agrega",{"_index":1129,"title":{},"body":{"components/TaskListComponent.html":{}}}],["agregar",{"_index":968,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["aizasybubmvqudq6npv1vjefcaftu4gw2t0mqri",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":181,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["alberto",{"_index":1536,"title":{},"body":{"license.html":{}}}],["align",{"_index":641,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["and/or",{"_index":1561,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1435,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":361,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{}}}],["angular/compiler",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":317,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["angular/material/card",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskItemComponent.html":{}}}],["angular/material/checkbox",{"_index":826,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{}}}],["angular/material/dialog",{"_index":316,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["angular/material/form",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["angular/material/icon",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["angular/material/input",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["angular/material/list",{"_index":828,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":637,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":156,"title":{},"body":{"injectables/AuthFacade.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/SharedModule.html":{},"injectables/TasksFacade.html":{}}}],["angular/material/tooltip",{"_index":830,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{}}}],["angular/platform",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskListComponent.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":1497,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":569,"title":{},"body":{"injectables/HttpBaseService.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":489,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app/browser",{"_index":1529,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"coverage.html":{}}}],["appconfig",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appname",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutes",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appsettings",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apuntando",{"_index":1524,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":1467,"title":{},"body":{"index.html":{}}}],["archivos",{"_index":1464,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1599,"title":{},"body":{"license.html":{}}}],["arquitectura",{"_index":1430,"title":{},"body":{"index.html":{}}}],["array.isarray(dtos",{"_index":1329,"title":{},"body":{"injectables/UserMapper.html":{}}}],["array.isarray(models",{"_index":1332,"title":{},"body":{"injectables/UserMapper.html":{}}}],["arriba",{"_index":1123,"title":{},"body":{"components/TaskListComponent.html":{}}}],["assignment",{"_index":1126,"title":{},"body":{"components/TaskListComponent.html":{}}}],["associated",{"_index":1547,"title":{},"body":{"license.html":{}}}],["async)?.length",{"_index":1125,"title":{},"body":{"components/TaskListComponent.html":{}}}],["autenticación",{"_index":500,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["autenticado",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/services/auth.service",{"_index":515,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["autherrors",{"_index":516,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.access_prohibited",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.bad_request",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.internal_server_error",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.no_internet_connection",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.occasional_error",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.resource_not_found",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autherrors.unauthorized",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authfacade",{"_index":100,"title":{"injectables/AuthFacade.html":{}},"body":{"injectables/AuthFacade.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":193,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":207,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":1588,"title":{},"body":{"license.html":{}}}],["authroutingmodule",{"_index":217,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":113,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"components/TaskListComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authservice.getcurrentuser",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.logout",{"_index":545,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":1131,"title":{},"body":{"components/TaskListComponent.html":{}}}],["autorizado",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1606,"title":{},"body":{"modules.html":{}}}],["b",{"_index":1236,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["backdrop",{"_index":653,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["background",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["bad_request",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bajo",{"_index":680,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["bar",{"_index":157,"title":{},"body":{"injectables/AuthFacade.html":{},"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/SharedModule.html":{},"injectables/TasksFacade.html":{}}}],["basado",{"_index":510,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["base.service",{"_index":368,"title":{},"body":{"modules/CoreModule.html":{},"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["base.service.ts",{"_index":567,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["base.service.ts:10",{"_index":576,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:20",{"_index":599,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:35",{"_index":603,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:45",{"_index":606,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:54",{"_index":588,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:61",{"_index":578,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["before",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["behavior",{"_index":1103,"title":{},"body":{"components/TaskListComponent.html":{}}}],["behaviorsubject",{"_index":151,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/TasksFacade.html":{}}}],["behaviorsubject(false",{"_index":149,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["behaviorsubject(null",{"_index":145,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/TasksFacade.html":{}}}],["between",{"_index":1033,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["black",{"_index":974,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["block",{"_index":334,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/UserCreationDialog.html":{}}}],["blur(2px",{"_index":655,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["body",{"_index":602,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["boolean",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["bootstrap",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["border",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["bottom",{"_index":554,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["break",{"_index":534,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/TaskItemComponent.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":1604,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1519,"title":{},"body":{"index.html":{}}}],["buildparams",{"_index":570,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["buildparams(params",{"_index":577,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["busca",{"_index":134,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/FindUserUseCase.html":{}}}],["buscar",{"_index":182,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["button",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["c",{"_index":1533,"title":{},"body":{"license.html":{}}}],["cabeceras",{"_index":596,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["cambio",{"_index":997,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["cambios",{"_index":896,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["campo",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"modules/TasksRoutingModule.html":{}}}],["cancela",{"_index":893,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["cancelar",{"_index":330,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["cancelbuttontext",{"_index":321,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskListComponent.html":{}}}],["canceledit",{"_index":931,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["capacidad",{"_index":1425,"title":{},"body":{"index.html":{}}}],["capas",{"_index":1487,"title":{},"body":{"index.html":{}}}],["capturado",{"_index":487,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["caracteres",{"_index":915,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["características",{"_index":1501,"title":{},"body":{"index.html":{}}}],["card",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["carga",{"_index":1060,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["cargado",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cargando",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["cargar",{"_index":1241,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["carpetas",{"_index":1527,"title":{},"body":{"index.html":{}}}],["case",{"_index":531,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":690,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["catcherror",{"_index":152,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"injectables/UserRepositoryImpl.html":{}}}],["catcherror((error",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror(error",{"_index":173,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"injectables/UserRepositoryImpl.html":{}}}],["center",{"_index":552,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["cerrar",{"_index":183,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["challenge_atom",{"_index":1417,"title":{},"body":{"index.html":{}}}],["challengeatombackend",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["challengeatombackend.firebaseapp.com",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["challengeatombackend.firebasestorage.app",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changes",{"_index":945,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["changes['task",{"_index":953,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["charge",{"_index":1542,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":1021,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["cierra",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskListComponent.html":{}}}],["claim",{"_index":1591,"title":{},"body":{"license.html":{}}}],["class",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}}}],["clave",{"_index":671,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cli",{"_index":1448,"title":{},"body":{"index.html":{}}}],["clonar",{"_index":1453,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1456,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1441,"title":{},"body":{"index.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":352,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":353,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":820,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":822,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":821,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1268,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1270,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":1269,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code_module_errpr",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["column",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["comando",{"_index":1474,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["como",{"_index":1427,"title":{},"body":{"index.html":{}}}],["compartidos",{"_index":1499,"title":{},"body":{"index.html":{}}}],["completa",{"_index":1504,"title":{},"body":{"index.html":{}}}],["completada",{"_index":1011,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["completada/pendiente",{"_index":999,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["completadas",{"_index":1428,"title":{},"body":{"index.html":{}}}],["completado",{"_index":1000,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["completed",{"_index":401,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksRoutingModule.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["componentes",{"_index":1489,"title":{},"body":{"index.html":{}}}],["componentexports",{"_index":838,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"overview.html":{}}}],["comprueba",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["con",{"_index":129,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":1569,"title":{},"body":{"license.html":{}}}],["conectar",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conexión",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":1478,"title":{},"body":{"index.html":{}}}],["config/app",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["config/error",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["config:prod",{"_index":1480,"title":{},"body":{"index.html":{}}}],["configuraciones",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["confirma",{"_index":1066,"title":{},"body":{"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["confirmación",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["confirmar",{"_index":332,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmbuttoncolor",{"_index":322,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskListComponent.html":{}}}],["confirmbuttontext",{"_index":320,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskListComponent.html":{}}}],["confirmdialogcomponent",{"_index":74,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["confirmdialogdata",{"_index":302,"title":{"interfaces/ConfirmDialogData.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["connection",{"_index":1600,"title":{},"body":{"license.html":{}}}],["connectionerror",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('error",{"_index":522,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/LocalStorageService.html":{},"injectables/TasksFacade.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":236,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserRepositoryImpl.html":{}}}],["constructor(@optional",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(authservice",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(dialogref",{"_index":300,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/UserCreationDialog.html":{}}}],["constructor(fb",{"_index":883,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["constructor(finduserusecase",{"_index":110,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["constructor(formbuilder",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(gettasksusecase",{"_index":1204,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["constructor(http",{"_index":574,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["constructor(httpbase",{"_index":847,"title":{},"body":{"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["constructor(injector",{"_index":479,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["constructor(localstorageservice",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/TaskApiService.html":{},"components/TaskFormComponent.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{}}}],["constructor(taskapiservice",{"_index":1175,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["constructor(taskrepository",{"_index":386,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["constructor(tasksfacade",{"_index":1056,"title":{},"body":{"components/TaskListComponent.html":{}}}],["constructor(titleservice",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userapiservice",{"_index":1340,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["constructor(userrepository",{"_index":408,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{}}}],["consulta",{"_index":600,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["container",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["content",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["continuar",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["continúa",{"_index":1121,"title":{},"body":{"components/TaskListComponent.html":{}}}],["contract",{"_index":1596,"title":{},"body":{"license.html":{}}}],["control",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["control.dirty",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["control.haserror('email",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.haserror('required",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["control.haserror(errorname",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["control.touched",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["controlname",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["contruimos",{"_index":1518,"title":{},"body":{"index.html":{}}}],["convertido",{"_index":684,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["convierte",{"_index":579,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["copies",{"_index":1563,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1545,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1532,"title":{},"body":{"license.html":{}}}],["core",{"_index":1498,"title":{},"body":{"index.html":{}}}],["core/authentication/guards/auth.guard",{"_index":1278,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["core/authentication/services/auth.service",{"_index":161,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"components/TaskListComponent.html":{}}}],["core/http/http",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{},"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["core/http/interceptors/error.interceptor",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/http/interceptors/http.token.interceptor",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/services/error",{"_index":365,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/services/local",{"_index":363,"title":{},"body":{"modules/CoreModule.html":{}}}],["coremodule",{"_index":351,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correo",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"components/UserCreationDialog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":1135,"title":{},"body":{"components/TaskListComponent.html":{}}}],["coverage",{"_index":1352,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":121,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CreateUserUseCase.html":{},"injectables/TasksFacade.html":{}}}],["creación",{"_index":1074,"title":{},"body":{"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["creada",{"_index":1251,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["creado",{"_index":131,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CreateUserUseCase.html":{}}}],["crear",{"_index":191,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CreateTaskUseCase.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskFormComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserRepositoryImpl.html":{},"index.html":{}}}],["createdat",{"_index":403,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"injectables/TaskMapper.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{}}}],["createtask",{"_index":842,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["createtask(task",{"_index":850,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["createtask(userid",{"_index":1207,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["createtaskusecase",{"_index":382,"title":{"injectables/CreateTaskUseCase.html":{}},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/TasksFacade.html":{},"coverage.html":{}}}],["createuser",{"_index":108,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["createuser(email",{"_index":118,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["createuserusecase",{"_index":112,"title":{"injectables/CreateUserUseCase.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["creating",{"_index":1252,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["creation",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["creation.dialog",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{}}}],["creation.dialog.html",{"_index":1298,"title":{},"body":{"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["creation.dialog.scss",{"_index":1297,"title":{},"body":{"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["creation.dialog.ts",{"_index":1296,"title":{},"body":{"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{}}}],["creation.dialog.ts:21",{"_index":1300,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["creation.dialog.ts:23",{"_index":1304,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["creation.dialog.ts:24",{"_index":1303,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["creation.dialog.ts:30",{"_index":1302,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["creation.dialog.ts:37",{"_index":1301,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["creation/user",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{}}}],["crud",{"_index":1505,"title":{},"body":{"index.html":{}}}],["cual",{"_index":681,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cualquier",{"_index":486,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cuenta",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["cuerpo",{"_index":604,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["currenttasks",{"_index":1247,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["currenttasks.filter(task",{"_index":1264,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["currenttasks.findindex(task",{"_index":1256,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["currentuser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["currentuser.id",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentusersubject",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["código",{"_index":511,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["damages",{"_index":1592,"title":{},"body":{"license.html":{}}}],["dar",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":296,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"index.html":{}}}],["data.cancelbuttontext",{"_index":329,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["data.confirmbuttontext",{"_index":331,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["data.email",{"_index":1305,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["data.title",{"_index":328,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["data/datasources/remote/task.api.service",{"_index":1184,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["data/datasources/remote/user.api.service",{"_index":1345,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["data/dtos/task.dto",{"_index":867,"title":{},"body":{"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{}}}],["data/dtos/user.dto",{"_index":1293,"title":{},"body":{"injectables/UserApiService.html":{}}}],["data/mappers/task.mapper",{"_index":1185,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["data/mappers/user.mapper",{"_index":1346,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["data/repositories/task.repository.impl",{"_index":397,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["data/repositories/user.repository.impl",{"_index":414,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{}}}],["date",{"_index":404,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"pipes/DateFormatPipe.html":{},"interfaces/Task.html":{},"components/TaskItemComponent.html":{},"interfaces/User.html":{},"injectables/UserMapper.html":{}}}],["date().toisostring",{"_index":1166,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserApiService.html":{}}}],["date(a.createdat).gettime",{"_index":1238,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["date(b.createdat).gettime",{"_index":1237,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["date(dto.createdat",{"_index":1159,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["date(value",{"_index":438,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["date.gettime",{"_index":443,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["dateformat",{"_index":421,"title":{},"body":{"pipes/DateFormatPipe.html":{},"miscellaneous/variables.html":{}}}],["dateformat:'mediumdate",{"_index":1009,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dateformat:\\'mediumdate",{"_index":1041,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dateformatpipe",{"_index":417,"title":{"pipes/DateFormatPipe.html":{}},"body":{"pipes/DateFormatPipe.html":{},"modules/SharedModule.html":{},"components/TaskItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datepipe",{"_index":431,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["datepipe('es",{"_index":432,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["dato",{"_index":1521,"title":{},"body":{"index.html":{}}}],["datos",{"_index":890,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":452,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["dd",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd/mm/yyyy",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":179,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":1549,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1601,"title":{},"body":{"license.html":{}}}],["debe",{"_index":1523,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decoration",{"_index":1026,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["decorators",{"_index":310,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/UserCreationDialog.html":{}}}],["default",{"_index":141,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"pipes/DateFormatPipe.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["defaultpagesize",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["del",{"_index":127,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":571,"title":{},"body":{"injectables/HttpBaseService.html":{},"components/TaskItemComponent.html":{}}}],["delete(endpoint",{"_index":585,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["deletetask",{"_index":843,"title":{},"body":{"injectables/TaskApiService.html":{},"components/TaskItemComponent.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["deletetask(userid",{"_index":853,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["deletetaskusecase",{"_index":463,"title":{"injectables/DeleteTaskUseCase.html":{}},"body":{"injectables/DeleteTaskUseCase.html":{},"injectables/TasksFacade.html":{},"coverage.html":{}}}],["deleting",{"_index":1266,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["dependencias",{"_index":1460,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1520,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":495,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["descripción",{"_index":916,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["description",{"_index":125,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TasksFacade.html":{}}}],["desde",{"_index":669,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deseas",{"_index":1111,"title":{},"body":{"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["deserializado",{"_index":673,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deshacer",{"_index":1114,"title":{},"body":{"components/TaskListComponent.html":{}}}],["details",{"_index":1030,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dialog",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["dialog'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["dialog.component",{"_index":832,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskListComponent.html":{}}}],["dialog.component.html",{"_index":294,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{}}}],["dialog.component.scss",{"_index":293,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{}}}],["dialog.component.ts",{"_index":290,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:21",{"_index":303,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":313,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":312,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":304,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":308,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":289,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/SharedModule.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1107,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dialogref",{"_index":297,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["diameter",{"_index":627,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["diarias",{"_index":1424,"title":{},"body":{"index.html":{}}}],["diff",{"_index":441,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["dirección",{"_index":1526,"title":{},"body":{"index.html":{}}}],["direction",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["directive",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["directives",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["diseño",{"_index":1506,"title":{},"body":{"index.html":{}}}],["display",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["disponibles",{"_index":1128,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dist/tareas",{"_index":1528,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1559,"title":{},"body":{"license.html":{}}}],["diálogo",{"_index":305,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskListComponent.html":{}}}],["documentation",{"_index":1353,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["domain/models/task.model",{"_index":396,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["domain/models/user.model",{"_index":162,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}}}],["domain/repositories/task.repository",{"_index":1183,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["domain/repositories/user.repository",{"_index":1344,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["domain/usecases/task/create",{"_index":1228,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["domain/usecases/task/delete",{"_index":1231,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["domain/usecases/task/get",{"_index":1226,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["domain/usecases/task/update",{"_index":1230,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["domain/usecases/user/create",{"_index":160,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["domain/usecases/user/find",{"_index":158,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["dominio",{"_index":1492,"title":{},"body":{"index.html":{}}}],["dt/challenge_atom_frontend",{"_index":1458,"title":{},"body":{"index.html":{}}}],["dto",{"_index":1150,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/UserMapper.html":{}}}],["dto).pipe",{"_index":1198,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["dto.completed",{"_index":1158,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["dto.createdat",{"_index":1325,"title":{},"body":{"injectables/UserMapper.html":{}}}],["dto.description",{"_index":1157,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["dto.email",{"_index":1324,"title":{},"body":{"injectables/UserMapper.html":{}}}],["dto.id",{"_index":1154,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["dto.title",{"_index":1156,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["dto.userid",{"_index":1155,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["dtos",{"_index":1318,"title":{},"body":{"injectables/UserMapper.html":{}}}],["dtos.map(dto",{"_index":1330,"title":{},"body":{"injectables/UserMapper.html":{}}}],["dtos/user.dto",{"_index":1323,"title":{},"body":{"injectables/UserMapper.html":{}}}],["duration",{"_index":184,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["durations",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["día",{"_index":456,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["días",{"_index":457,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["e",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["e8f5e9",{"_index":1039,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["edición",{"_index":894,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["edit",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["edit.dialog",{"_index":1276,"title":{},"body":{"modules/TasksModule.html":{}}}],["edit.dialog.html",{"_index":879,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["edit.dialog.scss",{"_index":878,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["edit.dialog.ts",{"_index":877,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"coverage.html":{}}}],["edit.dialog.ts:34",{"_index":885,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:39",{"_index":897,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:42",{"_index":891,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:49",{"_index":888,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:65",{"_index":887,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:73",{"_index":895,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit.dialog.ts:82",{"_index":892,"title":{},"body":{"components/TaskEditDialog.html":{}}}],["edit/task",{"_index":876,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["editando",{"_index":1122,"title":{},"body":{"components/TaskListComponent.html":{}}}],["editar",{"_index":910,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["edittask",{"_index":985,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["eeeeee",{"_index":1037,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ejecutamos",{"_index":1472,"title":{},"body":{"index.html":{}}}],["el",{"_index":130,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateUserUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["elimina",{"_index":676,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["eliminada",{"_index":1265,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["eliminando",{"_index":697,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["eliminar",{"_index":468,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"index.html":{}}}],["email",{"_index":126,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["emite",{"_index":992,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["empty",{"_index":1137,"title":{},"body":{"components/TaskListComponent.html":{}}}],["en",{"_index":488,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encontrado",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encontrar",{"_index":1290,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserRepositoryImpl.html":{}}}],["end",{"_index":976,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["endpoint",{"_index":593,"title":{},"body":{"injectables/HttpBaseService.html":{},"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["entorno",{"_index":494,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["env",{"_index":1465,"title":{},"body":{"index.html":{}}}],["env(secrets",{"_index":1512,"title":{},"body":{"index.html":{}}}],["env.production",{"_index":1466,"title":{},"body":{"index.html":{}}}],["environment",{"_index":513,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":607,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["environment.production",{"_index":518,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["environment.ts",{"_index":1476,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":514,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{}}}],["envía",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["error",{"_index":104,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"injectables/TasksFacade.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["error(moduleserrors.code_module_errpr",{"_index":381,"title":{},"body":{"modules/CoreModule.html":{}}}],["error.error",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.error.message",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":525,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.status",{"_index":524,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["errores",{"_index":493,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["errorevent",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerservice",{"_index":364,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorinterceptor",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errormessage",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorname",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["errorsubject",{"_index":106,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["es",{"_index":433,"title":{},"body":{"pipes/DateFormatPipe.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["específico",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["est",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["esta",{"_index":1112,"title":{},"body":{"components/TaskListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estado",{"_index":998,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["estados",{"_index":164,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["estar",{"_index":1470,"title":{},"body":{"index.html":{}}}],["este",{"_index":1307,"title":{},"body":{"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["estructura",{"_index":1484,"title":{},"body":{"index.html":{}}}],["estás",{"_index":1108,"title":{},"body":{"components/TaskListComponent.html":{}}}],["event",{"_index":1007,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"license.html":{}}}],["event.completed",{"_index":1106,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eventemitter",{"_index":936,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["evento",{"_index":993,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["exceder",{"_index":914,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["execute",{"_index":385,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["execute(email",{"_index":412,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{}}}],["execute(id",{"_index":1280,"title":{},"body":{"injectables/UpdateTaskUseCase.html":{}}}],["execute(userid",{"_index":390,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{}}}],["execute(userid:string",{"_index":469,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{}}}],["existe",{"_index":140,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/FindUserUseCase.html":{},"injectables/LocalStorageService.html":{},"components/TaskFormComponent.html":{}}}],["existente",{"_index":1215,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["exit_to_app",{"_index":1120,"title":{},"body":{"components/TaskListComponent.html":{}}}],["expirado",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["exports",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1579,"title":{},"body":{"license.html":{}}}],["f5f5f5",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["facades",{"_index":1491,"title":{},"body":{"index.html":{}}}],["false",{"_index":402,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"components/LoadingIndicatorComponent.html":{},"components/TaskFormComponent.html":{}}}],["favor",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":886,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["fff",{"_index":969,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["field",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["files",{"_index":1548,"title":{},"body":{"license.html":{}}}],["filter",{"_index":654,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["finalize",{"_index":153,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["finding",{"_index":1350,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["finduser",{"_index":109,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["finduser(email",{"_index":132,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["finduserbyemail",{"_index":1285,"title":{},"body":{"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["finduserbyemail(email",{"_index":1288,"title":{},"body":{"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["finduserusecase",{"_index":111,"title":{"injectables/FindUserUseCase.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/FindUserUseCase.html":{},"coverage.html":{}}}],["firbase",{"_index":1517,"title":{},"body":{"index.html":{}}}],["firebas",{"_index":1516,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":1438,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.json",{"_index":1525,"title":{},"body":{"index.html":{}}}],["firestore",{"_index":1440,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1584,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":645,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["flex",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["following",{"_index":1568,"title":{},"body":{"license.html":{}}}],["font",{"_index":656,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["footer",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["form'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["form.component",{"_index":1087,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["form.component.html",{"_index":926,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.scss",{"_index":925,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts",{"_index":923,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:100",{"_index":939,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:25",{"_index":935,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:26",{"_index":934,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:27",{"_index":938,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:28",{"_index":937,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:30",{"_index":951,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:31",{"_index":933,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:35",{"_index":946,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:39",{"_index":944,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:48",{"_index":940,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:60",{"_index":949,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:76",{"_index":948,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:92",{"_index":947,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form/task",{"_index":922,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["format",{"_index":428,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["format.pipe",{"_index":834,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{}}}],["format.pipe.ts",{"_index":420,"title":{},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{}}}],["format.pipe.ts:11",{"_index":429,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["format.pipe.ts:23",{"_index":424,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["format.pipe.ts:9",{"_index":434,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["formbuilder",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["formgroup",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["formsmodule",{"_index":824,"title":{},"body":{"modules/SharedModule.html":{}}}],["formulario",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["formularios",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":1541,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":509,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fromdto",{"_index":1146,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["fromdto(dto",{"_index":1148,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["fromdtolist",{"_index":1313,"title":{},"body":{"injectables/UserMapper.html":{}}}],["fromdtolist(dtos",{"_index":1316,"title":{},"body":{"injectables/UserMapper.html":{}}}],["función",{"_index":1078,"title":{},"body":{"components/TaskListComponent.html":{}}}],["function",{"_index":1442,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1566,"title":{},"body":{"license.html":{}}}],["gap",{"_index":977,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["generador",{"_index":1510,"title":{},"body":{"index.html":{}}}],["general",{"_index":1419,"title":{},"body":{"index.html":{}}}],["generales",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generar",{"_index":1475,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":1422,"title":{},"body":{"index.html":{}}}],["gestión",{"_index":1416,"title":{},"body":{"index.html":{}}}],["get(endpoint",{"_index":598,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["getcurrentuser",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["geterrormessage",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{}}}],["geterrormessage('email",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["geterrormessage(\\'email",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["geterrormessage(controlname",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{}}}],["getitem",{"_index":662,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":665,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettaskbyid",{"_index":844,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["gettaskbyid(id",{"_index":855,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["gettasks",{"_index":845,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["gettasks(userid",{"_index":857,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["gettasksusecase",{"_index":558,"title":{"injectables/GetTasksUseCase.html":{}},"body":{"injectables/GetTasksUseCase.html":{},"injectables/TasksFacade.html":{},"coverage.html":{}}}],["gettimeago",{"_index":422,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["gettimeago(date",{"_index":423,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["getting",{"_index":1414,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":1455,"title":{},"body":{"index.html":{}}}],["globales",{"_index":1500,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1540,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1605,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":192,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guarda",{"_index":679,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["guardando",{"_index":691,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["guardar",{"_index":682,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TaskEditDialog.html":{}}}],["guards",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":1132,"title":{},"body":{"components/TaskListComponent.html":{}}}],["h2",{"_index":972,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["ha",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["hace",{"_index":455,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["handleerror",{"_index":473,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":482,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerrordevelopment",{"_index":474,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerrordevelopment(error",{"_index":491,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerrorproduction",{"_index":475,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerrorproduction(error",{"_index":496,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{}}}],["handler.service.ts",{"_index":472,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:13",{"_index":481,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:20",{"_index":484,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:31",{"_index":492,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:44",{"_index":497,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:59",{"_index":508,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:86",{"_index":499,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:98",{"_index":503,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleunauthorizederror",{"_index":476,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["haserror",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["haserror(controlname",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["hay",{"_index":1127,"title":{},"body":{"components/TaskListComponent.html":{}}}],["header",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["headers",{"_index":586,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["height",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["help",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["hereby",{"_index":1539,"title":{},"body":{"license.html":{}}}],["hh3d764h5q",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh:mm",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlightdirective",{"_index":835,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1589,"title":{},"body":{"license.html":{}}}],["hora",{"_index":458,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["horas",{"_index":459,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["horizontalposition",{"_index":551,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":333,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskEditDialog.html":{},"components/UserCreationDialog.html":{}}}],["hosting",{"_index":1439,"title":{},"body":{"index.html":{}}}],["hours",{"_index":450,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["hover",{"_index":1015,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["http",{"_index":512,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"miscellaneous/variables.html":{}}}],["httpbase",{"_index":849,"title":{},"body":{"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["httpbaseservice",{"_index":354,"title":{"injectables/HttpBaseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/HttpBaseService.html":{},"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"overview.html":{}}}],["httpclient",{"_index":575,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["httpclientmodule",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":483,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":587,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["httpinterceptorfn",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparams",{"_index":582,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["httpparams.set(key",{"_index":617,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["https://api",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/beto",{"_index":1457,"title":{},"body":{"index.html":{}}}],["httptokeninterceptor",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":1035,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["id",{"_index":564,"title":{},"body":{"injectables/GetTasksUseCase.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["implementa",{"_index":1429,"title":{},"body":{"index.html":{}}}],["implementaciones",{"_index":1495,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/DateFormatPipe.html":{},"injectables/ErrorHandlerService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/UserRepositoryImpl.html":{}}}],["implied",{"_index":1580,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["important",{"_index":975,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["importarse",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["included",{"_index":1573,"title":{},"body":{"license.html":{}}}],["including",{"_index":1552,"title":{},"body":{"license.html":{}}}],["incorrect_data",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incorrecta",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incorrectos",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":622,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["indicator.component",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskListComponent.html":{}}}],["indicator.component.html",{"_index":625,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":624,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":621,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"coverage.html":{}}}],["indicator.component.ts:13",{"_index":632,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:14",{"_index":633,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:15",{"_index":634,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:16",{"_index":630,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator/loading",{"_index":620,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["inesperado",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["información",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ingresa",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicia",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["inicializa",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["iniciar",{"_index":238,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["initform",{"_index":881,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["initializefromstorage",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject",{"_index":314,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["inject(authservice",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(mat_dialog_data",{"_index":311,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["inject(matsnackbar",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":99,"title":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"overview.html":{}}}],["injector",{"_index":480,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["input",{"_index":635,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["input({transform",{"_index":639,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["inputs",{"_index":626,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["instalación",{"_index":1452,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":1459,"title":{},"body":{"index.html":{}}}],["install",{"_index":1462,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":521,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/UserMapper.html":{},"miscellaneous/variables.html":{}}}],["intenta",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["interface",{"_index":318,"title":{"interfaces/ConfirmDialogData.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"interfaces/TaskRepository.html":{},"interfaces/User.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"interfaces/UserRepository.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"interfaces/TaskRepository.html":{},"interfaces/User.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"interfaces/UserRepository.html":{},"coverage.html":{}}}],["interfaces",{"_index":350,"title":{},"body":{"interfaces/ConfirmDialogData.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"interfaces/TaskRepository.html":{},"interfaces/User.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"interfaces/UserRepository.html":{},"index.html":{},"overview.html":{}}}],["interfaz",{"_index":1508,"title":{},"body":{"index.html":{}}}],["internal_server_error",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internet",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interno",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["introduce",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intuitiva",{"_index":1509,"title":{},"body":{"index.html":{}}}],["inténtalo",{"_index":178,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["invalidcredentials",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["inválido",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["isauthenticated",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["iseditmode",{"_index":927,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["iso",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":692,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TaskItemComponent.html":{}}}],["item'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["item.component",{"_index":1088,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["item.component.html",{"_index":981,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.scss",{"_index":980,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts",{"_index":979,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:27",{"_index":987,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:28",{"_index":990,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:29",{"_index":989,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:30",{"_index":988,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:36",{"_index":996,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:43",{"_index":994,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:50",{"_index":991,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item/task",{"_index":978,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["items",{"_index":642,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["json",{"_index":685,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(item",{"_index":694,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":688,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":643,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["key",{"_index":670,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["kind",{"_index":1578,"title":{},"body":{"license.html":{}}}],["la",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":860,"title":{},"body":{"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"index.html":{}}}],["left",{"_index":647,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/TaskItemComponent.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmDialogComponent.html":{},"modules/CoreModule.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"overview.html":{}}}],["liability",{"_index":1593,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1590,"title":{},"body":{"license.html":{}}}],["license",{"_index":1530,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1553,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1581,"title":{},"body":{"license.html":{}}}],["limpia",{"_index":1431,"title":{},"body":{"index.html":{}}}],["line",{"_index":1027,"title":{},"body":{"components/TaskItemComponent.html":{},"components/UserCreationDialog.html":{}}}],["list",{"_index":1044,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["list.component",{"_index":1274,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.component.html",{"_index":1046,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1045,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1043,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":1068,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:111",{"_index":1071,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:123",{"_index":1065,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:151",{"_index":1061,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:159",{"_index":1077,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:39",{"_index":1085,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:40",{"_index":1083,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:41",{"_index":1084,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:43",{"_index":1058,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:56",{"_index":1062,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:63",{"_index":1059,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:75",{"_index":1073,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:96",{"_index":1063,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list/task",{"_index":1042,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["listas",{"_index":1081,"title":{},"body":{"components/TaskListComponent.html":{}}}],["literal",{"_index":392,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["loader",{"_index":640,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{}}}],["loading",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{}}}],["loadingindicatorcomponent",{"_index":77,"title":{"components/LoadingIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loadingsubject",{"_index":107,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["loadingtimeout",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadtasks",{"_index":1203,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["loadtasks(userid",{"_index":1211,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["loadusertasks",{"_index":1049,"title":{},"body":{"components/TaskListComponent.html":{}}}],["local",{"_index":1451,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":693,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":696,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":689,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":252,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["logemoas",{"_index":1515,"title":{},"body":{"index.html":{}}}],["login",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["login(user",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":80,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskListComponent.html":{}}}],["los",{"_index":889,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["luis",{"_index":1535,"title":{},"body":{"license.html":{}}}],["maneja",{"_index":485,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["manejar",{"_index":490,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["map",{"_index":1182,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{},"injectables/UserRepositoryImpl.html":{}}}],["map(responsedto",{"_index":1195,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["map(taskdto",{"_index":1191,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["map(taskdtos",{"_index":1187,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["map(userdto",{"_index":1348,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["marcar",{"_index":1426,"title":{},"body":{"index.html":{}}}],["margin",{"_index":339,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["mat",{"_index":335,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/UserCreationDialog.html":{}}}],["mat_dialog_data",{"_index":315,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["mat_snack_bar_default_options",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":292,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskItemComponent.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodule",{"_index":825,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["matdialogmodule",{"_index":291,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":301,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["material",{"_index":1443,"title":{},"body":{"index.html":{}}}],["materialmodules",{"_index":837,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["math.floor(diff",{"_index":445,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["math.floor(hours",{"_index":453,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["math.floor(minutes",{"_index":451,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["math.floor(seconds",{"_index":448,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["maticonmodule",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":827,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":623,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":116,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"injectables/TasksFacade.html":{}}}],["matsnackbarmodule",{"_index":362,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":829,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["maxdescriptionlength",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtitlelength",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["mediumdate",{"_index":430,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["mensaje",{"_index":505,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["mensajes",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1583,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1557,"title":{},"body":{"license.html":{}}}],["message",{"_index":319,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":375,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["messages.ts",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagingsenderid",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":1032,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["min",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["minpasswordlength",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":447,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["minuto",{"_index":460,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["minutos",{"_index":461,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["mis",{"_index":1119,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["miscellaneous",{"_index":1613,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1531,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1153,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["model.completed",{"_index":1164,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["model.createdat",{"_index":1327,"title":{},"body":{"injectables/UserMapper.html":{}}}],["model.createdat.toisostring",{"_index":1328,"title":{},"body":{"injectables/UserMapper.html":{}}}],["model.createdat?.toisostring",{"_index":1165,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["model.description",{"_index":1163,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["model.email",{"_index":1326,"title":{},"body":{"injectables/UserMapper.html":{}}}],["model.id",{"_index":1160,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["model.title",{"_index":1162,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["model.userid",{"_index":1161,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["modelos",{"_index":1493,"title":{},"body":{"index.html":{}}}],["models",{"_index":1322,"title":{},"body":{"injectables/UserMapper.html":{}}}],["models.map(model",{"_index":1333,"title":{},"body":{"injectables/UserMapper.html":{}}}],["models/task.model",{"_index":1173,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["models/user.model",{"_index":1338,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["modify",{"_index":1556,"title":{},"body":{"license.html":{}}}],["modo",{"_index":1479,"title":{},"body":{"index.html":{}}}],["module",{"_index":206,"title":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":208,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleserrors",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momento",{"_index":462,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["muestra",{"_index":504,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["más",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["navigator.online",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["negativo",{"_index":307,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{}}}],["new",{"_index":144,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/HttpBaseService.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"coverage.html":{}}}],["newtask",{"_index":398,"title":{},"body":{"injectables/CreateTaskUseCase.html":{}}}],["next",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request).pipe",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1082,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngonchanges",{"_index":928,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ngonchanges(changes",{"_index":942,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["no_internet_connection",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":1446,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1587,"title":{},"body":{"license.html":{}}}],["nos",{"_index":1514,"title":{},"body":{"index.html":{}}}],["notfound",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notice",{"_index":1571,"title":{},"body":{"license.html":{}}}],["now",{"_index":440,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["now.gettime",{"_index":442,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["npm",{"_index":1461,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":965,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["nuevamente",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuevo",{"_index":123,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CreateUserUseCase.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":138,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/FindUserUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}}}],["number",{"_index":427,"title":{},"body":{"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{},"components/TaskListComponent.html":{}}}],["numberattribute",{"_index":636,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["o",{"_index":137,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/FindUserUseCase.html":{},"injectables/LocalStorageService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["object",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(params).foreach(key",{"_index":614,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["objeto",{"_index":580,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["obligatoria",{"_index":917,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["obligatorio",{"_index":912,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":128,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["observables",{"_index":165,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["obtaining",{"_index":1544,"title":{},"body":{"license.html":{}}}],["obtener",{"_index":563,"title":{},"body":{"injectables/GetTasksUseCase.html":{},"injectables/TaskApiService.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["obtiene",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["occasional_error",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ocurrido",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(null",{"_index":186,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"injectables/UserRepositoryImpl.html":{}}}],["oncancel",{"_index":298,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["oncanceledit",{"_index":1050,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onchanges",{"_index":924,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["onconfirm",{"_index":299,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["ondelete",{"_index":982,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ondeletetask",{"_index":1051,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ondeletetask(taskid",{"_index":1064,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedit",{"_index":983,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["onedittask",{"_index":1052,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedittask(task",{"_index":1067,"title":{},"body":{"components/TaskListComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["onsave",{"_index":882,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["onstatuschange",{"_index":984,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["onstatuschange(completed",{"_index":995,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["onsubmit",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{}}}],["ontaskstatuschange",{"_index":1053,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontaskstatuschange(event",{"_index":1070,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasksubmit",{"_index":1054,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ontasksubmit(taskdata",{"_index":1072,"title":{},"body":{"components/TaskListComponent.html":{}}}],["opcional",{"_index":1450,"title":{},"body":{"index.html":{}}}],["opcionales",{"_index":597,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["opción",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["optimizar",{"_index":1079,"title":{},"body":{"components/TaskListComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["options",{"_index":608,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["otherwise",{"_index":1598,"title":{},"body":{"license.html":{}}}],["out",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":952,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["outputs",{"_index":930,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["overlay",{"_index":628,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["overview",{"_index":1607,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":338,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["package",{"_index":1401,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":347,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["pages",{"_index":1490,"title":{},"body":{"index.html":{}}}],["pagesizeoptions",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panelclass",{"_index":555,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["para",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":166,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"components/TaskItemComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserRepositoryImpl.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["params",{"_index":583,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["params[key",{"_index":615,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["params[key].tostring",{"_index":618,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["parciales",{"_index":1216,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["parentmodule",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{}}}],["partial",{"_index":863,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["particular",{"_index":1585,"title":{},"body":{"license.html":{}}}],["partir",{"_index":1511,"title":{},"body":{"index.html":{}}}],["parámetros",{"_index":581,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["path",{"_index":237,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pendiente",{"_index":1012,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["pendientes",{"_index":1124,"title":{},"body":{"components/TaskListComponent.html":{}}}],["permisos",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":1538,"title":{},"body":{"license.html":{}}}],["permissiondenied",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["permit",{"_index":1564,"title":{},"body":{"license.html":{}}}],["permite",{"_index":1420,"title":{},"body":{"index.html":{}}}],["person",{"_index":1543,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1565,"title":{},"body":{"license.html":{}}}],["petición",{"_index":592,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["pipe",{"_index":416,"title":{"pipes/DateFormatPipe.html":{}},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":418,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["pipetransform",{"_index":435,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["por",{"_index":135,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/TaskApiService.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/UserApiService.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1575,"title":{},"body":{"license.html":{}}}],["position",{"_index":644,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["positivo",{"_index":309,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{}}}],["post",{"_index":572,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["post(endpoint",{"_index":601,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["pre",{"_index":344,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskItemComponent.html":{}}}],["presentación",{"_index":1488,"title":{},"body":{"index.html":{}}}],["presentation/features/auth/auth",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["presentation/features/auth/auth.facade",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{}}}],["presentation/features/auth/components/login/login.component",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["presentation/features/auth/dialogs/user",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{}}}],["presentation/features/tasks/components/task",{"_index":1086,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["presentation/features/tasks/dialogs/task",{"_index":1275,"title":{},"body":{"modules/TasksModule.html":{}}}],["presentation/features/tasks/tasks",{"_index":1273,"title":{},"body":{"modules/TasksModule.html":{}}}],["presentation/features/tasks/tasks.facade",{"_index":1089,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["previos",{"_index":1445,"title":{},"body":{"index.html":{}}}],["primary",{"_index":323,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{}}}],["principales",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":105,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/DateFormatPipe.html":{},"injectables/ErrorHandlerService.html":{},"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"injectables/UserRepositoryImpl.html":{}}}],["producción",{"_index":498,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["production",{"_index":1481,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prohibido",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectid",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"pipes/DateFormatPipe.html":{},"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["propietario",{"_index":1209,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["protected",{"_index":568,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["provide",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1576,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":163,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}}}],["providehttpclient",{"_index":359,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["proyecto",{"_index":1483,"title":{},"body":{"index.html":{}}}],["public",{"_index":295,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["publish",{"_index":1558,"title":{},"body":{"license.html":{}}}],["pudieron",{"_index":1240,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["pudo",{"_index":176,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["puede",{"_index":913,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["purpose",{"_index":1586,"title":{},"body":{"license.html":{}}}],["put",{"_index":573,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["put(endpoint",{"_index":605,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["que",{"_index":1110,"title":{},"body":{"components/TaskListComponent.html":{}}}],["radius",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["raiz",{"_index":1463,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["reactivo",{"_index":941,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["readonly",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["realiza",{"_index":590,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["realizar",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recupera",{"_index":667,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["recuperando",{"_index":695,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["recuperar",{"_index":672,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["recurso",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrado",{"_index":1306,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["relativa",{"_index":595,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["removeitem",{"_index":663,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":674,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["renderizado",{"_index":1080,"title":{},"body":{"components/TaskListComponent.html":{}}}],["repositorio",{"_index":1454,"title":{},"body":{"index.html":{}}}],["repositorios",{"_index":1494,"title":{},"body":{"index.html":{}}}],["request",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.clone",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisitos",{"_index":1444,"title":{},"body":{"index.html":{}}}],["reset",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resource_not_found",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsabilidades",{"_index":1433,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":1507,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1551,"title":{},"body":{"license.html":{}}}],["result",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["resultado",{"_index":306,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{}}}],["results",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":169,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["rgb(0",{"_index":1141,"title":{},"body":{"components/TaskListComponent.html":{}}}],["rgb(255",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgba(0",{"_index":658,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["rgba(178",{"_index":1017,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rgba(255",{"_index":649,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["right",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["rights",{"_index":1554,"title":{},"body":{"license.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"injectables/TaskApiService.html":{},"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["router",{"_index":114,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate([approutes.login",{"_index":546,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":234,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":240,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routeroutlet",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":235,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["routing.module.ts",{"_index":233,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["run",{"_index":1477,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":594,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["rutas",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":155,"title":{},"body":{"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"injectables/UserApiService.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"dependencies.html":{}}}],["save",{"_index":966,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["savingtask",{"_index":1047,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["savingtasksubject",{"_index":1201,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["se",{"_index":175,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["seconds",{"_index":444,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["secret",{"_index":1468,"title":{},"body":{"index.html":{}}}],["seguro",{"_index":1109,"title":{},"body":{"components/TaskListComponent.html":{}}}],["selecciona",{"_index":1069,"title":{},"body":{"components/TaskListComponent.html":{}}}],["selectedtask",{"_index":1048,"title":{},"body":{"components/TaskListComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["sell",{"_index":1562,"title":{},"body":{"license.html":{}}}],["separación",{"_index":1432,"title":{},"body":{"index.html":{}}}],["ser",{"_index":683,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["serializedvalue",{"_index":687,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["servererror",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["serviceerrors",{"_index":517,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serviceerrors.access_prohibited",{"_index":538,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serviceerrors.incorrect_data",{"_index":533,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serviceerrors.internal_server_error",{"_index":540,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serviceerrors.no_internet_connection",{"_index":541,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serviceerrors.occasional_error",{"_index":529,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["serviceerrors.resource_not_found",{"_index":536,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["services/local",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["servicio",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["servicios",{"_index":1496,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":1482,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sesión",{"_index":239,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setheaders",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setitem",{"_index":664,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":677,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settings",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{}}}],["settings.ts",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["shall",{"_index":1572,"title":{},"body":{"license.html":{}}}],["shared/components/confirm",{"_index":831,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskListComponent.html":{}}}],["shared/components/loading",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/TaskListComponent.html":{}}}],["shared/directives/highlight.directive",{"_index":836,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/pipes/date",{"_index":833,"title":{},"body":{"modules/SharedModule.html":{},"components/TaskItemComponent.html":{}}}],["sharedmodule",{"_index":819,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showerrormessage",{"_index":477,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["showerrormessage(autherrors.session",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerrormessage(errormessage",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerrormessage(message",{"_index":502,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["showusercreationdialog",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{}}}],["showusercreationdialog(email",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["showuserfriendlyerrormessage",{"_index":478,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["showuserfriendlyerrormessage(error",{"_index":507,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["si",{"_index":139,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/FindUserUseCase.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["sido",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["sigue",{"_index":1485,"title":{},"body":{"index.html":{}}}],["siguiente",{"_index":1473,"title":{},"body":{"index.html":{}}}],["siguientes",{"_index":1486,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":943,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["simplificada",{"_index":1502,"title":{},"body":{"index.html":{}}}],["sin",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":657,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["skipself",{"_index":356,"title":{},"body":{"modules/CoreModule.html":{}}}],["small",{"_index":1034,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["smooth",{"_index":1104,"title":{},"body":{"components/TaskListComponent.html":{}}}],["snackbar",{"_index":115,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/ErrorHandlerService.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["snackbar.open(message",{"_index":549,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":1546,"title":{},"body":{"license.html":{}}}],["solicitud",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":1503,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sortedtasks",{"_index":1234,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"modules/CoreModule.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{}}}],["space",{"_index":343,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["spinner",{"_index":638,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/SharedModule.html":{}}}],["src/.../app",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.interceptor.ts",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.token.interceptor.ts",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/config/app",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/config/error",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/guards/auth.guard.ts",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/guards/auth.guard.ts:10",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/authentication/guards/auth.guard.ts:16",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/authentication/services/auth.service.ts",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/authentication/services/auth.service.ts:11",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:12",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:14",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:26",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:36",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:43",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:51",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/authentication/services/auth.service.ts:59",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/core.module.ts",{"_index":355,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/http",{"_index":566,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["src/app/core/http/interceptors/error.interceptor.ts",{"_index":1370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/interceptors/http.token.interceptor.ts",{"_index":1371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/error",{"_index":471,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/core/services/local",{"_index":660,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts",{"_index":841,"title":{},"body":{"injectables/TaskApiService.html":{},"coverage.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:10",{"_index":848,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:18",{"_index":858,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:26",{"_index":856,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:34",{"_index":852,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:43",{"_index":864,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/task.api.service.ts:52",{"_index":854,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["src/app/data/datasources/remote/user.api.service.ts",{"_index":1284,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["src/app/data/datasources/remote/user.api.service.ts:10",{"_index":1286,"title":{},"body":{"injectables/UserApiService.html":{}}}],["src/app/data/datasources/remote/user.api.service.ts:18",{"_index":1289,"title":{},"body":{"injectables/UserApiService.html":{}}}],["src/app/data/datasources/remote/user.api.service.ts:26",{"_index":1287,"title":{},"body":{"injectables/UserApiService.html":{}}}],["src/app/data/dtos/task.dto.ts",{"_index":874,"title":{},"body":{"interfaces/TaskDto.html":{},"coverage.html":{}}}],["src/app/data/dtos/user.dto.ts",{"_index":1310,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/data/mappers/task.mapper.ts",{"_index":1145,"title":{},"body":{"injectables/TaskMapper.html":{},"coverage.html":{}}}],["src/app/data/mappers/task.mapper.ts:20",{"_index":1152,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["src/app/data/mappers/task.mapper.ts:9",{"_index":1149,"title":{},"body":{"injectables/TaskMapper.html":{}}}],["src/app/data/mappers/user.mapper.ts",{"_index":1312,"title":{},"body":{"injectables/UserMapper.html":{},"coverage.html":{}}}],["src/app/data/mappers/user.mapper.ts:10",{"_index":1315,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/app/data/mappers/user.mapper.ts:22",{"_index":1319,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/app/data/mappers/user.mapper.ts:36",{"_index":1317,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/app/data/mappers/user.mapper.ts:44",{"_index":1321,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/app/data/repositories/task.repository.impl.ts",{"_index":1174,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{},"coverage.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:11",{"_index":1176,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:21",{"_index":1180,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:31",{"_index":1179,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:41",{"_index":1177,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:53",{"_index":1181,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/task.repository.impl.ts:65",{"_index":1178,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["src/app/data/repositories/user.repository.impl.ts",{"_index":1339,"title":{},"body":{"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["src/app/data/repositories/user.repository.impl.ts:11",{"_index":1341,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["src/app/data/repositories/user.repository.impl.ts:21",{"_index":1343,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["src/app/data/repositories/user.repository.impl.ts:35",{"_index":1342,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["src/app/domain/models/task.model.ts",{"_index":839,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/domain/models/user.model.ts",{"_index":1282,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/domain/repositories/task.repository.ts",{"_index":1167,"title":{},"body":{"interfaces/TaskRepository.html":{},"coverage.html":{}}}],["src/app/domain/repositories/task.repository.ts:5",{"_index":1171,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["src/app/domain/repositories/task.repository.ts:6",{"_index":1170,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["src/app/domain/repositories/task.repository.ts:7",{"_index":1168,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["src/app/domain/repositories/task.repository.ts:8",{"_index":1172,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["src/app/domain/repositories/task.repository.ts:9",{"_index":1169,"title":{},"body":{"interfaces/TaskRepository.html":{}}}],["src/app/domain/repositories/user.repository.ts",{"_index":1335,"title":{},"body":{"interfaces/UserRepository.html":{},"coverage.html":{}}}],["src/app/domain/repositories/user.repository.ts:5",{"_index":1337,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/app/domain/repositories/user.repository.ts:6",{"_index":1336,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/app/domain/usecases/task/create",{"_index":383,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"coverage.html":{}}}],["src/app/domain/usecases/task/delete",{"_index":464,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{},"coverage.html":{}}}],["src/app/domain/usecases/task/get",{"_index":559,"title":{},"body":{"injectables/GetTasksUseCase.html":{},"coverage.html":{}}}],["src/app/domain/usecases/task/update",{"_index":1279,"title":{},"body":{"injectables/UpdateTaskUseCase.html":{},"coverage.html":{}}}],["src/app/domain/usecases/user/create",{"_index":406,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"coverage.html":{}}}],["src/app/domain/usecases/user/find",{"_index":556,"title":{},"body":{"injectables/FindUserUseCase.html":{},"coverage.html":{}}}],["src/app/presentation/features/auth/auth",{"_index":232,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts",{"_index":102,"title":{},"body":{"injectables/AuthFacade.html":{},"coverage.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:15",{"_index":150,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:16",{"_index":146,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:18",{"_index":148,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:19",{"_index":117,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:34",{"_index":133,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.facade.ts:58",{"_index":120,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["src/app/presentation/features/auth/auth.module.ts",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:112",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:120",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:38",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:39",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:40",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:57",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/components/login/login.component.ts:88",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/presentation/features/auth/dialogs/user",{"_index":1295,"title":{},"body":{"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{}}}],["src/app/presentation/features/tasks/components/task",{"_index":921,"title":{},"body":{"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["src/app/presentation/features/tasks/dialogs/task",{"_index":875,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"coverage.html":{}}}],["src/app/presentation/features/tasks/tasks",{"_index":1277,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts",{"_index":1200,"title":{},"body":{"injectables/TasksFacade.html":{},"coverage.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:121",{"_index":1210,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:14",{"_index":1225,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:15",{"_index":1219,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:16",{"_index":1222,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:17",{"_index":1217,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:19",{"_index":1224,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:20",{"_index":1218,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:21",{"_index":1221,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:22",{"_index":1206,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:36",{"_index":1212,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:62",{"_index":1208,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.facade.ts:87",{"_index":1214,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["src/app/presentation/features/tasks/tasks.module.ts",{"_index":1272,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/shared/components/confirm",{"_index":288,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"coverage.html":{}}}],["src/app/shared/components/loading",{"_index":619,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/date",{"_index":419,"title":{},"body":{"pipes/DateFormatPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":823,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["start",{"_index":1020,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["started",{"_index":1415,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1138,"title":{},"body":{"components/TaskListComponent.html":{}}}],["statements",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1036,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["statuschange",{"_index":986,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["storage",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage.service",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{}}}],["storage.service.ts",{"_index":661,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:13",{"_index":678,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":666,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":675,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagebucket",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeduser",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":119,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"miscellaneous/variables.html":{}}}],["string,taskid",{"_index":872,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["strong",{"_index":1309,"title":{},"body":{"components/UserCreationDialog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["su",{"_index":136,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/FindUserUseCase.html":{}}}],["subir",{"_index":1513,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1567,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1560,"title":{},"body":{"license.html":{}}}],["submittask",{"_index":932,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["subscribe",{"_index":1242,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["substantial",{"_index":1574,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1142,"title":{},"body":{"components/TaskListComponent.html":{}}}],["support",{"_index":1602,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":1423,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1603,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":530,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":589,"title":{},"body":{"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{}}}],["table",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":154,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["tap(newtask",{"_index":1246,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["tap(tasks",{"_index":1233,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["tap(updatedtask",{"_index":1255,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["tap(user",{"_index":171,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["tarde",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tarea",{"_index":394,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["tareas",{"_index":861,"title":{},"body":{"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["task",{"_index":83,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"components/UserCreationDialog.html":{},"coverage.html":{}}}],["task.completed",{"_index":1010,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.createdat",{"_index":1008,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.description",{"_index":1006,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.id",{"_index":1118,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{}}}],["task.title",{"_index":1005,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.usecase",{"_index":1229,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["task.usecase.ts",{"_index":384,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/UpdateTaskUseCase.html":{},"coverage.html":{}}}],["task.usecase.ts:16",{"_index":467,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{}}}],["task.usecase.ts:17",{"_index":393,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["task.usecase.ts:8",{"_index":465,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{}}}],["task.usecase.ts:9",{"_index":388,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["taskapiservice",{"_index":840,"title":{"injectables/TaskApiService.html":{}},"body":{"injectables/TaskApiService.html":{},"injectables/TaskRepositoryImpl.html":{},"coverage.html":{}}}],["taskdata",{"_index":391,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{}}}],["taskdata).pipe",{"_index":1245,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["taskdata.description",{"_index":400,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/TasksFacade.html":{}}}],["taskdata.title",{"_index":399,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/TasksFacade.html":{}}}],["taskdto",{"_index":851,"title":{"interfaces/TaskDto.html":{}},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"injectables/TaskMapper.html":{},"coverage.html":{}}}],["taskdtos.map(dto",{"_index":1188,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["taskeditdialog",{"_index":82,"title":{"components/TaskEditDialog.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{}}}],["taskeditdialogdata",{"_index":884,"title":{"interfaces/TaskEditDialogData.html":{}},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"coverage.html":{}}}],["taskeditdialogresult",{"_index":898,"title":{"interfaces/TaskEditDialogResult.html":{}},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"coverage.html":{}}}],["taskform",{"_index":880,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["taskformcomponent",{"_index":85,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{}}}],["taskid",{"_index":466,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{},"injectables/TaskApiService.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["taskitemcomponent",{"_index":87,"title":{"components/TaskItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistcomponent",{"_index":89,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/UserCreationDialog.html":{},"coverage.html":{},"overview.html":{}}}],["taskmanager",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmapper",{"_index":1144,"title":{"injectables/TaskMapper.html":{}},"body":{"injectables/TaskMapper.html":{},"injectables/TaskRepositoryImpl.html":{},"coverage.html":{}}}],["taskrepository",{"_index":389,"title":{"interfaces/TaskRepository.html":{}},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/UpdateTaskUseCase.html":{},"coverage.html":{}}}],["taskrepositoryimpl",{"_index":387,"title":{"injectables/TaskRepositoryImpl.html":{}},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/UpdateTaskUseCase.html":{},"coverage.html":{}}}],["tasks",{"_index":866,"title":{},"body":{"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"miscellaneous/variables.html":{}}}],["tasks.usecase",{"_index":1227,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["tasks.usecase.ts",{"_index":560,"title":{},"body":{"injectables/GetTasksUseCase.html":{},"coverage.html":{}}}],["tasks.usecase.ts:16",{"_index":562,"title":{},"body":{"injectables/GetTasksUseCase.html":{}}}],["tasks.usecase.ts:9",{"_index":561,"title":{},"body":{"injectables/GetTasksUseCase.html":{}}}],["tasks].sort((a",{"_index":1235,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["tasksfacade",{"_index":1057,"title":{"injectables/TasksFacade.html":{}},"body":{"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskskey",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasksmodule",{"_index":1267,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":1271,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskssubject",{"_index":1202,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["te",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["tecnologías",{"_index":1434,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["text",{"_index":629,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["this.authfacade.createuser(email).subscribe",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authfacade.finduser(email).subscribe(user",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authfacade.loading",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":1096,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.authservice.getcurrentuser()?.id",{"_index":1098,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(user",{"_index":172,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.authservice.logout",{"_index":1117,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.buildparams(params",{"_index":609,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.canceledit.emit",{"_index":964,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.createtaskusecase.execute(userid",{"_index":1244,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.createuserusecase.execute(email).pipe",{"_index":188,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.currentusersubject.asobservable",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.getvalue",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(storeduser",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(user",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.data.task.description",{"_index":904,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["this.data.task.title",{"_index":902,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["this.datepipe.transform(value",{"_index":439,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["this.deletetask.emit(this.task.id",{"_index":1004,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.deletetaskusecase.execute(userid,taskid).pipe",{"_index":1263,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1115,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.dialog.open(usercreationdialog",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.dialogref.close",{"_index":909,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["this.dialogref.close(false",{"_index":326,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["this.dialogref.close(this.taskform.value",{"_index":908,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["this.dialogref.close(true",{"_index":327,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{}}}],["this.edittask.emit(this.task",{"_index":1003,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.errorsubject.asobservable",{"_index":143,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.errorsubject.next('no",{"_index":174,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.errorsubject.next(null",{"_index":168,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.fb.group",{"_index":901,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["this.finduserusecase.execute(email).pipe",{"_index":170,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.formbuilder.group",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fromdto(dto",{"_index":1331,"title":{},"body":{"injectables/UserMapper.html":{}}}],["this.gettasksusecase.execute(userid).pipe",{"_index":1232,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.gettimeago(new",{"_index":437,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["this.handleerrordevelopment(error",{"_index":520,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.handleerrorproduction(error",{"_index":519,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.handleunauthorizederror",{"_index":526,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.http.delete(`${this.apiurl}/${endpoint",{"_index":613,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.get(`${this.apiurl}/${endpoint",{"_index":610,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.post(`${this.apiurl}/${endpoint",{"_index":611,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.http.put(`${this.apiurl}/${endpoint",{"_index":612,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.httpbase.delete(`${this.endpoint}/${taskid}?userid=${userid",{"_index":873,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["this.httpbase.get(`${this.endpoint}/${email",{"_index":1294,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.httpbase.get(`${this.endpoint}/${id",{"_index":869,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["this.httpbase.get(`${this.endpoint}?userid=${userid",{"_index":868,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["this.httpbase.post(this.endpoint",{"_index":870,"title":{},"body":{"injectables/TaskApiService.html":{},"injectables/UserApiService.html":{}}}],["this.httpbase.put(`${this.endpoint}/${id",{"_index":871,"title":{},"body":{"injectables/TaskApiService.html":{}}}],["this.initform",{"_index":899,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["this.initializefromstorage",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.injector.get(authservice",{"_index":543,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.injector.get(matsnackbar",{"_index":548,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.injector.get(router",{"_index":544,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.iseditmode",{"_index":955,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.loading",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":147,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.loadingsubject.next(false",{"_index":187,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.loadingsubject.next(true",{"_index":167,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.loadusertasks",{"_index":1095,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.localstorageservice.getitem(this.user_storage_key",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.removeitem(this.user_storage_key",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setitem(this.user_storage_key",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(controlname",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markallastouched",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.seterrors",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.email",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.createurltree([approutes.login",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([approutes.login",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskListComponent.html":{}}}],["this.router.navigate([approutes.tasks",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.savingtask",{"_index":1093,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.savingtasksubject.asobservable",{"_index":1220,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.savingtasksubject.next(false",{"_index":1253,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.savingtasksubject.next(true",{"_index":1243,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.selectedtask",{"_index":1099,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.showerrormessage(`error",{"_index":523,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.showerrormessage(autherrors.occasional_error",{"_index":528,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.showerrormessage(message",{"_index":542,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.showerrormessage(serviceerrors.session",{"_index":547,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.showusercreationdialog(email",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showuserfriendlyerrormessage(error",{"_index":527,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.snackbar.open('error",{"_index":180,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["this.snackbar.open('tarea",{"_index":1250,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.snackbar.open('usuario",{"_index":189,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.statuschange.emit",{"_index":1001,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.submittask.emit",{"_index":963,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.task",{"_index":956,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.task.description",{"_index":959,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.task.id",{"_index":1002,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task.title",{"_index":958,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskapiservice.createtask(dto).pipe",{"_index":1194,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskapiservice.deletetask(userid",{"_index":1199,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskapiservice.gettaskbyid(id).pipe",{"_index":1190,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskapiservice.gettasks(userid).pipe",{"_index":1186,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskapiservice.updatetask(id",{"_index":1197,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskform",{"_index":900,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["this.taskform.get(controlname",{"_index":906,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["this.taskform.invalid",{"_index":961,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.patchvalue",{"_index":957,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.reset",{"_index":960,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskform.valid",{"_index":907,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{}}}],["this.taskform.value",{"_index":962,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.taskmapper.fromdto(dto",{"_index":1189,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskmapper.fromdto(responsedto",{"_index":1196,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskmapper.fromdto(taskdto",{"_index":1192,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskmapper.todto(task",{"_index":1193,"title":{},"body":{"injectables/TaskRepositoryImpl.html":{}}}],["this.taskrepository.createtask(newtask",{"_index":405,"title":{},"body":{"injectables/CreateTaskUseCase.html":{}}}],["this.taskrepository.deletetask(userid",{"_index":470,"title":{},"body":{"injectables/DeleteTaskUseCase.html":{}}}],["this.taskrepository.gettasks(userid",{"_index":565,"title":{},"body":{"injectables/GetTasksUseCase.html":{}}}],["this.taskrepository.updatetask(id",{"_index":1281,"title":{},"body":{"injectables/UpdateTaskUseCase.html":{}}}],["this.tasks",{"_index":1090,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.createtask(userid",{"_index":1101,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.deletetask(userid,taskid",{"_index":1116,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.loading",{"_index":1092,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.loadtasks(currentuser.id",{"_index":1097,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.savingtask",{"_index":1094,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.tasks",{"_index":1091,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.updatetask(event.taskid",{"_index":1105,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.tasksfacade.updatetask(this.selectedtask.id",{"_index":1100,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskssubject.asobservable",{"_index":1223,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.taskssubject.getvalue",{"_index":1248,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.taskssubject.next([newtask",{"_index":1249,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.taskssubject.next(sortedtasks",{"_index":1239,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.taskssubject.next(updatedtasks",{"_index":1260,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.titleservice.settitle(appsettings.appname",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.todto(model",{"_index":1334,"title":{},"body":{"injectables/UserMapper.html":{}}}],["this.updateform",{"_index":954,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.updatetaskusecase.execute(taskid",{"_index":1254,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["this.userapiservice.createuser(email).pipe",{"_index":1351,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["this.userapiservice.finduserbyemail(email).pipe",{"_index":1347,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["this.usermapper.fromdto(userdto",{"_index":1349,"title":{},"body":{"injectables/UserRepositoryImpl.html":{}}}],["this.userrepository.createuser(email",{"_index":415,"title":{},"body":{"injectables/CreateUserUseCase.html":{}}}],["this.userrepository.finduserbyemail(email",{"_index":557,"title":{},"body":{"injectables/FindUserUseCase.html":{}}}],["this.validationerrors.email",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validationerrors.required",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["through",{"_index":1028,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["throw",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{}}}],["throwerror",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiene",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["tienes",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["timeago",{"_index":436,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["title",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateTaskUseCase.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"injectables/TasksFacade.html":{},"modules/TasksRoutingModule.html":{}}}],["titleservice",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmessage",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tocado",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["todas",{"_index":859,"title":{},"body":{"injectables/TaskApiService.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["todto",{"_index":1147,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["todto(model",{"_index":1151,"title":{},"body":{"injectables/TaskMapper.html":{},"injectables/UserMapper.html":{}}}],["todtolist",{"_index":1314,"title":{},"body":{"injectables/UserMapper.html":{}}}],["todtolist(models",{"_index":1320,"title":{},"body":{"injectables/UserMapper.html":{}}}],["top",{"_index":646,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{}}}],["torre",{"_index":1537,"title":{},"body":{"license.html":{}}}],["tort",{"_index":1597,"title":{},"body":{"license.html":{}}}],["trackbytaskid",{"_index":1055,"title":{},"body":{"components/TaskListComponent.html":{}}}],["trackbytaskid(index",{"_index":1076,"title":{},"body":{"components/TaskListComponent.html":{}}}],["transform",{"_index":425,"title":{},"body":{"pipes/DateFormatPipe.html":{},"components/TaskItemComponent.html":{}}}],["transform(value",{"_index":426,"title":{},"body":{"pipes/DateFormatPipe.html":{}}}],["transition",{"_index":1013,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["translatey",{"_index":1016,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"pipes/DateFormatPipe.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":686,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["tslib",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/CreateTaskUseCase.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/GetTasksUseCase.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1437,"title":{},"body":{"index.html":{}}}],["título",{"_index":911,"title":{},"body":{"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{}}}],["uc.a.run.app/api",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["un",{"_index":122,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateUserUseCase.html":{},"pipes/DateFormatPipe.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"injectables/HttpBaseService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":591,"title":{},"body":{"injectables/HttpBaseService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskListComponent.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{},"index.html":{}}}],["unauthorized",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":616,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["updatedtask",{"_index":1259,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["updatedtasks",{"_index":1257,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["updatedtasks[index",{"_index":1258,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["updateform",{"_index":929,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["updatetask",{"_index":846,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["updatetask(id",{"_index":862,"title":{},"body":{"injectables/TaskApiService.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{}}}],["updatetask(taskid",{"_index":1213,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["updatetaskusecase",{"_index":1205,"title":{"injectables/UpdateTaskUseCase.html":{}},"body":{"injectables/TasksFacade.html":{},"injectables/UpdateTaskUseCase.html":{},"coverage.html":{}}}],["updating",{"_index":1262,"title":{},"body":{"injectables/TasksFacade.html":{}}}],["urltree",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usando",{"_index":506,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/TaskListComponent.html":{}}}],["use",{"_index":1555,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":92,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CreateUserUseCase.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FindUserUseCase.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"interfaces/User.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserMapper.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.usecase",{"_index":159,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["user.usecase.ts",{"_index":407,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"coverage.html":{}}}],["user.usecase.ts:17",{"_index":413,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{}}}],["user.usecase.ts:9",{"_index":410,"title":{},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{}}}],["user_storage_key",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["userapiservice",{"_index":1283,"title":{"injectables/UserApiService.html":{}},"body":{"injectables/UserApiService.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["usercreationdialog",{"_index":91,"title":{"components/UserCreationDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{},"overview.html":{}}}],["usercreationdialogdata",{"_index":1299,"title":{"interfaces/UserCreationDialogData.html":{}},"body":{"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"coverage.html":{}}}],["userdto",{"_index":1292,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/UserApiService.html":{},"interfaces/UserDto.html":{},"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["userid",{"_index":395,"title":{},"body":{"injectables/CreateTaskUseCase.html":{},"injectables/DeleteTaskUseCase.html":{},"injectables/GetTasksUseCase.html":{},"interfaces/Task.html":{},"injectables/TaskApiService.html":{},"interfaces/TaskDto.html":{},"components/TaskListComponent.html":{},"injectables/TaskMapper.html":{},"interfaces/TaskRepository.html":{},"injectables/TaskRepositoryImpl.html":{},"injectables/TasksFacade.html":{}}}],["userkey",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usermapper",{"_index":1311,"title":{"injectables/UserMapper.html":{}},"body":{"injectables/UserMapper.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["userrepository",{"_index":411,"title":{"interfaces/UserRepository.html":{}},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"interfaces/UserRepository.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["userrepositoryimpl",{"_index":409,"title":{"injectables/UserRepositoryImpl.html":{}},"body":{"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"injectables/UserRepositoryImpl.html":{},"coverage.html":{}}}],["users",{"_index":1291,"title":{},"body":{"injectables/UserApiService.html":{}}}],["usertasks",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usuario",{"_index":124,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"injectables/CreateUserUseCase.html":{},"injectables/FindUserUseCase.html":{},"components/LoginComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"injectables/UserRepositoryImpl.html":{},"index.html":{}}}],["usuarios",{"_index":1421,"title":{},"body":{"index.html":{}}}],["v17",{"_index":1449,"title":{},"body":{"index.html":{}}}],["v18",{"_index":1447,"title":{},"body":{"index.html":{}}}],["va",{"_index":1469,"title":{},"body":{"index.html":{}}}],["validación",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["validators.email",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.maxlength(100",{"_index":903,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["validators.maxlength(500",{"_index":905,"title":{},"body":{"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["validators.required",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{}}}],["valor",{"_index":668,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["value",{"_index":142,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/AuthService.html":{},"pipes/DateFormatPipe.html":{},"injectables/HttpBaseService.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/TaskApiService.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["variable",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1614,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifica",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"miscellaneous/variables.html":{}}}],["verificar",{"_index":177,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["version",{"_index":1611,"title":{},"body":{"properties.html":{}}}],["verticalposition",{"_index":553,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["visión",{"_index":1418,"title":{},"body":{"index.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"injectables/ErrorHandlerService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"injectables/TasksFacade.html":{},"components/UserCreationDialog.html":{},"interfaces/UserCreationDialogData.html":{},"miscellaneous/variables.html":{}}}],["válido",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":325,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogData.html":{},"components/LoadingIndicatorComponent.html":{},"components/TaskListComponent.html":{}}}],["warranties",{"_index":1582,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1577,"title":{},"body":{"license.html":{}}}],["weight",{"_index":1024,"title":{},"body":{"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["whether",{"_index":1594,"title":{},"body":{"license.html":{}}}],["white",{"_index":342,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TaskItemComponent.html":{}}}],["width",{"_index":336,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"components/TaskFormComponent.html":{},"components/TaskItemComponent.html":{},"components/TaskListComponent.html":{},"components/UserCreationDialog.html":{}}}],["window.scrollto",{"_index":1102,"title":{},"body":{"components/TaskListComponent.html":{}}}],["withcomponentinputbinding",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors",{"_index":360,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1550,"title":{},"body":{"license.html":{}}}],["withtime",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":1025,"title":{},"body":{"components/TaskItemComponent.html":{},"components/UserCreationDialog.html":{}}}],["wrap",{"_index":345,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["xito",{"_index":190,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/TasksFacade.html":{}}}],["y",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{},"components/TaskEditDialog.html":{},"interfaces/TaskEditDialogData.html":{},"interfaces/TaskEditDialogResult.html":{},"components/TaskFormComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["ya",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":584,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["yyyy",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":652,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["zone.js",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport {AppSettings} from '@config/app-settings';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  imports: [RouterOutlet]\n})\nexport class AppComponent implements OnInit {\n  constructor(private titleService: Title) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle(AppSettings.appName);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .app-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.app-content {\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthFacade.html":{"url":"injectables/AuthFacade.html","title":"injectable - AuthFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/presentation/features/auth/auth.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error$\n                            \n                            \n                                    Private\n                                errorSubject\n                            \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(findUserUseCase: FindUserUseCase, createUserUseCase: CreateUserUseCase, authService: AuthService, router: Router, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/auth/auth.facade.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        findUserUseCase\n                                                  \n                                                        \n                                                                        FindUserUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserUseCase\n                                                  \n                                                        \n                                                                        CreateUserUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/auth.facade.ts:58\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del nuevo usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el usuario creado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/auth.facade.ts:34\n                        \n                    \n\n\n            \n                \n                        Busca un usuario por su email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el usuario o null si no existe\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.errorSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/auth.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/auth.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/auth.facade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/auth.facade.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, catchError, finalize, of, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FindUserUseCase } from '@domain/usecases/user/find-user.usecase';\nimport { CreateUserUseCase } from '@domain/usecases/user/create-user.usecase';\nimport { AuthService } from '@core/authentication/services/auth.service';\nimport {User} from '@domain/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthFacade {\n  // Estados observables\n  private loadingSubject = new BehaviorSubject(false);\n  private errorSubject = new BehaviorSubject(null);\n\n  loading$ = this.loadingSubject.asObservable();\n  error$ = this.errorSubject.asObservable();\n\n  constructor(\n    private findUserUseCase: FindUserUseCase,\n    private createUserUseCase: CreateUserUseCase,\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /**\n   * Busca un usuario por su email\n   * @param email Email del usuario\n   * @returns Observable con el usuario o null si no existe\n   */\n  findUser(email: string): Observable {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    return this.findUserUseCase.execute(email).pipe(\n      tap(user => {\n        if (user) {\n          this.authService.login(user);\n        }\n      }),\n      catchError(error => {\n        this.errorSubject.next('No se pudo verificar el usuario. Inténtalo de nuevo.');\n        this.snackBar.open('Error al buscar usuario', 'Cerrar', { duration: 3000 });\n        return of(null);\n      }),\n      finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  /**\n   * Crea un nuevo usuario\n   * @param email Email del nuevo usuario\n   * @returns Observable con el usuario creado\n   */\n  createUser(email: string): Observable {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    return this.createUserUseCase.execute(email).pipe(\n      tap(user => {\n        if (user) {\n          this.authService.login(user);\n          this.snackBar.open('Usuario creado con éxito', 'Cerrar', { duration: 3000 });\n        }\n      }),\n      catchError(error => {\n        this.errorSubject.next('No se pudo crear el usuario. Inténtalo de nuevo.');\n        this.snackBar.open('Error al crear usuario', 'Cerrar', { duration: 3000 });\n        return of(null);\n      }),\n      finalize(() => this.loadingSubject.next(false))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/guards/auth.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@core/authentication/services/auth.service';\nimport {AppRoutes} from '@config/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): Observable | Promise | boolean | UrlTree {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n\n    return this.router.createUrlTree([AppRoutes.login]);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nUserCreationDialog\n\nUserCreationDialog\n\nAuthModule -->\n\nUserCreationDialog->AuthModule\n\n\n\n\n\nAuthFacade\n\nAuthFacade\n\nAuthModule -->\n\nAuthFacade->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/presentation/features/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthFacade\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            UserCreationDialog\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AuthRoutingModule} from '@presentation/features/auth/auth-routing.module';\nimport {LoginComponent} from '@presentation/features/auth/components/login/login.component';\nimport {UserCreationDialog} from '@presentation/features/auth/dialogs/user-creation/user-creation.dialog';\nimport {AuthFacade} from '@presentation/features/auth/auth.facade';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    LoginComponent,\n    UserCreationDialog\n  ],\n  providers: [\n    AuthFacade\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/presentation/features/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from '@presentation/features/auth/components/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    title: 'Iniciar Sesión'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                USER_STORAGE_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                initializeFromStorage\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/services/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/services/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario actual\n\n\n                        \n                            Returns :         User | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeFromStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeFromStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Inicializa el servicio cargando el usuario del localStorage si existe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario está autenticado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Inicia sesión con un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario para iniciar sesión\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/authentication/services/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        USER_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/authentication/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../../services/local-storage.service';\nimport {User} from '@domain/models/user.model';\nimport {AppRoutes} from '@config/app-settings';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly USER_STORAGE_KEY = 'currentUser';\n  private currentUserSubject = new BehaviorSubject(null);\n\n  currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {\n    this.initializeFromStorage();\n  }\n\n  /**\n   * Inicializa el servicio cargando el usuario del localStorage si existe\n   */\n  private initializeFromStorage(): void {\n    const storedUser = this.localStorageService.getItem(this.USER_STORAGE_KEY);\n    if (storedUser) {\n      this.currentUserSubject.next(storedUser);\n    }\n  }\n\n  /**\n   * Verifica si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentUserSubject.getValue();\n  }\n\n  /**\n   * Obtiene el usuario actual\n   */\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.getValue();\n  }\n\n  /**\n   * Inicia sesión con un usuario\n   * @param user Usuario para iniciar sesión\n   */\n  login(user: User): void {\n    this.localStorageService.setItem(this.USER_STORAGE_KEY, user);\n    this.currentUserSubject.next(user);\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    this.localStorageService.removeItem(this.USER_STORAGE_KEY);\n    this.currentUserSubject.next(null);\n    this.router.navigate([AppRoutes.login]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ConfirmDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConfirmDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Cierra el diálogo con resultado negativo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Cierra el diálogo con resultado positivo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfirmDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface ConfirmDialogData {\n  title: string;\n  message: string;\n  confirmButtonText: string;\n  cancelButtonText: string;\n  confirmButtonColor?: 'primary' | 'accent' | 'warn';\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule]\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData\n  ) {}\n\n  /**\n   * Cierra el diálogo con resultado negativo\n   */\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Cierra el diálogo con resultado positivo\n   */\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  \n\n\n\n  \n    {{ data.cancelButtonText || 'Cancelar' }}\n  \n\n  \n    {{ data.confirmButtonText || 'Confirmar' }}\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                :host {\n  display: block;\n}\n\nmat-dialog-content {\n  min-width: 300px;\n\n  p {\n    margin: 10px 0;\n    white-space: pre-wrap;\n  }\n}\n\nmat-dialog-actions {\n  padding: 16px 0 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}        {{ data.cancelButtonText || \\'Cancelar\\' }}        {{ data.confirmButtonText || \\'Confirmar\\' }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmDialogData.html":{"url":"interfaces/ConfirmDialogData.html","title":"interface - ConfirmDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cancelButtonText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmButtonColor\n                                        \n                                \n                                \n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonColor:     \"primary\" | \"accent\" | \"warn\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"primary\" | \"accent\" | \"warn\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface ConfirmDialogData {\n  title: string;\n  message: string;\n  confirmButtonText: string;\n  cancelButtonText: string;\n  confirmButtonColor?: 'primary' | 'accent' | 'warn';\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatButtonModule]\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData\n  ) {}\n\n  /**\n   * Cierra el diálogo con resultado negativo\n   */\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Cierra el diálogo con resultado positivo\n   */\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nHttpBaseService\n\nHttpBaseService\n\nCoreModule -->\n\nHttpBaseService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            HttpBaseService\n                        \n                        \n                            LocalStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule, provideHttpClient, withInterceptors} from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport {AuthService} from '@core/authentication/services/auth.service';\nimport {LocalStorageService} from '@core/services/local-storage.service';\nimport {ErrorHandlerService} from '@core/services/error-handler.service';\nimport {HttpBaseService} from '@core/http/http-base.service';\nimport {httpTokenInterceptor} from '@core/http/interceptors/http.token.interceptor';\nimport {errorInterceptor} from '@core/http/interceptors/error.interceptor';\nimport {ModulesErrors} from '@config/error-messages';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    MatSnackBarModule\n  ],\n  providers: [\n    AuthService,\n    LocalStorageService,\n    HttpBaseService,\n\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\n\n    provideHttpClient(\n      withInterceptors([\n        httpTokenInterceptor,\n        errorInterceptor\n      ])\n    )\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(ModulesErrors.code_module_errpr);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTaskUseCase.html":{"url":"injectables/CreateTaskUseCase.html","title":"injectable - CreateTaskUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateTaskUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/task/create-task.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/task/create-task.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(userId: string, taskData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/task/create-task.usecase.ts:17\n                        \n                    \n\n\n            \n                \n                        Crear Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from '@domain/models/task.model';\nimport {TaskRepositoryImpl} from '@data/repositories/task.repository.impl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateTaskUseCase {\n  constructor(private taskRepository: TaskRepositoryImpl) {}\n\n  /**\n   * Crear Tarea\n   * @param userId\n   * @param taskData\n   */\n  execute(userId: string, taskData: { title: string; description: string }): Observable {\n    const newTask: Task = {\n      userId,\n      title: taskData.title,\n      description: taskData.description,\n      completed: false,\n      createdAt: new Date()\n    };\n\n    return this.taskRepository.createTask(newTask);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserUseCase.html":{"url":"injectables/CreateUserUseCase.html","title":"injectable - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/user/create-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/user/create-user.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/user/create-user.usecase.ts:17\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del nuevo usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el usuario creado\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {UserRepositoryImpl} from '@data/repositories/user.repository.impl';\nimport {User} from '@domain/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateUserUseCase {\n  constructor(private userRepository: UserRepositoryImpl) {}\n\n  /**\n   * Crea un nuevo usuario\n   * @param email Email del nuevo usuario\n   * @returns Observable con el usuario creado\n   */\n  execute(email: string): Observable {\n    return this.userRepository.createUser(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DateFormatPipe.html":{"url":"pipes/DateFormatPipe.html","title":"pipe - DateFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DateFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/date-format.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        dateFormat\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTimeAgo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimeAgo(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/date-format.pipe.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Date | string | number, format: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/date-format.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        Date | string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'mediumDate'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        datePipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('es-ES')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pipes/date-format.pipe.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'dateFormat',\n  standalone: true\n})\nexport class DateFormatPipe implements PipeTransform {\n  private datePipe = new DatePipe('es-ES');\n\n  transform(value: Date | string | number, format: string = 'mediumDate'): string {\n    if (!value) {\n      return '';\n    }\n\n    if (format === 'timeAgo') {\n      return this.getTimeAgo(new Date(value));\n    }\n\n    return this.datePipe.transform(value, format) || '';\n  }\n\n  private getTimeAgo(date: Date): string {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    if (days > 0) {\n      return days === 1 ? 'hace 1 día' : `hace ${days} días`;\n    }\n    if (hours > 0) {\n      return hours === 1 ? 'hace 1 hora' : `hace ${hours} horas`;\n    }\n    if (minutes > 0) {\n      return minutes === 1 ? 'hace 1 minuto' : `hace ${minutes} minutos`;\n    }\n    return 'hace un momento';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTaskUseCase.html":{"url":"injectables/DeleteTaskUseCase.html","title":"injectable - DeleteTaskUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTaskUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/task/delete-task.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/task/delete-task.usecase.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(userId: string, taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/task/delete-task.usecase.ts:16\n                        \n                    \n\n\n            \n                \n                        Eliminar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {TaskRepositoryImpl} from '@data/repositories/task.repository.impl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeleteTaskUseCase {\n  constructor(private taskRepository: TaskRepositoryImpl) {}\n\n  /**\n   * Eliminar Tarea\n   * @param userId\n   * @param taskId\n   */\n  execute(userId:string, taskId: string): Observable {\n    return this.taskRepository.deleteTask(userId, taskId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                    Private\n                                handleErrorDevelopment\n                            \n                            \n                                    Private\n                                handleErrorProduction\n                            \n                            \n                                    Private\n                                handleUnauthorizedError\n                            \n                            \n                                    Private\n                                showErrorMessage\n                            \n                            \n                                    Private\n                                showUserFriendlyErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/error-handler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error | HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Maneja cualquier error no capturado en la aplicación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error | HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Error a manejar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorDevelopment\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorDevelopment(error: Error | HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Maneja errores en entorno de desarrollo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error | HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleErrorProduction\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrorProduction(error: Error | HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Maneja errores en entorno de producción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error | HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUnauthorizedError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUnauthorizedError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Maneja errores de autenticación (401)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showErrorMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    showErrorMessage(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de error usando snackbar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUserFriendlyErrorMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    showUserFriendlyErrorMessage(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/error-handler.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de error user-friendly basado en el código de error HTTP\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { environment } from '@environments/environment';\nimport { AuthService } from '../authentication/services/auth.service';\nimport {AuthErrors, ServiceErrors} from '@config/error-messages';\nimport {AppRoutes} from '@config/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private injector: Injector) {}\n\n  /**\n   * Maneja cualquier error no capturado en la aplicación\n   * @param error Error a manejar\n   */\n  handleError(error: Error | HttpErrorResponse): void {\n    if (environment.production) {\n      this.handleErrorProduction(error);\n    } else {\n      this.handleErrorDevelopment(error);\n    }\n  }\n\n  /**\n   * Maneja errores en entorno de desarrollo\n   */\n  private handleErrorDevelopment(error: Error | HttpErrorResponse): void {\n    if (error instanceof HttpErrorResponse) {\n      console.error('Error HTTP:', error);\n      this.showErrorMessage(`Error HTTP ${error.status}: ${error.message}`);\n    } else {\n      console.error('Error:', error);\n      this.showErrorMessage(`Error: ${error.message}`);\n    }\n  }\n\n  /**\n   * Maneja errores en entorno de producción\n   */\n  private handleErrorProduction(error: Error | HttpErrorResponse): void {\n    if (error instanceof HttpErrorResponse) {\n      if (error.status === 401) {\n        this.handleUnauthorizedError();\n      } else {\n        this.showUserFriendlyErrorMessage(error);\n      }\n    } else {\n      this.showErrorMessage(AuthErrors.occasional_error);\n    }\n  }\n\n  /**\n   * Muestra un mensaje de error user-friendly basado en el código de error HTTP\n   */\n  private showUserFriendlyErrorMessage(error: HttpErrorResponse): void {\n    let message = ServiceErrors.occasional_error;\n\n    switch (error.status) {\n      case 400:\n        message = ServiceErrors.incorrect_data;\n        break;\n      case 404:\n        message = ServiceErrors.resource_not_found;\n        break;\n      case 403:\n        message = ServiceErrors.access_prohibited;\n        break;\n      case 500:\n        message = ServiceErrors.internal_server_error;\n        break;\n      case 0:\n        message = ServiceErrors.no_internet_connection;\n        break;\n    }\n\n    this.showErrorMessage(message);\n  }\n\n  /**\n   * Maneja errores de autenticación (401)\n   */\n  private handleUnauthorizedError(): void {\n    const authService = this.injector.get(AuthService);\n    const router = this.injector.get(Router);\n\n    authService.logout();\n    router.navigate([AppRoutes.login]);\n    this.showErrorMessage(ServiceErrors.session);\n  }\n\n  /**\n   * Muestra un mensaje de error usando snackbar\n   */\n  private showErrorMessage(message: string): void {\n    const snackBar = this.injector.get(MatSnackBar);\n\n    snackBar.open(message, 'Cerrar', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      panelClass: ['error-snackbar']\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserUseCase.html":{"url":"injectables/FindUserUseCase.html","title":"injectable - FindUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/user/find-user.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/user/find-user.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/user/find-user.usecase.ts:17\n                        \n                    \n\n\n            \n                \n                        Busca un usuario por su email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con el usuario o null si no existe\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {UserRepositoryImpl} from '@data/repositories/user.repository.impl';\nimport {User} from '@domain/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FindUserUseCase {\n  constructor(private userRepository: UserRepositoryImpl) {}\n\n  /**\n   * Busca un usuario por su email\n   * @param email Email del usuario\n   * @returns Observable con el usuario o null si no existe\n   */\n  execute(email: string): Observable {\n    return this.userRepository.findUserByEmail(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetTasksUseCase.html":{"url":"injectables/GetTasksUseCase.html","title":"injectable - GetTasksUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetTasksUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/task/get-tasks.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/task/get-tasks.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/task/get-tasks.usecase.ts:16\n                        \n                    \n\n\n            \n                \n                        Obtener Tarea por Id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from '@domain/models/task.model';\nimport {TaskRepositoryImpl} from '@data/repositories/task.repository.impl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetTasksUseCase {\n  constructor(private taskRepository: TaskRepositoryImpl) {}\n\n  /**\n   * Obtener Tarea por Id\n   * @param userId\n   */\n  execute(userId: string): Observable {\n    return this.taskRepository.getTasks(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBaseService.html":{"url":"injectables/HttpBaseService.html","title":"injectable - HttpBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http-base.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildParams\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http-base.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildParams(params?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http/http-base.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Convierte un objeto de parámetros en HttpParams\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string, headers?: HttpHeaders)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http/http-base.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Realiza una petición DELETE\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta relativa del endpoint\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Cabeceras HTTP opcionales\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string, params?: any, headers?: HttpHeaders)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http/http-base.service.ts:20\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Realiza una petición GET\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta relativa del endpoint\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Parámetros de consulta opcionales\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Cabeceras HTTP opcionales\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, body: any, headers?: HttpHeaders)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http/http-base.service.ts:35\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Realiza una petición POST\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta relativa del endpoint\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Cuerpo de la petición\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Cabeceras HTTP opcionales\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, body: any, headers?: HttpHeaders)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http/http-base.service.ts:45\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Realiza una petición PUT\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Ruta relativa del endpoint\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Cuerpo de la petición\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Cabeceras HTTP opcionales\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/http/http-base.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpBaseService {\n  protected apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Realiza una petición GET\n   * @param endpoint Ruta relativa del endpoint\n   * @param params Parámetros de consulta opcionales\n   * @param headers Cabeceras HTTP opcionales\n   */\n  get(endpoint: string, params?: any, headers?: HttpHeaders): Observable {\n    const options = {\n      params: this.buildParams(params),\n      headers\n    };\n\n    return this.http.get(`${this.apiUrl}/${endpoint}`, options);\n  }\n\n  /**\n   * Realiza una petición POST\n   * @param endpoint Ruta relativa del endpoint\n   * @param body Cuerpo de la petición\n   * @param headers Cabeceras HTTP opcionales\n   */\n  post(endpoint: string, body: any, headers?: HttpHeaders): Observable {\n    return this.http.post(`${this.apiUrl}/${endpoint}`, body, { headers });\n  }\n\n  /**\n   * Realiza una petición PUT\n   * @param endpoint Ruta relativa del endpoint\n   * @param body Cuerpo de la petición\n   * @param headers Cabeceras HTTP opcionales\n   */\n  put(endpoint: string, body: any, headers?: HttpHeaders): Observable {\n    return this.http.put(`${this.apiUrl}/${endpoint}`, body, { headers });\n  }\n\n  /**\n   * Realiza una petición DELETE\n   * @param endpoint Ruta relativa del endpoint\n   * @param headers Cabeceras HTTP opcionales\n   */\n  delete(endpoint: string, headers?: HttpHeaders): Observable {\n    return this.http.delete(`${this.apiUrl}/${endpoint}`, { headers });\n  }\n\n  /**\n   * Convierte un objeto de parámetros en HttpParams\n   */\n  private buildParams(params?: any): HttpParams {\n    let httpParams = new HttpParams();\n\n    if (params) {\n      Object.keys(params).forEach(key => {\n        if (params[key] !== null && params[key] !== undefined) {\n          httpParams = httpParams.set(key, params[key].toString());\n        }\n      });\n    }\n\n    return httpParams;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingIndicatorComponent.html":{"url":"components/LoadingIndicatorComponent.html","title":"component - LoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loading-indicator/loading-indicator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-indicator\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatProgressSpinnerModule\n                \n            \n\n            \n                styleUrls\n                ./loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                diameter\n                            \n                            \n                                overlay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"accent\" | \"warn\"\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loading-indicator/loading-indicator.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        diameter\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loading-indicator/loading-indicator.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overlay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loading-indicator/loading-indicator.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loading-indicator/loading-indicator.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, numberAttribute} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-loading-indicator',\n  templateUrl: './loading-indicator.component.html',\n  styleUrls: ['./loading-indicator.component.scss'],\n  standalone: true,\n  imports: [CommonModule, MatProgressSpinnerModule]\n})\nexport class LoadingIndicatorComponent {\n  @Input({transform: numberAttribute}) diameter = 40;\n  @Input() overlay = false;\n  @Input() text: string | null = null;\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n}\n\n    \n\n    \n        \n  \n  \n\n  {{ text }}\n\n\n    \n\n    \n                \n                    ./loading-indicator.component.scss\n                \n                .loader-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n\n  &.overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(255, 255, 255, 0.7);\n    z-index: 1000;\n    backdrop-filter: blur(2px);\n  }\n}\n\n.loading-text {\n  margin-top: 16px;\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:27\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Recupera un valor desde localStorage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Clave del valor a recuperar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                El valor deserializado o null si no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Elimina un valor de localStorage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Clave del valor a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Guarda un valor en localStorage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Clave bajo la cual se guardará el valor\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor a guardar (será convertido a JSON)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  /**\n   * Guarda un valor en localStorage\n   * @param key Clave bajo la cual se guardará el valor\n   * @param value Valor a guardar (será convertido a JSON)\n   */\n  setItem(key: string, value: T): void {\n    try {\n      const serializedValue = JSON.stringify(value);\n      localStorage.setItem(key, serializedValue);\n    } catch (error) {\n      console.error('Error guardando en localStorage:', error);\n    }\n  }\n\n  /**\n   * Recupera un valor desde localStorage\n   * @param key Clave del valor a recuperar\n   * @returns El valor deserializado o null si no existe\n   */\n  getItem(key: string): T | null {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) as T : null;\n    } catch (error) {\n      console.error('Error recuperando de localStorage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Elimina un valor de localStorage\n   * @param key Clave del valor a eliminar\n   */\n  removeItem(key: string): void {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error('Error eliminando de localStorage:', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/auth/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatCardModule\n                            MatIconModule\n                                LoadingIndicatorComponent\n                \n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                loginForm\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                hasError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                showUserCreationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, dialog: MatDialog, authFacade: AuthFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/auth/components/login/login.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authFacade\n                                                  \n                                                        \n                                                                        AuthFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/components/login/login.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/components/login/login.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Comprueba si un campo tiene errores y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                errorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/components/login/login.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Envía el formulario e intenta iniciar sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUserCreationDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showUserCreationDialog(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Muestra el diálogo de confirmación para crear un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/components/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/components/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ValidationErrors\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/components/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport {\n  LoadingIndicatorComponent\n} from '@shared/components/loading-indicator/loading-indicator.component';\nimport {Observable} from 'rxjs';\nimport {AppRoutes} from '@config/app-settings';\nimport {ValidationErrors} from '@config/error-messages';\nimport {AuthFacade} from '@presentation/features/auth/auth.facade';\nimport {UserCreationDialog} from '@presentation/features/auth/dialogs/user-creation/user-creation.dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    LoadingIndicatorComponent\n  ]\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading$: Observable;\n  validationErrors = ValidationErrors;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    private authFacade: AuthFacade\n  ) {\n    this.loading$ = this.authFacade.loading$;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  /**\n   * Envía el formulario e intenta iniciar sesión\n   */\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    const email = this.loginForm.value.email;\n\n    this.authFacade.findUser(email).subscribe(user => {\n      if (user) {\n        return this.router.navigate([AppRoutes.tasks]);\n      } else {\n        return this.showUserCreationDialog(email);\n      }\n    }, error => {\n        if (error.status === 401) {\n          this.loginForm.setErrors({ invalidCredentials: true });\n        } else if (error.status === 0) {\n          this.loginForm.setErrors({ connectionError: true });\n        } else if (error.status === 403) {\n          this.loginForm.setErrors({ permissionDenied: true });\n        } else {\n          this.loginForm.setErrors({ serverError: true });\n        }\n      }\n      );\n  }\n\n  /**\n   * Muestra el diálogo de confirmación para crear un nuevo usuario\n   */\n  private showUserCreationDialog(email: string): void {\n    const dialogRef = this.dialog.open(UserCreationDialog, {\n      width: '400px',\n      data: { email }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.authFacade.createUser(email).subscribe(() => {\n          return this.router.navigate([AppRoutes.tasks]);\n        }, error => {\n          if (error.status === 0) {\n            this.loginForm.setErrors({ connectionError: true });\n          } else {\n            this.loginForm.setErrors({ serverError: true });\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Comprueba si un campo tiene errores y ha sido tocado\n   */\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.loginForm.get(controlName);\n    return !!control && control.hasError(errorName) && (control.dirty || control.touched);\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo específico\n   */\n  getErrorMessage(controlName: string): string {\n    const control = this.loginForm.get(controlName);\n\n    if (!control || !(control.dirty || control.touched)) {\n      return '';\n    }\n\n    if (control.hasError('required')) {\n      return this.validationErrors.required;\n    }\n\n    if (control.hasError('email')) {\n      return this.validationErrors.email;\n    }\n\n    return 'Campo inválido';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Iniciar Sesión\n    \n\n    \n      \n        \n          Correo electrónico\n          \n          email\n          \n            {{ getErrorMessage('email') }}\n          \n        \n\n        \n          \n            Continuar\n          \n        \n      \n\n      \n      \n    \n\n    \n      Ingresa tu correo electrónico para continuar\n      Si no tienes una cuenta, se te dará la opción de crear una\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  color: rgb(255, 255, 255);\n}\n\nmat-card-header {\n  margin-bottom: 20px;\n}\n\nmat-card-title {\n  font-size: 1.5rem;\n  margin-bottom: 0;\n}\n\n.form-field {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n\n  button {\n    min-width: 120px;\n  }\n}\n\n.login-footer {\n  padding: 16px;\n  text-align: center;\n  color: rgb(255, 255, 255);\n\n  p {\n    margin: 8px 0;\n    color: rgb(255, 255, 255);\n  }\n\n  .login-help {\n    font-size: 0.85rem;\n    color: rgb(255, 255, 255);\n  }\n}\n\n.login-loader {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.form-error-message {\n  background-color: rgba(255, 0, 0, 0.03);\n  border-radius: 4px;\n  padding: 8px 16px;\n  margin-bottom: 16px;\n\n  mat-error {\n    display: flex;\n    align-items: center;\n\n    &::before {\n      content: \"error\";\n      margin-right: 8px;\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    max-width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Iniciar Sesión                                Correo electrónico                    email                      {{ getErrorMessage(\\'email\\') }}                                                Continuar                                                  Ingresa tu correo electrónico para continuar      Si no tienes una cuenta, se te dará la opción de crear una      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nDateFormatPipe\n\nDateFormatPipe\n\nSharedModule -->\n\nDateFormatPipe->SharedModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nSharedModule -->\n\nLoadingIndicatorComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nDateFormatPipe \n\nDateFormatPipe \n\nDateFormatPipe  -->\n\nSharedModule->DateFormatPipe \n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nSharedModule->LoadingIndicatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateFormatPipe\n                        \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateFormatPipe\n                        \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {ConfirmDialogComponent} from '@shared/components/confirm-dialog/confirm-dialog.component';\nimport {LoadingIndicatorComponent} from '@shared/components/loading-indicator/loading-indicator.component';\nimport {DateFormatPipe} from '@shared/pipes/date-format.pipe';\nimport {HighlightDirective} from '@shared/directives/highlight.directive';\n\n\n\nconst materialModules = [\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatTooltipModule\n];\n\nconst componentExports = [\n  ConfirmDialogComponent,\n  LoadingIndicatorComponent,\n  DateFormatPipe,\n  HighlightDirective\n];\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ...materialModules,\n    ...componentExports\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ...materialModules,\n    ...componentExports\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id?: string;\n  userId: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskApiService.html":{"url":"injectables/TaskApiService.html","title":"injectable - TaskApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/datasources/remote/task.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpBase: HttpBaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/datasources/remote/task.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpBase\n                                                  \n                                                        \n                                                                        HttpBaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(task: TaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/task.api.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Crear Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            TaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(userId: string, taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/task.api.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Eliminar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/task.api.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Obtener una tarea por la id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/task.api.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Obtener todas las tareas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/task.api.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Actualizar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                task\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tasks'\n                    \n                \n                    \n                        \n                                Defined in src/app/data/datasources/remote/task.api.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {TaskDto} from '@data/dtos/task.dto';\nimport {HttpBaseService} from '@core/http/http-base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskApiService {\n  private endpoint = 'tasks';\n\n  constructor(private httpBase: HttpBaseService) {}\n\n  /**\n   * Obtener todas las tareas\n   * @param userId\n   */\n  getTasks(userId: string): Observable {\n    return this.httpBase.get(`${this.endpoint}?userId=${userId}`);\n  }\n\n  /**\n   * Obtener una tarea por la id\n   * @param id\n   */\n  getTaskById(id: string): Observable {\n    return this.httpBase.get(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Crear Tarea\n   * @param task\n   */\n  createTask(task: TaskDto): Observable {\n    return this.httpBase.post(this.endpoint, task);\n  }\n\n  /**\n   * Actualizar Tarea\n   * @param id\n   * @param task\n   */\n  updateTask(id: string, task: Partial): Observable {\n    return this.httpBase.put(`${this.endpoint}/${id}`, task);\n  }\n\n  /**\n   * Eliminar Tarea\n   * @param userId\n   * @param taskId\n   */\n  deleteTask(userId: string,taskId: string): Observable {\n    return this.httpBase.delete(`${this.endpoint}/${taskId}?userId=${userId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDto.html":{"url":"interfaces/TaskDto.html","title":"interface - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/dtos/task.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TaskDto {\n  id?: string;\n  userId: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  createdAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditDialog.html":{"url":"components/TaskEditDialog.html","title":"component - TaskEditDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskEditDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-edit-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            MatDialogModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                ./task-edit.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-edit.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                taskForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, data: TaskEditDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskEditDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:65\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo tiene error y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                errorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:49\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario con los datos de la tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:82\n                        \n                    \n\n\n            \n                \n                        Cancela la edición y cierra el diálogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSave\n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:73\n                        \n                    \n\n\n            \n                \n                        Guarda los cambios y cierra el diálogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskEditDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Task } from '@domain/models/task.model';\n\nexport interface TaskEditDialogData {\n  task: Task;\n}\n\nexport interface TaskEditDialogResult {\n  title: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-task-edit-dialog',\n  templateUrl: './task-edit.dialog.html',\n  styleUrls: ['./task-edit.dialog.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class TaskEditDialog implements OnInit {\n  taskForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: TaskEditDialogData\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario con los datos de la tarea\n   */\n  private initForm(): void {\n    this.taskForm = this.fb.group({\n      title: [this.data.task.title, [\n        Validators.required,\n        Validators.maxLength(100)\n      ]],\n      description: [this.data.task.description, [\n        Validators.required,\n        Validators.maxLength(500)\n      ]]\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene error y ha sido tocado\n   */\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.taskForm.get(controlName);\n    return !!control && control.hasError(errorName) && (control.dirty || control.touched);\n  }\n\n  /**\n   * Guarda los cambios y cierra el diálogo\n   */\n  onSave(): void {\n    if (this.taskForm.valid) {\n      this.dialogRef.close(this.taskForm.value);\n    }\n  }\n\n  /**\n   * Cancela la edición y cierra el diálogo\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \nEditar tarea\n\n\n  \n    \n      Título\n      \n      \n        El título es obligatorio\n      \n      \n        El título no puede exceder los 100 caracteres\n      \n    \n\n    \n      Descripción\n      \n      \n      \n        La descripción es obligatoria\n      \n      \n        La descripción no puede exceder los 500 caracteres\n      \n    \n  \n\n  \n    \n      Cancelar\n    \n    \n      Guardar cambios\n    \n  \n\n\n    \n\n    \n                \n                    ./task-edit.dialog.scss\n                \n                :host {\n  display: block;\n}\n\nmat-dialog-content {\n  min-width: 350px;\n  max-width: 500px;\n  padding-top: 10px;\n}\n\n.form-field {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\nmat-dialog-actions {\n  padding: 16px 0 8px;\n}\n\n@media (max-width: 600px) {\n  mat-dialog-content {\n    min-width: 300px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Editar tarea            Título                    El título es obligatorio                    El título no puede exceder los 100 caracteres                    Descripción                          La descripción es obligatoria                    La descripción no puede exceder los 500 caracteres                        Cancelar              Guardar cambios      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskEditDialogData.html":{"url":"interfaces/TaskEditDialogData.html","title":"interface - TaskEditDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskEditDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Task } from '@domain/models/task.model';\n\nexport interface TaskEditDialogData {\n  task: Task;\n}\n\nexport interface TaskEditDialogResult {\n  title: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-task-edit-dialog',\n  templateUrl: './task-edit.dialog.html',\n  styleUrls: ['./task-edit.dialog.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class TaskEditDialog implements OnInit {\n  taskForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: TaskEditDialogData\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario con los datos de la tarea\n   */\n  private initForm(): void {\n    this.taskForm = this.fb.group({\n      title: [this.data.task.title, [\n        Validators.required,\n        Validators.maxLength(100)\n      ]],\n      description: [this.data.task.description, [\n        Validators.required,\n        Validators.maxLength(500)\n      ]]\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene error y ha sido tocado\n   */\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.taskForm.get(controlName);\n    return !!control && control.hasError(errorName) && (control.dirty || control.touched);\n  }\n\n  /**\n   * Guarda los cambios y cierra el diálogo\n   */\n  onSave(): void {\n    if (this.taskForm.valid) {\n      this.dialogRef.close(this.taskForm.value);\n    }\n  }\n\n  /**\n   * Cancela la edición y cierra el diálogo\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskEditDialogResult.html":{"url":"interfaces/TaskEditDialogResult.html","title":"interface - TaskEditDialogResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskEditDialogResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Task } from '@domain/models/task.model';\n\nexport interface TaskEditDialogData {\n  task: Task;\n}\n\nexport interface TaskEditDialogResult {\n  title: string;\n  description: string;\n}\n\n@Component({\n  selector: 'app-task-edit-dialog',\n  templateUrl: './task-edit.dialog.html',\n  styleUrls: ['./task-edit.dialog.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class TaskEditDialog implements OnInit {\n  taskForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: TaskEditDialogData\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario con los datos de la tarea\n   */\n  private initForm(): void {\n    this.taskForm = this.fb.group({\n      title: [this.data.task.title, [\n        Validators.required,\n        Validators.maxLength(100)\n      ]],\n      description: [this.data.task.description, [\n        Validators.required,\n        Validators.maxLength(500)\n      ]]\n    });\n  }\n\n  /**\n   * Verifica si un campo tiene error y ha sido tocado\n   */\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.taskForm.get(controlName);\n    return !!control && control.hasError(errorName) && (control.dirty || control.touched);\n  }\n\n  /**\n   * Guarda los cambios y cierra el diálogo\n   */\n  onSave(): void {\n    if (this.taskForm.valid) {\n      this.dialogRef.close(this.taskForm.value);\n    }\n  }\n\n  /**\n   * Cancela la edición y cierra el diálogo\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/tasks/components/task-form/task-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            MatButtonModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatIconModule\n                \n            \n\n            \n                styleUrls\n                ./task-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditMode\n                            \n                            \n                                taskForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEdit\n                            \n                            \n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelEdit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitTask\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Comprueba si un campo tiene errores y ha sido tocado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                errorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario reactivo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Cancela la edición de la tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Envía el formulario para crear o actualizar tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Actualiza el formulario con los datos de la tarea si existe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-form/task-form.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Task } from '../../../../../domain/models/task.model';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ]\n})\nexport class TaskFormComponent implements OnInit, OnChanges {\n  @Input() task: Task | null = null;\n  @Input() loading = false;\n  @Output() submitTask = new EventEmitter();\n  @Output() cancelEdit = new EventEmitter();\n\n  taskForm!: FormGroup;\n  isEditMode = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['task'] && this.taskForm) {\n      this.updateForm();\n    }\n  }\n\n  /**\n   * Inicializa el formulario reactivo\n   */\n  private initForm(): void {\n    this.taskForm = this.fb.group({\n      title: ['', [Validators.required, Validators.maxLength(100)]],\n      description: ['', [Validators.required, Validators.maxLength(500)]]\n    });\n\n    this.updateForm();\n  }\n\n  /**\n   * Actualiza el formulario con los datos de la tarea si existe\n   */\n  private updateForm(): void {\n    this.isEditMode = !!this.task;\n\n    if (this.task) {\n      this.taskForm.patchValue({\n        title: this.task.title,\n        description: this.task.description\n      });\n    } else {\n      this.taskForm.reset();\n    }\n  }\n\n  /**\n   * Envía el formulario para crear o actualizar tarea\n   */\n  onSubmit(): void {\n    if (this.taskForm.invalid || this.loading) {\n      return;\n    }\n\n    const { title, description } = this.taskForm.value;\n    this.submitTask.emit({ title, description });\n\n    if (!this.isEditMode) {\n      this.taskForm.reset();\n    }\n  }\n\n  /**\n   * Cancela la edición de la tarea\n   */\n  onCancel(): void {\n    this.cancelEdit.emit();\n    this.taskForm.reset();\n  }\n\n  /**\n   * Comprueba si un campo tiene errores y ha sido tocado\n   */\n  hasError(controlName: string, errorName: string): boolean {\n    const control = this.taskForm.get(controlName);\n    return !!control && control.hasError(errorName) && (control.dirty || control.touched);\n  }\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Editar tarea' : 'Nueva tarea' }}\n\n  \n    Título\n    \n    \n      El título es obligatorio\n    \n    \n      El título no puede exceder los 100 caracteres\n    \n  \n\n  \n    Descripción\n    \n    \n    \n      La descripción es obligatoria\n    \n    \n      La descripción no puede exceder los 500 caracteres\n    \n  \n\n  \n    \n      Cancelar\n    \n\n    \n      {{ isEditMode ? 'save' : 'add' }}\n      {{ isEditMode ? 'Actualizar' : 'Agregar' }}\n    \n  \n\n\n    \n\n    \n                \n                    ./task-form.component.scss\n                \n                .task-form {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  margin-bottom: 24px;\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 16px;\n    font-size: 1.2rem;\n    color: rgba(0, 0, 0, 0.87);\n  }\n}\n\n.form-field {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\n.black-text {\n  color: black !important;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 8px;\n}\n\n@media (max-width: 600px) {\n  .task-form {\n    padding: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Editar tarea\\' : \\'Nueva tarea\\' }}      Título              El título es obligatorio              El título no puede exceder los 100 caracteres            Descripción                  La descripción es obligatoria              La descripción no puede exceder los 500 caracteres                  Cancelar              {{ isEditMode ? \\'save\\' : \\'add\\' }}      {{ isEditMode ? \\'Actualizar\\' : \\'Agregar\\' }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskItemComponent.html":{"url":"components/TaskItemComponent.html","title":"component - TaskItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/tasks/components/task-item/task-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                            MatCheckboxModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                            DateFormatPipe\n                \n            \n\n            \n                styleUrls\n                ./task-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onStatusChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                statusChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteTask\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editTask\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Emite evento para eliminar la tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Emite evento para editar la tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStatusChange\n                        \n                    \n                \n            \n            \n                \nonStatusChange(completed: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-item/task-item.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Maneja el cambio de estado de la tarea (completada/pendiente)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                completed\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo estado de completado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { Task } from '@domain/models/task.model';\nimport {DateFormatPipe} from '@shared/pipes/date-format.pipe';\n\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    DateFormatPipe,\n  ]\n})\nexport class TaskItemComponent {\n  @Input() task!: Task;\n  @Output() statusChange = new EventEmitter();\n  @Output() editTask = new EventEmitter();\n  @Output() deleteTask = new EventEmitter();\n\n  /**\n   * Maneja el cambio de estado de la tarea (completada/pendiente)\n   * @param completed Nuevo estado de completado\n   */\n  onStatusChange(completed: boolean): void {\n    this.statusChange.emit({ taskId: this.task.id!, completed });\n  }\n\n  /**\n   * Emite evento para editar la tarea\n   */\n  onEdit(): void {\n    this.editTask.emit(this.task);\n  }\n\n  /**\n   * Emite evento para eliminar la tarea\n   */\n  onDelete(): void {\n    this.deleteTask.emit(this.task.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n\n      {{ task.title }}\n\n      \n        \n          edit\n        \n\n        \n          delete\n        \n      \n    \n\n    \n      \n        {{ task.description }}\n      \n\n      \n        \n          event\n          {{ task.createdAt | dateFormat:'mediumDate' }}\n        \n\n        \n          {{ task.completed ? 'Completada' : 'Pendiente' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-item.component.scss\n                \n                .task-card {\n  margin-bottom: 16px;\n  transition: transform 0.2s, box-shadow 0.2s;\n  background-color: white;\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 10px rgba(178, 177, 177, 0.12);\n  }\n}\n\n.task-header {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 8px;\n}\n\n.task-checkbox {\n  margin-right: 8px;\n  margin-top: 3px;\n}\n\n.task-title {\n  flex: 1;\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 500;\n  word-break: break-word;\n\n  &.completed {\n    text-decoration: line-through;\n    color: rgba(255, 255, 255, 0.54);\n  }\n}\n\n.task-actions {\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n}\n\n.task-details {\n  padding-left: 32px;\n}\n\n.task-description {\n  margin-bottom: 12px;\n  white-space: pre-line;\n  color: rgba(0, 0, 0, 0.87);\n\n  &.completed {\n    color: rgba(0, 0, 0, 0.54);\n  }\n}\n\n.task-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.85rem;\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.task-date {\n  display: flex;\n  align-items: center;\n}\n\n.small-icon {\n  font-size: 16px;\n  height: 16px;\n  width: 16px;\n  margin-right: 4px;\n}\n\n.task-status {\n  padding: 2px 8px;\n  border-radius: 12px;\n  background-color: #eeeeee;\n  font-size: 0.75rem;\n\n  &.status-completed {\n    background-color: #e8f5e9;\n    color: #2e7d32;\n  }\n}\n\n@media (max-width: 600px) {\n  .task-details {\n    padding-left: 24px;\n  }\n\n  .task-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ task.title }}                        edit                          delete                                    {{ task.description }}                              event          {{ task.createdAt | dateFormat:\\'mediumDate\\' }}                          {{ task.completed ? \\'Completada\\' : \\'Pendiente\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/tasks/components/task-list/task-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatButtonModule\n                            MatIconModule\n                                LoadingIndicatorComponent\n                                TaskFormComponent\n                                TaskItemComponent\n                \n            \n\n            \n                styleUrls\n                ./task-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                savingTask$\n                            \n                            \n                                selectedTask\n                            \n                            \n                                tasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadUserTasks\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancelEdit\n                            \n                            \n                                onDeleteTask\n                            \n                            \n                                onEditTask\n                            \n                            \n                                onTaskStatusChange\n                            \n                            \n                                onTaskSubmit\n                            \n                            \n                                trackByTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksFacade: TasksFacade, authService: AuthService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksFacade\n                                                  \n                                                        \n                                                                        TasksFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUserTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUserTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Carga las tareas del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelEdit\n                        \n                    \n                \n            \n            \n                \nonCancelEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Cancela la edición de una tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTask\n                        \n                    \n                \n            \n            \n                \nonDeleteTask(taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Muestra diálogo de confirmación y elimina la tarea si se confirma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditTask\n                        \n                    \n                \n            \n            \n                \nonEditTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Selecciona una tarea para editar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskStatusChange\n                        \n                    \n                \n            \n            \n                \nonTaskStatusChange(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de completado de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskSubmit\n                        \n                    \n                \n            \n            \n                \nonTaskSubmit(taskData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Maneja la creación o actualización de una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByTaskId\n                        \n                    \n                \n            \n            \n                \ntrackByTaskId(index: number, task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Función para optimizar el renderizado de listas con *ngFor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savingTask$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/components/task-list/task-list.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router } from '@angular/router';\n\nimport { Task } from '@domain/models/task.model';\nimport { AuthService } from '@core/authentication/services/auth.service';\n\nimport {\n  ConfirmDialogComponent,\n  ConfirmDialogData\n} from '@shared/components/confirm-dialog/confirm-dialog.component';\nimport {\n  LoadingIndicatorComponent\n} from '@shared/components/loading-indicator/loading-indicator.component';\nimport {Observable} from 'rxjs';\nimport {TaskFormComponent} from '@presentation/features/tasks/components/task-form/task-form.component';\nimport {TaskItemComponent} from '@presentation/features/tasks/components/task-item/task-item.component';\nimport {TasksFacade} from '@presentation/features/tasks/tasks.facade';\nimport {AppRoutes} from '@config/app-settings';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    LoadingIndicatorComponent,\n    TaskFormComponent,\n    TaskItemComponent\n  ]\n})\nexport class TaskListComponent implements OnInit {\n  tasks$: Observable;\n  loading$: Observable;\n  savingTask$: Observable;\n\n  selectedTask: Task | null = null;\n\n  constructor(\n    private tasksFacade: TasksFacade,\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private router: Router\n  ) {\n    this.tasks$ = this.tasksFacade.tasks$;\n    this.loading$ = this.tasksFacade.loading$;\n    this.savingTask$ = this.tasksFacade.savingTask$;\n  }\n\n  ngOnInit(): void {\n    this.loadUserTasks();\n  }\n\n  /**\n   * Carga las tareas del usuario actual\n   */\n  private loadUserTasks(): void {\n    const currentUser = this.authService.getCurrentUser();\n    if (currentUser) {\n      this.tasksFacade.loadTasks(currentUser.id!);\n    } else {\n      this.router.navigate([AppRoutes.login]);\n    }\n  }\n\n  /**\n   * Maneja la creación o actualización de una tarea\n   */\n  onTaskSubmit(taskData: { title: string; description: string }): void {\n    const userId = this.authService.getCurrentUser()?.id;\n\n    if (!userId) {\n      return;\n    }\n\n    if (this.selectedTask) {\n      this.tasksFacade.updateTask(this.selectedTask.id!, {\n        ...taskData, userId\n      });\n    } else {\n      this.tasksFacade.createTask(userId, taskData);\n    }\n\n    this.selectedTask = null;\n  }\n\n  /**\n   * Cancela la edición de una tarea\n   */\n  onCancelEdit(): void {\n    this.selectedTask = null;\n  }\n\n  /**\n   * Selecciona una tarea para editar\n   */\n  onEditTask(task: Task): void {\n    this.selectedTask = task;\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  /**\n   * Actualiza el estado de completado de una tarea\n   */\n  onTaskStatusChange(event: { taskId: string; completed: boolean }): void {\n    const userId = this.authService.getCurrentUser()?.id;\n\n    if (!userId) {\n      return;\n    }\n    this.tasksFacade.updateTask(event.taskId, { completed: event.completed, userId });\n  }\n\n  /**\n   * Muestra diálogo de confirmación y elimina la tarea si se confirma\n   */\n  onDeleteTask(taskId: string): void {\n    const dialogData: ConfirmDialogData = {\n      title: 'Eliminar tarea',\n      message: '¿Estás seguro de que deseas eliminar esta tarea? Esta acción no se puede deshacer.',\n      confirmButtonText: 'Eliminar',\n      cancelButtonText: 'Cancelar',\n      confirmButtonColor: 'warn'\n    };\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '400px',\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      const userId = this.authService.getCurrentUser()?.id;\n      if (!userId) {\n        return;\n      }\n      if (result) {\n        this.tasksFacade.deleteTask(userId,taskId);\n      }\n    });\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate([AppRoutes.login]);\n  }\n\n  /**\n   * Función para optimizar el renderizado de listas con *ngFor\n   */\n  trackByTaskId(index: number, task: Task): string {\n    return task.id || '';\n  }\n}\n\n    \n\n    \n        \n  \n    Mis Tareas\n\n    \n      exit_to_app\n      Cerrar sesión\n    \n  \n\n  \n  \n\n  \n    \n      {{ selectedTask ? 'Continúa editando arriba' : 'Tareas pendientes' }}\n      \n        ({{ (tasks$ | async)?.length }})\n      \n    \n\n    \n    \n\n    \n      \n      \n\n      \n        assignment\n        No hay tareas disponibles\n        ¡Agrega una nueva tarea usando el formulario de arriba!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.component.scss\n                \n                .task-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 24px 16px;\n}\n\n.task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n\n  h1 {\n    margin: 0;\n    font-size: 1.8rem;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.87);\n  }\n}\n\n.task-list-container {\n  margin-top: 32px;\n\n  h2 {\n    font-size: 1.3rem;\n    font-weight: 500;\n    margin-bottom: 16px;\n    color: rgba(0, 0, 0, 0.87);\n\n    .task-count {\n      color: rgba(0, 0, 0, 0.54);\n      font-weight: 400;\n    }\n  }\n}\n\n.task-list {\n  min-height: 200px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 24px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  text-align: center;\n\n  .empty-icon {\n    font-size: 48px;\n    height: 48px;\n    width: 48px;\n    margin-bottom: 16px;\n    color: rgba(0, 0, 0, 0.38);\n  }\n\n  p {\n    margin: 0;\n    font-size: 1.1rem;\n    color: rgb(0, 0, 0);\n  }\n\n  .empty-subtitle {\n    margin-top: 8px;\n    font-size: 0.9rem;\n    color: rgb(0, 0, 0);\n  }\n}\n\n@media (max-width: 600px) {\n  .task-container {\n    padding: 16px 12px;\n  }\n\n  .task-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n\n    h1 {\n      font-size: 1.5rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Mis Tareas          exit_to_app      Cerrar sesión                      {{ selectedTask ? \\'Continúa editando arriba\\' : \\'Tareas pendientes\\' }}              ({{ (tasks$ | async)?.length }})                                                assignment        No hay tareas disponibles        ¡Agrega una nueva tarea usando el formulario de arriba!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskMapper.html":{"url":"injectables/TaskMapper.html","title":"injectable - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/mappers/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromDto\n                            \n                            \n                                toDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fromDto\n                        \n                    \n                \n            \n            \n                \nfromDto(dto: TaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/task.mapper.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            TaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDto\n                        \n                    \n                \n            \n            \n                \ntoDto(model: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/task.mapper.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TaskDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@domain/models/task.model';\nimport {TaskDto} from '@data/dtos/task.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskMapper {\n  fromDto(dto: TaskDto): Task {\n    return {\n      id: dto.id,\n      userId: dto.userId,\n      title: dto.title,\n      description: dto.description,\n      completed: dto.completed,\n      createdAt: new Date(dto.createdAt)\n    };\n  }\n\n  toDto(model: Task): TaskDto {\n    return {\n      id: model.id,\n      userId: model.userId,\n      title: model.title,\n      description: model.description,\n      completed: model.completed,\n      createdAt: model.createdAt?.toISOString() ?? new Date().toISOString()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskRepository.html":{"url":"interfaces/TaskRepository.html","title":"interface - TaskRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/task.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createTask\n                                    \n                                \n                                \n                                    \n                                        deleteTask\n                                    \n                                \n                                \n                                    \n                                        getTaskById\n                                    \n                                \n                                \n                                    \n                                        getTasks\n                                    \n                                \n                                \n                                    \n                                        updateTask\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/task.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(userId: string, taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/task.repository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/task.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/task.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/task.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                task\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Task } from '../models/task.model';\n\nexport interface TaskRepository {\n  getTasks(userId: string): Observable;\n  getTaskById(id: string): Observable;\n  createTask(task: Task): Observable;\n  updateTask(id: string, task: Partial): Observable;\n  deleteTask(userId: string,taskId: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepositoryImpl.html":{"url":"injectables/TaskRepositoryImpl.html","title":"injectable - TaskRepositoryImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepositoryImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/repositories/task.repository.impl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskApiService: TaskApiService, taskMapper: TaskMapper)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/repositories/task.repository.impl.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskApiService\n                                                  \n                                                        \n                                                                        TaskApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskMapper\n                                                  \n                                                        \n                                                                        TaskMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/task.repository.impl.ts:41\n                        \n                    \n\n\n            \n                \n                        Crear Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(userId: string, taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/task.repository.impl.ts:65\n                        \n                    \n\n\n            \n                \n                        Eliminar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/task.repository.impl.ts:31\n                        \n                    \n\n\n            \n                \n                        Obtener una tarea por la id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/task.repository.impl.ts:21\n                        \n                    \n\n\n            \n                \n                        Obtener todas las tareas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/task.repository.impl.ts:53\n                        \n                    \n\n\n            \n                \n                        Actualizar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                task\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from, map } from 'rxjs';\nimport { Task } from '@domain/models/task.model';\nimport { TaskRepository } from '@domain/repositories/task.repository';\nimport {TaskApiService} from '@data/datasources/remote/task.api.service';\nimport {TaskMapper} from '@data/mappers/task.mapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskRepositoryImpl implements TaskRepository {\n  constructor(\n    private taskApiService: TaskApiService,\n    private taskMapper: TaskMapper\n  ) {}\n\n  /**\n   * Obtener todas las tareas\n   * @param userId\n   */\n  getTasks(userId: string): Observable {\n    return this.taskApiService.getTasks(userId).pipe(\n      map(taskDtos => taskDtos.map(dto => this.taskMapper.fromDto(dto)))\n    );\n  }\n\n  /**\n   * Obtener una tarea por la id\n   * @param id\n   */\n  getTaskById(id: string): Observable {\n    return this.taskApiService.getTaskById(id).pipe(\n      map(taskDto => this.taskMapper.fromDto(taskDto))\n    );\n  }\n\n  /**\n   * Crear Tarea\n   * @param task\n   */\n  createTask(task: Task): Observable {\n    const dto = this.taskMapper.toDto(task);\n    return this.taskApiService.createTask(dto).pipe(\n      map(responseDto => this.taskMapper.fromDto(responseDto))\n    );\n  }\n\n  /**\n   * Actualizar Tarea\n   * @param id\n   * @param task\n   */\n  updateTask(id: string, task: Partial): Observable {\n    const dto = this.taskMapper.toDto(task as Task);\n    return this.taskApiService.updateTask(id, dto).pipe(\n      map(responseDto => this.taskMapper.fromDto(responseDto))\n    );\n  }\n\n  /**\n   * Eliminar Tarea\n   * @param userId\n   * @param taskId\n   */\n  deleteTask(userId: string,taskId: string): Observable {\n    return this.taskApiService.deleteTask(userId, taskId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksFacade.html":{"url":"injectables/TasksFacade.html","title":"injectable - TasksFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/presentation/features/tasks/tasks.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error$\n                            \n                            \n                                    Private\n                                errorSubject\n                            \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                            \n                                savingTask$\n                            \n                            \n                                    Private\n                                savingTaskSubject\n                            \n                            \n                                tasks$\n                            \n                            \n                                    Private\n                                tasksSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                loadTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getTasksUseCase: GetTasksUseCase, createTaskUseCase: CreateTaskUseCase, updateTaskUseCase: UpdateTaskUseCase, deleteTaskUseCase: DeleteTaskUseCase, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getTasksUseCase\n                                                  \n                                                        \n                                                                        GetTasksUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTaskUseCase\n                                                  \n                                                        \n                                                                        CreateTaskUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTaskUseCase\n                                                  \n                                                        \n                                                                        UpdateTaskUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTaskUseCase\n                                                  \n                                                        \n                                                                        DeleteTaskUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(userId: string, taskData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/tasks.facade.ts:62\n                        \n                    \n\n\n            \n                \n                        Crea una nueva tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario propietario\n\n                                            \n                                        \n                                        \n                                                taskData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de la tarea\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(userId: string, taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/tasks.facade.ts:121\n                        \n                    \n\n\n            \n                \n                        Elimina una tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la tarea a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTasks\n                        \n                    \n                \n            \n            \n                \nloadTasks(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/tasks.facade.ts:36\n                        \n                    \n\n\n            \n                \n                        Carga las tareas de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(taskId: string, taskData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/tasks/tasks.facade.ts:87\n                        \n                    \n\n\n            \n                \n                        Actualiza una tarea existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la tarea\n\n                                            \n                                        \n                                        \n                                                taskData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos parciales de la tarea\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.errorSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savingTask$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.savingTaskSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        savingTaskSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.tasksSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/tasks/tasks.facade.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, catchError, finalize, of, tap } from 'rxjs';\nimport { Task } from '@domain/models/task.model';\nimport { GetTasksUseCase } from '@domain/usecases/task/get-tasks.usecase';\nimport { CreateTaskUseCase } from '@domain/usecases/task/create-task.usecase';\nimport { UpdateTaskUseCase } from '@domain/usecases/task/update-task.usecase';\nimport { DeleteTaskUseCase } from '@domain/usecases/task/delete-task.usecase';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksFacade {\n  private tasksSubject = new BehaviorSubject([]);\n  private loadingSubject = new BehaviorSubject(false);\n  private savingTaskSubject = new BehaviorSubject(false);\n  private errorSubject = new BehaviorSubject(null);\n\n  tasks$ = this.tasksSubject.asObservable();\n  loading$ = this.loadingSubject.asObservable();\n  savingTask$ = this.savingTaskSubject.asObservable();\n  error$ = this.errorSubject.asObservable();\n\n  constructor(\n    private getTasksUseCase: GetTasksUseCase,\n    private createTaskUseCase: CreateTaskUseCase,\n    private updateTaskUseCase: UpdateTaskUseCase,\n    private deleteTaskUseCase: DeleteTaskUseCase,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /**\n   * Carga las tareas de un usuario\n   * @param userId ID del usuario\n   */\n  loadTasks(userId: string): void {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    this.getTasksUseCase.execute(userId).pipe(\n      tap(tasks => {\n        const sortedTasks = [...tasks].sort((a, b) =>\n          new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n        );\n        this.tasksSubject.next(sortedTasks);\n      }),\n      catchError(error => {\n        console.error('Error loading tasks', error);\n        this.errorSubject.next('No se pudieron cargar las tareas. Inténtalo de nuevo.');\n        this.snackBar.open('Error al cargar las tareas', 'Cerrar', { duration: 3000 });\n        return of([]);\n      }),\n      finalize(() => this.loadingSubject.next(false))\n    ).subscribe();\n  }\n\n  /**\n   * Crea una nueva tarea\n   * @param userId ID del usuario propietario\n   * @param taskData Datos de la tarea\n   */\n  createTask(userId: string, taskData: { title: string; description: string }): void {\n    this.savingTaskSubject.next(true);\n    this.errorSubject.next(null);\n\n    this.createTaskUseCase.execute(userId, taskData).pipe(\n      tap(newTask => {\n        const currentTasks = this.tasksSubject.getValue();\n        this.tasksSubject.next([newTask, ...currentTasks]);\n        this.snackBar.open('Tarea creada con éxito', 'Cerrar', { duration: 3000 });\n      }),\n      catchError(error => {\n        console.error('Error creating task', error);\n        this.errorSubject.next('No se pudo crear la tarea. Inténtalo de nuevo.');\n        this.snackBar.open('Error al crear la tarea', 'Cerrar', { duration: 3000 });\n        return of(null);\n      }),\n      finalize(() => this.savingTaskSubject.next(false))\n    ).subscribe();\n  }\n\n  /**\n   * Actualiza una tarea existente\n   * @param taskId ID de la tarea\n   * @param taskData Datos parciales de la tarea\n   */\n  updateTask(taskId: string, taskData: Partial): void {\n    this.savingTaskSubject.next(true);\n    this.errorSubject.next(null);\n\n    this.updateTaskUseCase.execute(taskId, taskData).pipe(\n      tap(updatedTask => {\n        const currentTasks = this.tasksSubject.getValue();\n        const index = currentTasks.findIndex(task => task.id === taskId);\n\n        if (index !== -1) {\n          const updatedTasks = [...currentTasks];\n          updatedTasks[index] = updatedTask;\n          this.tasksSubject.next(updatedTasks);\n        }\n\n        if (taskData.title || taskData.description) {\n          this.snackBar.open('Tarea actualizada con éxito', 'Cerrar', { duration: 3000 });\n        }\n      }),\n      catchError(error => {\n        console.error('Error updating task', error);\n        this.errorSubject.next('No se pudo actualizar la tarea. Inténtalo de nuevo.');\n        this.snackBar.open('Error al actualizar la tarea', 'Cerrar', { duration: 3000 });\n        return of(null);\n      }),\n      finalize(() => this.savingTaskSubject.next(false))\n    ).subscribe();\n  }\n\n  /**\n   * Elimina una tarea\n   * @param userId\n   * @param taskId ID de la tarea a eliminar\n   */\n  deleteTask(userId: string,taskId: string): void {\n    this.savingTaskSubject.next(true);\n    this.errorSubject.next(null);\n\n    this.deleteTaskUseCase.execute(userId,taskId).pipe(\n      tap(() => {\n        const currentTasks = this.tasksSubject.getValue();\n        const updatedTasks = currentTasks.filter(task => task.id !== taskId);\n        this.tasksSubject.next(updatedTasks);\n        this.snackBar.open('Tarea eliminada con éxito', 'Cerrar', { duration: 3000 });\n      }),\n      catchError(error => {\n        console.error('Error deleting task', error);\n        this.errorSubject.next('No se pudo eliminar la tarea. Inténtalo de nuevo.');\n        this.snackBar.open('Error al eliminar la tarea', 'Cerrar', { duration: 3000 });\n        return of(null);\n      }),\n      finalize(() => this.savingTaskSubject.next(false))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nTaskEditDialog\n\nTaskEditDialog\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTaskEditDialog->TasksModule\n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nTasksModule -->\n\nTaskFormComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nTasksFacade\n\nTasksFacade\n\nTasksModule -->\n\nTasksFacade->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/presentation/features/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksFacade\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TaskEditDialog\n                        \n                        \n                            TaskFormComponent\n                        \n                        \n                            TaskItemComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {TasksRoutingModule} from '@presentation/features/tasks/tasks-routing.module';\nimport {TaskListComponent} from '@presentation/features/tasks/components/task-list/task-list.component';\nimport {TaskItemComponent} from '@presentation/features/tasks/components/task-item/task-item.component';\nimport {TaskFormComponent} from '@presentation/features/tasks/components/task-form/task-form.component';\nimport {TaskEditDialog} from '@presentation/features/tasks/dialogs/task-edit/task-edit.dialog';\nimport {TasksFacade} from '@presentation/features/tasks/tasks.facade';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TasksRoutingModule,\n    TaskListComponent,\n    TaskItemComponent,\n    TaskFormComponent,\n    TaskEditDialog\n  ],\n  providers: [\n    TasksFacade\n  ]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/presentation/features/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@core/authentication/guards/auth.guard';\nimport {TaskListComponent} from '@presentation/features/tasks/components/task-list/task-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskListComponent,\n    canActivate: [AuthGuard],\n    title: 'Mis Tareas'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTaskUseCase.html":{"url":"injectables/UpdateTaskUseCase.html","title":"injectable - UpdateTaskUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTaskUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/task/update-task.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepositoryImpl)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/task/update-task.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepositoryImpl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string, taskData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/task/update-task.usecase.ts:17\n                        \n                    \n\n\n            \n                \n                        Actualizar Tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from '@domain/models/task.model';\nimport {TaskRepositoryImpl} from '@data/repositories/task.repository.impl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateTaskUseCase {\n  constructor(private taskRepository: TaskRepositoryImpl) {}\n\n  /**\n   * Actualizar Tarea\n   * @param id\n   * @param taskData\n   */\n  execute(id: string, taskData: Partial): Observable {\n    return this.taskRepository.updateTask(id, taskData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id?: string;\n  email: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserApiService.html":{"url":"injectables/UserApiService.html","title":"injectable - UserApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/datasources/remote/user.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpBase: HttpBaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/datasources/remote/user.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpBase\n                                                  \n                                                        \n                                                                        HttpBaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/user.api.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Crear Usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/datasources/remote/user.api.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Encontrar usuario por Email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users'\n                    \n                \n                    \n                        \n                                Defined in src/app/data/datasources/remote/user.api.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {HttpBaseService} from '@core/http/http-base.service';\nimport {UserDto} from '@data/dtos/user.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApiService {\n  private endpoint = 'users';\n\n  constructor(private httpBase: HttpBaseService) {}\n\n  /**\n   * Encontrar usuario por Email\n   * @param email\n   */\n  findUserByEmail(email: string): Observable {\n    return this.httpBase.get(`${this.endpoint}/${email}`);\n  }\n\n  /**\n   * Crear Usuario\n   * @param email\n   */\n  createUser(email: string): Observable {\n    return this.httpBase.post(this.endpoint, {\n      email,\n      createdAt: new Date().toISOString()\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCreationDialog.html":{"url":"components/UserCreationDialog.html","title":"component - UserCreationDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCreationDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-creation-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                ./user-creation.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-creation.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: UserCreationDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UserCreationDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts:37\n                        \n                    \n\n\n            \n                \n                        Cancela la creación del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts:30\n                        \n                    \n\n\n            \n                \n                        Confirma la creación del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserCreationDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface UserCreationDialogData {\n  email: string;\n}\n\n@Component({\n  selector: 'app-user-creation-dialog',\n  templateUrl: './user-creation.dialog.html',\n  styleUrls: ['./user-creation.dialog.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule\n  ]\n})\nexport class UserCreationDialog {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: UserCreationDialogData\n  ) {}\n\n  /**\n   * Confirma la creación del usuario\n   */\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  /**\n   * Cancela la creación del usuario\n   */\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Crear nuevo usuario\n\n\n  El correo {{ data.email }} no está registrado.\n  ¿Deseas crear un nuevo usuario con este correo?\n\n\n\n  \n    Cancelar\n  \n  \n    Crear usuario\n  \n\n\n    \n\n    \n                \n                    ./user-creation.dialog.scss\n                \n                :host {\n  display: block;\n}\n\nmat-dialog-content {\n  min-width: 300px;\n\n  p {\n    margin: 10px 0;\n    line-height: 1.5;\n  }\n\n  strong {\n    font-weight: 500;\n    word-break: break-all;\n  }\n}\n\nmat-dialog-actions {\n  padding: 16px 0 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Crear nuevo usuario  El correo {{ data.email }} no está registrado.  ¿Deseas crear un nuevo usuario con este correo?      Cancelar        Crear usuario  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'LoadingIndicatorComponent', 'selector': 'app-loading-indicator'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'TaskEditDialog', 'selector': 'app-task-edit-dialog'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'UserCreationDialog', 'selector': 'app-user-creation-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCreationDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCreationDialogData.html":{"url":"interfaces/UserCreationDialogData.html","title":"interface - UserCreationDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCreationDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface UserCreationDialogData {\n  email: string;\n}\n\n@Component({\n  selector: 'app-user-creation-dialog',\n  templateUrl: './user-creation.dialog.html',\n  styleUrls: ['./user-creation.dialog.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule\n  ]\n})\nexport class UserCreationDialog {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: UserCreationDialogData\n  ) {}\n\n  /**\n   * Confirma la creación del usuario\n   */\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  /**\n   * Cancela la creación del usuario\n   */\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/dtos/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserDto {\n  id?: string;\n  email: string;\n  createdAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMapper.html":{"url":"injectables/UserMapper.html","title":"injectable - UserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/mappers/user.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromDto\n                            \n                            \n                                fromDtoList\n                            \n                            \n                                toDto\n                            \n                            \n                                toDtoList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fromDto\n                        \n                    \n                \n            \n            \n                \nfromDto(dto: UserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/user.mapper.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDtoList\n                        \n                    \n                \n            \n            \n                \nfromDtoList(dtos: UserDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/user.mapper.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dtos\n                                            \n                                                        UserDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDto\n                        \n                    \n                \n            \n            \n                \ntoDto(model: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/user.mapper.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDtoList\n                        \n                    \n                \n            \n            \n                \ntoDtoList(models: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/mappers/user.mapper.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                models\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UserDto[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { UserDto } from '../dtos/user.dto';\nimport {User} from '../../domain/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserMapper {\n  fromDto(dto: UserDto): User {\n    if (!dto) {\n      return null as any;\n    }\n\n    return {\n      id: dto.id,\n      email: dto.email,\n      createdAt: dto.createdAt ? new Date(dto.createdAt) : new Date()\n    };\n  }\n\n  toDto(model: User): UserDto {\n    if (!model) {\n      return null as any;\n    }\n\n    return {\n      id: model.id,\n      email: model.email,\n      createdAt: model.createdAt instanceof Date\n        ? model.createdAt.toISOString()\n        : model.createdAt\n    };\n  }\n\n  fromDtoList(dtos: UserDto[]): User[] {\n    if (!dtos || !Array.isArray(dtos)) {\n      return [];\n    }\n\n    return dtos.map(dto => this.fromDto(dto));\n  }\n\n  toDtoList(models: User[]): UserDto[] {\n    if (!models || !Array.isArray(models)) {\n      return [];\n    }\n\n    return models.map(model => this.toDto(model));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepository.html":{"url":"interfaces/UserRepository.html","title":"interface - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/user.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/user.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport {User} from '../models/user.model';\n\nexport interface UserRepository {\n  findUserByEmail(email: string): Observable;\n  createUser(email: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepositoryImpl.html":{"url":"injectables/UserRepositoryImpl.html","title":"injectable - UserRepositoryImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepositoryImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/repositories/user.repository.impl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userApiService: UserApiService, userMapper: UserMapper)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/repositories/user.repository.impl.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userMapper\n                                                  \n                                                        \n                                                                        UserMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/user.repository.impl.ts:35\n                        \n                    \n\n\n            \n                \n                        Crear Usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/repositories/user.repository.impl.ts:21\n                        \n                    \n\n\n            \n                \n                        Encontrar usuario por Email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, catchError, map, of } from 'rxjs';\nimport { UserRepository } from '@domain/repositories/user.repository';\nimport {User} from '@domain/models/user.model';\nimport {UserApiService} from '@data/datasources/remote/user.api.service';\nimport {UserMapper} from '@data/mappers/user.mapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRepositoryImpl implements UserRepository {\n  constructor(\n    private userApiService: UserApiService,\n    private userMapper: UserMapper\n  ) {}\n\n  /**\n   * Encontrar usuario por Email\n   * @param email\n   */\n  findUserByEmail(email: string): Observable {\n    return this.userApiService.findUserByEmail(email).pipe(\n      map(userDto => userDto ? this.userMapper.fromDto(userDto) : null),\n      catchError(error => {\n        console.error('Error finding user by email:', error);\n        return of(null);\n      })\n    );\n  }\n\n  /**\n   * Crear Usuario\n   * @param email\n   */\n  createUser(email: string): Observable {\n    return this.userApiService.createUser(email).pipe(\n      map(userDto => this.userMapper.fromDto(userDto))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/config/app-settings.ts\n            \n            variable\n            AppRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/config/app-settings.ts\n            \n            variable\n            AppSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/config/error-messages.ts\n            \n            variable\n            AuthErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/config/error-messages.ts\n            \n            variable\n            ModulesErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/config/error-messages.ts\n            \n            variable\n            ServiceErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/config/error-messages.ts\n            \n            variable\n            ValidationErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/http/http-base.service.ts\n            \n            injectable\n            HttpBaseService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                        src/app/core/http/interceptors/error.interceptor.ts\n            \n            variable\n            errorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/http/interceptors/http.token.interceptor.ts\n            \n            variable\n            httpTokenInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/data/datasources/remote/task.api.service.ts\n            \n            injectable\n            TaskApiService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/data/datasources/remote/user.api.service.ts\n            \n            injectable\n            UserApiService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/data/dtos/task.dto.ts\n            \n            interface\n            TaskDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/data/dtos/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data/mappers/task.mapper.ts\n            \n            injectable\n            TaskMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/mappers/user.mapper.ts\n            \n            injectable\n            UserMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/repositories/task.repository.impl.ts\n            \n            injectable\n            TaskRepositoryImpl\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/data/repositories/user.repository.impl.ts\n            \n            injectable\n            UserRepositoryImpl\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/domain/models/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/domain/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/task.repository.ts\n            \n            interface\n            TaskRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/user.repository.ts\n            \n            interface\n            UserRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/task/create-task.usecase.ts\n            \n            injectable\n            CreateTaskUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/task/delete-task.usecase.ts\n            \n            injectable\n            DeleteTaskUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/task/get-tasks.usecase.ts\n            \n            injectable\n            GetTasksUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/task/update-task.usecase.ts\n            \n            injectable\n            UpdateTaskUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/user/create-user.usecase.ts\n            \n            injectable\n            CreateUserUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/user/find-user.usecase.ts\n            \n            injectable\n            FindUserUseCase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/presentation/features/auth/auth.facade.ts\n            \n            injectable\n            AuthFacade\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/presentation/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts\n            \n            component\n            UserCreationDialog\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/presentation/features/auth/dialogs/user-creation/user-creation.dialog.ts\n            \n            interface\n            UserCreationDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/components/task-form/task-form.component.ts\n            \n            component\n            TaskFormComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/components/task-item/task-item.component.ts\n            \n            component\n            TaskItemComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/components/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n            \n            component\n            TaskEditDialog\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n            \n            interface\n            TaskEditDialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/dialogs/task-edit/task-edit.dialog.ts\n            \n            interface\n            TaskEditDialogResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/presentation/features/tasks/tasks.facade.ts\n            \n            injectable\n            TasksFacade\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            interface\n            ConfirmDialogData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/loading-indicator/loading-indicator.component.ts\n            \n            component\n            LoadingIndicatorComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/date-format.pipe.ts\n            \n            pipe\n            DateFormatPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/shared.module.ts\n            \n            variable\n            componentExports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/shared.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.14\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.14\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAplicación de Gestión de Tareas - Challenge_Atom\nVisión general\nEsta aplicación permite a los usuarios gestionar sus tareas diarias, con capacidad para crear, editar, eliminar y marcar tareas como completadas. Implementa una arquitectura limpia con separación de responsabilidades.\nTecnologías\n\nAngular 18\nTypeScript\nFirebase (Hosting, Firestore, Cloud Function)\nAngular Material\n\nRequisitos previos\n\nNode.js (v18+)\nAngular CLI (v17+)\nFirebase CLI (opcional para desarrollo local)\n\nInstalación\n\nClonar el repositorio: git clone https://github.com/beto-dt/challenge_atom_frontend\nInstalar dependencias: npm install\nAgregar a la raiz los archivos .env y .env.production (EL archivo de las secret va a estar adjuntado en el correo)\nEjecutamos el siguiente comando para generar el archivo environment.ts\nnpm run config => para generar las secret en modo local\nnpm run config:prod => para generar las secret en modo production\n\n\nIniciar servidor de proyecto: npm run start\n\nEstructura del proyecto\nLa aplicación sigue arquitectura limpia con las siguientes capas:\n\nPresentación: Componentes, pages, facades\nDominio: Modelos, interfaces de repositorios\nData: Implementaciones de repositorios, servicios API\nCore: Servicios compartidos globales\n\nCaracterísticas\n\nAutenticación simplificada (solo email)\nGestión completa de tareas (CRUD)\nDiseño responsive\nInterfaz de usuario intuitiva\nGenerador del archivo environment a partir del archivo .env(secrets)'\n\nSubir a Hosting Firebase\n\nNos logemoas en Firebas : firbase login\nContruimos el proyecto : npm run build\nSubir el proyecto a Firebase : firebase deploy\n\n\nComo dato adicional debe estar apuntando en el archivo firebase.json a esta dirección de carpetas => 'dist/tareas-app/browser'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Luis Alberto De La Torre\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nUserCreationDialog\n\nUserCreationDialog\n\nAuthModule -->\n\nUserCreationDialog->AuthModule\n\n\n\n\n\nAuthFacade\n\nAuthFacade\n\nAuthModule -->\n\nAuthFacade->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nHttpBaseService\n\nHttpBaseService\n\nCoreModule -->\n\nHttpBaseService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nDateFormatPipe\n\nDateFormatPipe\n\nSharedModule -->\n\nDateFormatPipe->SharedModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nSharedModule -->\n\nLoadingIndicatorComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nDateFormatPipe \n\nDateFormatPipe \n\nDateFormatPipe  -->\n\nSharedModule->DateFormatPipe \n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nSharedModule->LoadingIndicatorComponent \n\n\n\n\n\nTaskEditDialog\n\nTaskEditDialog\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTaskEditDialog->TasksModule\n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nTasksModule -->\n\nTaskFormComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nTasksFacade\n\nTasksFacade\n\nTasksModule -->\n\nTasksFacade->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AppRoutes   (src/.../app-settings.ts)\n                        \n                        \n                            AppSettings   (src/.../app-settings.ts)\n                        \n                        \n                            AuthErrors   (src/.../error-messages.ts)\n                        \n                        \n                            componentExports   (src/.../shared.module.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorInterceptor   (src/.../error.interceptor.ts)\n                        \n                        \n                            httpTokenInterceptor   (src/.../http.token.interceptor.ts)\n                        \n                        \n                            materialModules   (src/.../shared.module.ts)\n                        \n                        \n                            ModulesErrors   (src/.../error-messages.ts)\n                        \n                        \n                            ServiceErrors   (src/.../error-messages.ts)\n                        \n                        \n                            ValidationErrors   (src/.../error-messages.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(\n      routes,\n      withViewTransitions(),\n      withComponentInputBinding()\n    ),\n\n    provideHttpClient(\n      withInterceptors([\n        httpTokenInterceptor,\n        errorInterceptor\n      ])\n    ),\n\n    provideAnimations(),\n\n    provideClientHydration(),\n\n    {\n      provide: ErrorHandler,\n      useClass: ErrorHandlerService\n    },\n\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      }\n    },\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/config/app-settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  login: '/login',\n  tasks: '/tasks',\n  notFound: '/not-found'\n}\n                    \n                \n\n            \n                \n                    Rutas principales de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AppSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  appName: 'TaskManager',\n  storage: {\n    userKey: 'currentUser',\n    tasksKey: 'userTasks'\n  },\n  pagination: {\n    defaultPageSize: 10,\n    pageSizeOptions: [5, 10, 25, 50]\n  },\n  durations: {\n    toastMessage: 3000,\n    loadingTimeout: 30000\n  },\n  validation: {\n    minPasswordLength: 6,\n    maxTitleLength: 100,\n    maxDescriptionLength: 500\n  },\n  dateFormat: {\n    default: 'dd/MM/yyyy',\n    withTime: 'dd/MM/yyyy HH:mm',\n    iso: 'yyyy-MM-dd'\n  }\n}\n                    \n                \n\n            \n                \n                    Configuraciones generales de la aplicación\n\n                \n            \n\n        \n    \n\n    src/app/config/error-messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  session: 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.',\n  occasional_error: 'Ha ocurrido un error inesperado',\n  bad_request: 'Solicitud incorrecta',\n  unauthorized: 'No autorizado',\n  access_prohibited: 'Acceso prohibido',\n  resource_not_found: 'Recurso no encontrado',\n  internal_server_error: 'Error interno del servidor',\n  no_internet_connection: 'Sin conexión a Internet'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModulesErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  code_module_errpr: 'CoreModule ya está cargado. Debe importarse solo en AppModule.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ServiceErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  session: 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.',\n  occasional_error: 'Ha ocurrido un error. Por favor, inténtalo de nuevo.',\n  incorrect_data: 'Datos incorrectos. Verifica la información e inténtalo de nuevo.',\n  resource_not_found: 'Recurso no encontrado',\n  access_prohibited: 'No tienes permisos para realizar esta acción.',\n  internal_server_error: 'Error en el servidor. Inténtalo más tarde.',\n  no_internet_connection: 'No se pudo conectar con el servidor. Verifica tu conexión a Internet.'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  required: 'Este campo es obligatorio',\n  email: 'Por favor, introduce un correo electrónico válido',\n}\n                    \n                \n\n            \n                \n                    Mensajes de error para validación de formularios\n\n                \n            \n\n        \n    \n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        componentExports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConfirmDialogComponent,\n  LoadingIndicatorComponent,\n  DateFormatPipe,\n  HighlightDirective\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        materialModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatTooltipModule\n]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://api-hh3d764h5q-uc.a.run.app/api',\n  firebase: {\n    apiKey: 'AIzaSyBUBMvqudQ6npv1vJEFCAFTu4gw2T0MQRI',\n    authDomain: 'challengeatombackend.firebaseapp.com',\n    projectId: 'tu-challengeatombackend',\n    storageBucket: 'challengeatombackend.firebasestorage.app',\n    messagingSenderId: '231269805480',\n    appId: '1:231269805480:web:3d1f9eaa6ef503c5abc19d'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/http/interceptors/error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (request, next) => {\n  const snackBar = inject(MatSnackBar);\n  const router = inject(Router);\n  const authService = inject(AuthService);\n\n  const showErrorMessage = (message: string): void => {\n    snackBar.open(message, 'Cerrar', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      panelClass: ['error-snackbar']\n    });\n  };\n\n  const handleUnauthorizedError = (): void => {\n    authService.logout();\n    router.navigate([AppRoutes.login]);\n    showErrorMessage(AuthErrors.session);\n  };\n\n  return next(request).pipe(\n    catchError((error: HttpErrorResponse) => {\n      let errorMessage = AuthErrors.occasional_error;\n\n      switch (error.status) {\n        case 400:\n          errorMessage = AuthErrors.bad_request;\n          break;\n        case 401:\n          errorMessage = AuthErrors.unauthorized;\n          handleUnauthorizedError();\n          break;\n        case 403:\n          errorMessage = AuthErrors.access_prohibited;\n          break;\n        case 404:\n          errorMessage = AuthErrors.resource_not_found;\n          break;\n        case 500:\n          errorMessage = AuthErrors.internal_server_error;\n          break;\n        default:\n          if (!navigator.onLine) {\n            errorMessage = AuthErrors.no_internet_connection;\n          } else if (error.error instanceof ErrorEvent) {\n            errorMessage = `Error: ${error.error.message}`;\n          } else if (error.error && typeof error.error === 'object' && error.error.message) {\n            errorMessage = error.error.message;\n          }\n      }\n\n      if (error.status !== 401) {\n        showErrorMessage(errorMessage);\n      }\n\n      console.error('Error HTTP:', error);\n\n      return throwError(() => error);\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/http/interceptors/http.token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpTokenInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (request, next) => {\n  const authService = inject(AuthService);\n\n  const currentUser = authService.getCurrentUser();\n\n  if (currentUser) {\n    request = request.clone({\n      setHeaders: {\n        'User-ID': currentUser.id || '',\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n  }\n\n  return next(request);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
